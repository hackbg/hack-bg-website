{"hash":"8426b1cb97ef92b718c73e625fd5d46ddafd7cc9","data":{"author":{"name":"Aleksandar Hadzhiyski","id":"12","path":"/author/aleksandar/","description":"Aleksandar is a junior software engineer with a great interest in blockchain development and cryptocurrencies. Having a university background in electrical engineering, he applies his academic experience and classical problem-solving approach to the field of software engineering while always trying to learn.","avatars":{"avatar96":"https://secure.gravatar.com/avatar/e3fc7a310e40a8ff8846dbcd04382618?s=96&d=identicon&r=g"},"belongsTo":{"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"date":"2021-05-11T14:25:31","id":"3077","title":"Cryptocurrencies and privacy [part 2]","path":"/blog/cryptocurrencies-and-privacy-part-2/","content":"\n<h2>Privacy-enhancing cryptocurrencies</h2>\n\n\n\n<p>While the previous <a href=\"https://hack.bg/blog/lets-talk-blockchain/cryptocurrencies-and-privacy/\" class=\"rank-math-link\">blog post</a> concerned itself with privacy-enhancing Bitcoin-compatible protocols, in this one we will analyze a different approach to increase privacy, namely privacy-enhancing cryptocurrencies. The main distinguishing features of them are:</p>\n\n\n\n<ul><li>They improve on older cryptocurrencies by placing privacy at the core of their new design</li><li>They aren’t backward compatible since they’re a whole new cryptocurrency</li><li>They have inherently higher complexity</li></ul>\n\n\n\n<p>So far, so good. Those new privacy-enhanced cryptocurrencies sound like a nice deal, what are some real-world examples then? Well, let’s point out the most prominent ones and then analyze them closer. We’ll be scratching on Zerocoin, Zerocash, and Monero.</p>\n\n\n\n<h3>Zerocoin</h3>\n\n\n\n<p>The first one, <a href=\"http://zerocoin.org/\" class=\"rank-math-link\">Zerocoin</a>, is more of a protocol-oriented project. Quoting its creators as to what its aim is: </p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Zerocoin is a project to fix a major weakness in Bitcoin: the lack of privacy guarantees we take for granted in using credit cards and cash. Our goal is to build a cryptocurrency where your neighbors, friends, and enemies can’t see what you bought or for how much.</p><cite>Zerocoin website</cite></blockquote>\n\n\n\n<p>This very cool statement is backed by the mixing capability implemented in the <a href=\"https://ieeexplore.ieee.org/document/6547123\" class=\"rank-math-link\">protocol</a> itself. Now, let’s open  Zerocoin’s hatch and see how its gears turn. The main idea is that there are two types of coins &#8211; a Basecoin (Bitcoin or some other altcoin) and a Zerocoin which serves as an extension of the Basecoin. Basecoins can be swapped for Zerocoins and vice versa. If you go back to the <a href=\"https://hack.bg/blog/lets-talk-blockchain/cryptocurrencies-and-privacy/\" class=\"rank-math-link\">first part</a> of this post, you will see that this serves pretty much the same purpose as coin mixing and it aims to remove the linkability of the initial Basecoins. You can find a rough visualization of what happens when using only the Basecoin vs Basecoin + Zerocoin. </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"333\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-1024x333.png\" alt=\"\" class=\"wp-image-3116\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-1024x333.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-300x97.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-768x250.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-1536x499.png 1536w, https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-1038x337.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability.png 1828w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Transaction linkability of a Basecoin(BTC) vs. Zerocoin</figcaption></figure></div>\n\n\n\n<p>The idea consists of two parts: initially, a user converts a Basecoin into a Zerocoin, and then, in the future, the same user can use the Zerocoin to turn it back into a Basecoin. The protocol guarantees a curious user can’t find out exactly which Zerocoin was used to create a Basecoin, hence the initial “creator” of the Zerocoin can’t be linked. The first part (minting) is achieved through a classical cryptographic commitment. To mint a Zerocoin, a user must generate a serial number <strong><em>S</em></strong> which will be used in the future to spend the Zerocoin (this prevents double-spending), and a random secret <strong><em>r</em></strong> which must remain private (this enforces the unlinkability when spending). The commitment then is calculated as <em><strong>c := g^(S) * h^(r)</strong> </em>(<strong><em>g</em></strong> and <strong><em>h</em></strong> being hash functions) which ensures that neither <strong><em>S</em></strong> nor <strong><em>r</em></strong> can be computed by only knowing the commitment <strong><em>c</em></strong>. Once this is done, a user posts the commitment together with the hash of the Basecoin which they wish to convert to Zerocoin, and if the Basecoin is owned by them, then the minting transaction is accepted and posted on the blockchain.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"272\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-1024x272.png\" alt=\"\" class=\"wp-image-3117\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-1024x272.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-300x80.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-768x204.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-1536x408.png 1536w, https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-1038x275.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing.png 1828w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Zerocoin minting process</figcaption></figure></div>\n\n\n\n<p>So far, unlinkability hasn’t been achieved. This is done in the second part (spending). To accomplish this, the protocol utilizes several techniques, one of which is an accumulator. A closer look at how accumulators operate is shown below.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"642\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators-1024x642.png\" alt=\"\" class=\"wp-image-3118\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators-1024x642.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators-300x188.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators-768x481.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators-919x576.png 919w, https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Basic overview of an accumulator function</figcaption></figure></div>\n\n\n\n<p>Generally, the accumulator in the Zerocoin protocol is used for accumulating every mint transaction on the blockchain as part of the spending phase. So, after this slight technical detour, let’s look at how Alice can spend her Zerocoins while maintaining unlinkability.</p>\n\n\n\n<ol><li>Firstly, she would have to publish the serial number <strong><em>S</em></strong> she generated at the minting phase &#8211; remember that <strong><em>c := g^(S) * h^(r)</em></strong> </li><li>Then, she should accumulate all previously minted Zerocoins (their commitments) on the blockchain &#8211; <strong><em>a</em></strong></li><li>After that, Alice will compute the public witness <strong><em>w</em></strong> for her coin</li><li>Lastly, she must create a ZKP stating that &#8220;she knows a random secret <strong><em>r</em></strong> such that a coin <strong><em>c</em></strong> is one of the minted Zerocoins”. She keeps <strong><em>r</em></strong> and <strong><em>c</em></strong> secret, of course. <br><br>The ZKP is the interesting part since it uses a logical disjunction of ZKPs for all of the Zerocoins and the whole ZKP is evaluated as true if one ZKP is valid while not revealing exactly which ZKP is valid.</li></ol>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"577\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP-1024x577.png\" alt=\"\" class=\"wp-image-3119\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP-1024x577.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP-300x169.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP-768x433.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP-1023x576.png 1023w, https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Process of computing a disjunction of ZKPs</figcaption></figure></div>\n\n\n\n<p>Of course, the protocol itself doesn’t guarantee absolute unlinkability if used poorly. For once, if there are only a few people using Zerocoins, then the overall ZKP from step 4 would result in very fragile unlinkability. Another point of failure is user habits. The effectiveness of the protocol depends on the users making smart decisions, meaning that if a single user mints a Zerocoin from one address and then simply spends a Zerocoin from the same address, nothing is achieved.</p>\n\n\n\n<h3>Zerocash</h3>\n\n\n\n<p>If you visit Zerocoin’s official website, you will see the information that the protocol has been succeeded by a fully functional project called <a href=\"https://z.cash/\" class=\"rank-math-link\">Zerocash</a>. So, what are the improvements?</p>\n\n\n\n<p>The main change is that Zerocash runs on its own and doesn’t need a Basecoin to function. Additionally, it relies on better cryptographic proof techniques (zk-SNARKs). At its core, Zerocash makes use of the notion that there are 2 address types &#8211; private (z-addresses) and transparent (t-addresses) ones which allow 4 different transaction types.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"375\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses-1024x375.png\" alt=\"\" class=\"wp-image-3120\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses-1024x375.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses-300x110.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses-768x281.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses-1038x380.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Zcash transaction types</figcaption></figure></div>\n\n\n\n<p>The most interesting of these 4 transaction types If the Z-to-Z transaction which quoting Zerocash’s website is specified as follows:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>A Z-to-Z transaction appears on the public blockchain, so it is known to have occurred and that the fees were paid. But the addresses, transaction amount, and the memo field are all encrypted and not publicly visible. This type of encryption is only possible through the use of zero-knowledge proofs.<br>The owner of an address may choose to disclose z-address and transaction details with trusted third parties — think auditory and compliance needs — through the use of view keys and payment disclosure.</p><cite>Zerocash website</cite></blockquote>\n\n\n\n<p>So far, Zerocash looks better than Zerocoin, but it also has some drawbacks. The main one being the inherent need for a secret random input needed to generate public parameters during the setup phase and the importance of these inputs being securely destroyed. The reason for this is if someone gets ahold of those secrets, then that person could <a href=\"http://zerocash-project.org/q_and_a#can-one-put-a-backdoor-in-zerocash\" class=\"rank-math-link\">forge</a> coins arbitrarily. This hasn’t happened yet, so we can assume the system has been safe so far.</p>\n\n\n\n<h3>Monero</h3>\n\n\n\n<p>But what if we are looking for a cryptocurrency that is even stricter when it comes to privacy. How about something along these lines:</p>\n\n\n\n<ul><li>It’s a set of open-source privacy-focused protocols that were initially built upon Bytecoin/CryptoNode code</li><li>There’s an accepted hard-fork approximately twice a year used as a testing environment for new functions</li><li>The community interest is increasing constantly and it’s very well maintained</li></ul>\n\n\n\n<p>Well, this is <a href=\"https://www.getmonero.org/\" class=\"rank-math-link\">Monero</a> for you. It has its roots in this famous bitcointalk forum <a href=\"https://bitcointalk.org/index.php?topic=563821.0\" class=\"rank-math-link\">thread</a>. Nowadays, Monero developers have implemented several very important features that make the cryptocurrency arguably the best privacy-oriented one out there: it provides stealth addresses which aren’t the typical public addresses as in other cryptos, the transaction information is confidential meaning the transacted amounts aren&#8217;t publicly visible, and it utilizes ring signatures.</p>\n\n\n\n<p>Let’s look at the first feature, <strong><em>stealth addresses</em></strong>. Most cryptocurrencies promote the usage of a new address for every payment, however, this has often proven to be ineffective in maintaining privacy. Firstly, due to the work in modern heuristics that aim to link addresses and secondly, because at some point one user has to communicate an address to another user or service. This is why Monero tackled this problem by creating a new address management system. Stealth addresses function by allowing a user to post a general public “STEALTHADDR” which other users can use as a blueprint to create arbitrarily many different addresses and send coins to them. These coins will be accessible only by the user holding the private key to the blueprint “STEALTHADDR”. This way, a curious user can’t link different fresh addresses to the initial “STEALTHADDR”.</p>\n\n\n\n<p>The math behind this isn’t too complex. Let’s say Alice creates a pair of private keys &#8211; <em><strong>(a, b)</strong></em> and publishes a pair of public keys &#8211; <em><strong>(g^a, g^b)</strong></em>. After that, Bob can use those public keys to create as many fresh addresses as he wants and send money to Alice through those. For a new address, Bob generates a private random secret <strong><em>r</em></strong>, computes <strong><em>f = g^(a * r)</em></strong>, and then the new address would be <strong><em>P = g^(H(f)) * g^b</em></strong>. When sending coins, Bob also includes <strong><em>g^r</em></strong>. Now, Alice can compute the private key <strong><em>p</em></strong> for the new address <strong><em>P</em></strong> simply by calculating <strong><em>p = H(g^(a * r)) + b</em></strong> and spend the coins.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"249\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-6-1024x249.png\" alt=\"\" class=\"wp-image-3135\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-6-1024x249.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-6-300x73.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-6-768x187.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-6-1038x253.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-6.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Stealth addresses</figcaption></figure>\n\n\n\n<p>The next important feature is <strong><em>confidential transactions</em></strong>. Monero has correctly focused on hiding the transacted amount because that piece of information is quite heavily utilized in modern linking heuristic methods. This is achieved via the homomorphic property of commitments (confidential transactions in Monero). Besides the essential hiding and binding properties, the homomorphic one is applied so that if there are, for example, 3 commitments &#8211; a single commit for 1 coin, another commit for 4 coins, and another for 6 coins, their combination would result in a single commitment for 11 coins.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"244\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-7-1-1024x244.png\" alt=\"\" class=\"wp-image-3123\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-7-1-1024x244.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-7-1-300x71.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-7-1-768x183.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-7-1-1038x247.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-7-1.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Homomorphic property of a Pedersen commitment</figcaption></figure></div>\n\n\n\n<p>Let’s now apply this to Monero’s confidential transactions in a practical example.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"261\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-8-1024x261.png\" alt=\"\" class=\"wp-image-3124\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-8-1024x261.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-8-300x76.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-8-768x196.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-8-1038x265.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-8.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Confidential transaction example</figcaption></figure></div>\n\n\n\n<p>Now, for the last essential part of Monero &#8211; <strong><em>ring signatures</em></strong>. To introduce this concept, we can start off with an example of a typical Bitcoin transaction. In it, every input has a deterministic mapping to a single output. This makes the system quite simple and easy to use at the cost of enabling transaction tracking. In contrast to this approach, ring signatures provide a cryptographic mechanism that allows many outputs to be mapped to a single input. Monero basically manages to create a transaction signature via ring signatures that:</p>\n\n\n\n<ul><li>Proves that one of the secret keys was used to make a transaction</li><li>Doesn’t reveal the public key that was used in the transaction</li><li>Prevents the usage of the same public key in future transactions</li></ul>\n\n\n\n<p>To best illustrate how this works, imagine that you are given a bucket of lego pieces that can be combined to form a circle. You also have your very own lego piece which is identical to all of the others in the bucket, but only you know that it’s your own piece. Now, you take random pieces from the bucket and, together with your piece, build a circle without anyone looking. You then take the circle, give it to someone and ask them to pick out exactly your piece. Intuitively, the success of the person depends on pure chance &#8211; the fewer pieces in the circle, the greater the chance of the person guessing which piece is exactly yours. Not only that, but if you always use the same piece, the person guessing might start noticing it, so that’s why it’s important to also use a different personal piece each time.</p>\n\n\n\n<p>This non-technical analogy, while basic, highlights the most essential aspects of ring signatures in Monero. For a short summary of the math behind the mechanism, you could check out the picture below.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys-1024x903.png\" alt=\"\" class=\"wp-image-3125\" width=\"1024\" height=\"903\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys-1024x903.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys-300x265.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys-768x678.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys-653x576.png 653w, https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Basic example of a ring signature transaction</figcaption></figure></div>\n\n\n\n<h3>Conclusion</h3>\n\n\n\n<p>The ongoing research focusing on privacy in cryptocurrencies is very active. As presented in the first part of this blog post, there are several viable solutions that focus on making privacy-enhancing technology compatible with current cryptocurrencies. But, many active projects have taken this a step further and succeeded in creating new cryptocurrencies which are all about keeping coin users anonymous.<br>With the risk of repeating myself, regardless of whether you think anonymity in cryptocurrencies is important or not, privacy is something that shouldn’t be neglected! It’s such a hot topic in today’s tech world for a reason. As long as cryptocurrencies continue to strive towards being a viable and even better alternative to fiat currencies, they have to at least try and be better in every aspect possible. Of course, the physical aspect of cash seems rather impossible to replicate via a blockchain. Privacy, however, is something that could and must be improved and hopefully, developers will continue to improve this aspect of the technology that is the future &#8211; cryptocurrencies!</p>\n","excerpt":"<p>Privacy-enhancing cryptocurrencies While the previous blog post concerned itself with privacy-enhancing Bitcoin-compatible protocols, in this one we will analyze a [&hellip;]</p>\n","categories":[{"id":"158","title":"Lets Talk Blockchain","path":"/category/lets-talk-blockchain/"}],"author":{"name":"Aleksandar Hadzhiyski","path":"/author/aleksandar/"}}},{"node":{"date":"2021-04-22T11:00:00","id":"3022","title":"Cryptocurrencies and privacy [part 1]","path":"/blog/cryptocurrencies-and-privacy/","content":"\n<h2>Privacy-enhancing Bitcoin-compatible protocols</h2>\n\n\n\n<p>Nowadays, privacy has become such an important topic within the many technologies we use in our lives that it’s only natural for us to ask the question: <strong>Where does privacy stand in the world of cryptocurrencies?</strong> The intuitive answer of many people unfamiliar with blockchain technology is that cryptocurrencies provide full anonymity and privacy. Similarly to a famous pawnshop owner bargaining on their tv show: \n<em>“Anonymity? Sorry, best I can do is pseudonymity.”</em></p>\n\n\n\n<p>As a starting point, let’s define what anonymity means in the context of cryptocurrencies. The term could be explained as the sum of pseudonymity and unlinkability.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity.png\" alt=\"privacy through anonimity in cryptocurrencies\" class=\"wp-image-3024\" width=\"748\" height=\"287\" srcset=\"https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity.png 1495w, https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity-300x115.png 300w, https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity-1024x393.png 1024w, https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity-768x295.png 768w, https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity-1038x399.png 1038w\" sizes=\"(max-width: 748px) 100vw, 748px\" /><figcaption>Anonymity in cryptocurrencies</figcaption></figure></div>\n\n\n\n<p>Those two concepts are very closely intertwined and it’s important to point out that the latter isn’t simply a nice-to-have rather an essential part. I’ve heard many times the incorrect assumption that even if one’s pseudonyms (blockchain addresses) are linked, how could that possibly lead to the person behind those pseudonyms. In reality, many cryptoasset services hold some kind of personal identifiable information (PII). All it takes is one pseudonym to be linked to the PII and the thread unravels. Let’s take a closer look at the most famous cryptocurrency &#8211; Bitcoin and why it’s not fully anonymous.</p>\n\n\n\n<ul><li>Firstly, cryptoassets built on a blockchain are public and that includes both transactions and addresses.</li><li>Secondly, addresses could be linked via clustering heuristics used in different tools such as Chainalysis, CipherTrace, and GraphSense.</li><li>Lastly, as previously mentioned, many cryptoasset services hold PII that lead back to the people behind addresses.</li></ul>\n\n\n\n<p>All of these points lead to the fact that transactions along with senders and recipients of payments could be linked to specific users. It’s easy to see that Bitcoin is missing the unlinkability part from the anonymity equation. Not only that but also the offered privacy is arguably worse than that of traditional banking. In the end, the underlying blockchain put together with the data saved from different exchanges creates somewhat of a privacy hell.</p>\n\n\n\n<p>I think that at this point we can agree that although the early promises and expectations from cryptoassets were for anonymity, linkable payments are the de facto status quo. Looking back at more than a decade of cryptoassets, we can observe an ever-increasing acceptance of cryptocurrencies as means of payment. However, with great power comes great responsibility. On the one side, there’s the positive increase in acceptance, while on the other side there are all of the negative news throughout the years: the shutdown of the Silk Road Darknet Marketplace, the famous Mt. Gox hack, the Bitstamp security breach, the DAO hack, the wave of Ponzi schemes and ICO scams. If you ask me, those events are inevitable for a new and emerging technology in the field of payments. Just like every new creation there still are a lot of unknowns and problems that should closely be analyzed and solved.</p>\n\n\n\n<p>In that spirit, let’s look at the opportunities to avoid linkability in cryptocurrencies. The first approach I will analyze is the application of Bitcoin-compatible solutions.</p>\n\n\n\n<h3>Coin mixing</h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing.png\" alt=\"\" class=\"wp-image-3025\" width=\"748\" height=\"287\" srcset=\"https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing.png 1495w, https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing-300x115.png 300w, https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing-1024x393.png 1024w, https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing-768x295.png 768w, https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing-1038x399.png 1038w\" sizes=\"(max-width: 748px) 100vw, 748px\" /><figcaption>Tagged coins go in, untagged coins go out.</figcaption></figure></div>\n\n\n\n<p>The basic idea of coin mixing is quite straightforward. An arbitrary amount of honest users each put the same amount of “tagged” coins as input in the mixer and wish to obtain that amount of “untagged” coin if the mixing was a success or receive back the original “tagged” coins if the mixing failed due to some reason. Of course, the described process sounds intuitively like a centralized service of sorts. There are several issues with that: the mixing service can always link coins to users and it’ll almost surely require some kind of fee. We can also mention theft by the service as a potential issue although there are protocols that can make the mixing service accountable for the number of coins (BNMCKF Mixcoin proposal). An example for a centralized trusted mixing service is bestmixer and for an untrusted mixing server &#8211; <a href=\"https://eprint.iacr.org/2016/575.pdf\" class=\"rank-math-link\">TumbleBit</a>. Great, now that the shortcomings are pointed out, the logical question is: What about decentralized solutions?</p>\n\n\n\n<p>Decentralized mixing sounds great due to several reasons. There is no central service, theft is impossible, it provides inherently better anonymity and lastly, it follows Satoshi Nakamoto’s decentralized philosophy for Bitcoin.</p>\n\n\n\n<h4>CoinJoin</h4>\n\n\n\n<p>The first decentralized mixing protocol to mention is the <a href=\"https://www.comsys.rwth-aachen.de/fileadmin/papers/2017/2017-maurer-trustcom-coinjoin.pdf\" class=\"rank-math-link\">CoinJoin</a> protocol. I’ll try to make a very short and non-technical summary of the protocol and if you feel it’s unjust, please excuse me. The first step is to find users who also want to mix the same amount of coins as you. After that, you exchange input and output addresses for the transactions. Every user constructs their transaction (where does the user want to send coins to), sends it around, collects signatures from the other users, and before signing (confirming the transaction) also checks that their output is present. After that, the transaction with the inputs and outputs is broadcast to the Bitcoin network. So far, this protocol fulfills the decentralization and no-theft requirements. However, it introduces another big problem. That is, if a malicious user “infiltrates” the CoinJoin group, then that user knows the input/output combinations of all the other users and has no problem sharing that information with someone else.</p>\n\n\n\n<h4>CoinShuffle</h4>\n\n\n\n<p>This is where an improved protocol called <a href=\"https://petsymposium.org/2014/papers/Ruffing.pdf\" class=\"rank-math-link\">CoinShuffle</a> comes into play. CoinShuffle’s main improvements are that it provides unlinkability (input/output combinations aren’t linkable to users) and robustness (if there’s a malicious user, they will be exposed). CoinShuffle functions similarly to a pinboard where users willing to participate indicate that by generating cryptographic key pairs and posting the public key. It’s important to note that CoinShuffle can guarantee unlinkability and robustness as long as there are at least 2 honest users on the board. The protocol itself has two main building blocks &#8211; <em>layered encryption</em> and <em>permutation</em> that ensure it can work as intended.</p>\n\n\n\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<div class=\"wp-block-columns\">\n<div class=\"wp-block-column\" style=\"flex-basis:100%\">\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption.png\" alt=\"\" class=\"wp-image-3026\" width=\"748\" height=\"287\" srcset=\"https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption.png 1495w, https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption-300x115.png 300w, https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption-1024x393.png 1024w, https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption-768x295.png 768w, https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption-1038x399.png 1038w\" sizes=\"(max-width: 748px) 100vw, 748px\" /><figcaption>Layered encryption</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation.png\" alt=\"\" class=\"wp-image-3027\" width=\"748\" height=\"287\" srcset=\"https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation.png 1495w, https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation-300x115.png 300w, https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation-1024x393.png 1024w, https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation-768x295.png 768w, https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation-1038x399.png 1038w\" sizes=\"(max-width: 748px) 100vw, 748px\" /><figcaption>Permutation</figcaption></figure></div>\n</div>\n</div>\n</div></div>\n\n\n\n<p>So, once the protocol is initiated, each user generates an output address and has to use the key pair with which the user “joined” the board. After that, each participant uses their signature key to sign their input address + public key and post that to the board. Then, each user applies onion encryption to their output address using the public keys of the “upcoming&#8221; users and adds that to the chain of encrypted output addresses. The idea is that the different encrypted output addresses are indistinguishable by the other users since they could decrypt only one layer and so, in the end, no user can link any output address to a specific user.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle.png\" alt=\"\" class=\"wp-image-3028\" width=\"914\" height=\"243\" srcset=\"https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle.png 1828w, https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle-300x80.png 300w, https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle-1024x272.png 1024w, https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle-768x204.png 768w, https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle-1536x408.png 1536w, https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle-1038x275.png 1038w\" sizes=\"(max-width: 914px) 100vw, 914px\" /><figcaption>CoinShuffle shuffling phase</figcaption></figure></div>\n\n\n\n<p>As for the robustness, there’s no guarantee that a malicious user wouldn&#8217;t just refuse to sign the transaction when it’s their turn and thus force the mixing to fail. There is, however, a solution for that situation as well and it’s called the blaming phase. Since the cryptographic key pair used to “post” on the pinboard is created only for the current transaction, it’s no problem to reveal all private (decryption) keys in the case of a failed transaction. Following the reveal, all encryption steps are replicated and the “malicious” user whose private key is missing can be exposed and kicked from the protocol. After that, the protocol should force the remaining participants to create new Bitcoin addresses and cryptographic key pairs for improved privacy before running again.</p>\n\n\n\n<p>After covering those two protocols in a somewhat informal manner, we can conclude that there’s a real possibility to enhance the privacy of Bitcoin transactions while remaining fully compatible with the currency. It is safe to say that what applies to Bitcoin, can generally be used for a great number of other cryptocurrencies as well. You might be impressed by the improvement in privacy a protocol can bring and naturally ask yourself: &#8220;Well, if the protocol’s so great, why isn’t it the norm?&#8221;</p>\n\n\n\n<p>That’s simple &#8211; users can decide for themselves to ignore it and simply use the cryptocurrency as originally designed. No one can enforce the usage of privacy-enhancing protocols on a global scale. Some wallets implement them, nevertheless, a lot of users decide to perform their transactions in a “vanilla” fashion with the idea that they don’t have anything to hide so they have no problem with their transactions being linkable. Whether that’s a correct approach or not, everyone can decide for themselves. The main point is to not lose sight of the importance of privacy in today’s world and that includes the ever-growing field of cryptocurrencies.</p>\n\n\n\n<p>Regardless of whether you agree with the previous statement or not, there are already solutions that try to combat the inherent privacy issues found in Bitcoin and other cryptoassets. They achieve this by taking a step further than the privacy-enhancing protocols and building new cryptocurrencies with privacy at their cores. Those privacy-enhanced cryptocurrencies try to correct flaws in other cryptoassets at the cost of being inherently more complex and not having backwards compatibility. Prominent examples are Monero, Zerocoin, and Zerocash. They implement interesting improvements over older cryptocurrencies and will hopefully, continue to grow. In the <a href=\"https://hack.bg/blog/cryptocurrencies-and-privacy-part-2/\" class=\"rank-math-link\">second part of the blog post</a>, we will dive deeper into their details to further clarify the possibilities of keeping your data private in the world of cryptocurrencies.</p>\n","excerpt":"<p>Privacy-enhancing Bitcoin-compatible protocols Nowadays, privacy has become such an important topic within the many technologies we use in our lives [&hellip;]</p>\n","categories":[{"id":"158","title":"Lets Talk Blockchain","path":"/category/lets-talk-blockchain/"}],"author":{"name":"Aleksandar Hadzhiyski","path":"/author/aleksandar/"}}}]}}},"context":{}}