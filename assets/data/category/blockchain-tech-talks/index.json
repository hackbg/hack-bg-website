{"hash":"6e4a16ae583830626604484392b63bb9aecbdcf7","data":{"category":{"title":"Tech Talks","belongsTo":{"pageInfo":{"totalPages":2,"currentPage":1},"edges":[{"node":{"date":"2021-06-24T12:58:06","id":"3303","title":"Redactable blockchain&#8230; Wait,  what?","path":"/blog/redactable-blockchain-wait-what/","content":"\n<p class=\"has-drop-cap\">This was my reaction when I was first introduced to the topic. Although there isn&#8217;t a hot discussion surrounding the concept, it&#8217;s worth exploring it. That&#8217;s why I thought it would be meaningful to share some information on the motivation behind the idea, several solutions that were introduced by researchers, and why I think it makes sense to pay attention to the topic.</p>\n\n\n\n<p>First things first, there is a chance that your thought right now is: &#8220;I thought the whole idea of blockchain is that it&#8217;s an immutable and verifiable way of preserving information. I would want it to be immutable under <em>ALL</em> circumstances.&#8221;</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/06/well_yes_but_actually.jpg\" alt=\"\" class=\"wp-image-3304\" width=\"496\" height=\"278\" srcset=\"https://hack.bg/wp-content/uploads/2021/06/well_yes_but_actually.jpg 960w, https://hack.bg/wp-content/uploads/2021/06/well_yes_but_actually-300x169.jpg 300w, https://hack.bg/wp-content/uploads/2021/06/well_yes_but_actually-768x432.jpg 768w\" sizes=\"(max-width: 496px) 100vw, 496px\" /></figure></div>\n\n\n\n<p>To clarify Pirate Captain&#8217;s opinion, let&#8217;s look at an analogy. Nowadays, the Internet is a vast landscape that is home to both great and not-so-great content. And that content is (to some extent) manageable and subject to control. Well, the blockchain bears many similarities to the Internet, it&#8217;s a peer-to-peer network, information is stored &#8220;on&#8221; it, people are free to &#8220;upload&#8221; information to it. The big difference is that once it&#8217;s up there, that data stays there. Forever.</p>\n\n\n\n<h3>Is this good? Or bad?</h3>\n\n\n\n<p>Well, of course, it&#8217;s good. Immutability kind of makes digital currency possible. However, let&#8217;s look at some of the examples when the inherent immutability of blockchain is actually bad:</p>\n\n\n\n<ul><li>Illegal and improper content embedded in transactions &#8211; such was found by researchers from RWTH Aachen University as stated in this <a href=\"https://www.theguardian.com/technology/2018/mar/20/child-abuse-imagery-bitcoin-blockchain-illegal-content\" target=\"_blank\" rel=\"noreferrer noopener\">article</a></li><li>Illegal distribution of intellectual property</li><li>Potential new laws such as the &#8220;right to be forgotten&#8221; (<a href=\"https://gdpr.eu/article-17-right-to-be-forgotten/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Article 17 of the GDPR</a>)</li><li>Lastly, one could also view the inability to update smart contracts and fix bugs as a negative byproduct of immutability. Although the community has managed with those issues so far.</li></ul>\n\n\n\n<p>After listing those points, let&#8217;s also look at some of the issues with redacting blockchains:</p>\n\n\n\n<ul><li>It&#8217;s an extremely controversial and polarizing topic that might bring more harm than good at this time</li><li>The complexity of finding a working solution is high and with some solutions, it will tend to get higher as a blockchain grows and data gets &#8220;dug in&#8221; further back into the chain</li><li>Who is to say how frequently redactions will be applied?</li></ul>\n\n\n\n<p>As with all topics, people are entitled to their opinion, and if you didn&#8217;t close the website until now, because mutable blockchains sound preposterous to you, here are some solutions that address mutability.</p>\n\n\n\n<h4>Hard forks</h4>\n\n\n\n<p>This is the most straightforward solution. The blockchain is replaced from the current block to the block that will be changed. Although quite simple to explain, hard forks can be extremely costly because a segment of the blockchain has to be re-written.</p>\n\n\n\n<h4>More solutions that &#8220;keep&#8221; immutability</h4>\n\n\n\n<p>Obviously, hard forks are not optimal. There are other ways to implement redactable content while keeping the blockchain immutable.</p>\n\n\n\n<ul><li>The first option I&#8217;ll mention is pruning. This is the act of deleting raw data in blocks after some period of new blocks. The strategy is described in Bitcoin&#8217;s whitepaper (7. Reclaiming Disk Space) although in a different aspect and not as a way to get rid of &#8220;bad&#8221; data on the blockchain.</li><li>One option is to store pointers to the data and not the actual data. This way the data is kept in some distributed storage system (IPFS) and to redact the data on the blockchain, one has to change the data in the distributed storage. The pointers in the blockchain remain the same.</li><li>Another approach that covers deleting data and not editing is storing data in an encrypted form and keeping the decryption keys private. That way, deleting data could be equal to deleting the decryption keys.</li></ul>\n\n\n\n<h4>Solutions that discard immutability</h4>\n\n\n\n<p>This is the most disruptive type of solution as they effectively institute a new understanding of what the blockchain ledger is. Many questions may arise &#8211; what kind of changes will be allowed, are the changes going to be of entire blocks or transactions within a block, permissionless or premissioned? </p>\n\n\n\n<p>To get a better overview of the different approaches, I&#8217;ll share two solutions born from academic research &#8211; one is an example for a consensus/network layer approach in a permissionless setting, the other is an application layer approach in permissioned setting.</p>\n\n\n\n<h5>Redactable blockchain in permissionless setting</h5>\n\n\n\n<p>You can read the paper <a href=\"https://thanghoang.github.io/teaching/sp21/cs5594/files/paper/sp19.pdf\" target=\"_blank\" rel=\"noreferrer noopener\">here</a>. Alternatively, you can also check the <a href=\"https://www.youtube.com/watch?v=gxCkkqLQiWE&amp;t=849s\" target=\"_blank\" rel=\"noreferrer noopener\">presentation of the protocol at the 2019 IEEE Symposium on Security and Privacy</a>. Either way, here is a short summary of the protocol:</p>\n\n\n\n<ul><li>It&#8217;s a voting-based protocol for block redaction that works with all consensus protocols (PoW, PoS, etc.)</li><li>The main idea is to modify the classical block structure the following way:<ul><li>There are two links between each block (&#8220;old&#8221; and &#8220;new&#8221;) and two Merkle roots</li><li>For each valid block, the &#8220;new&#8221; and &#8220;old&#8221; links are the same</li></ul></li><li>Users can propose to edit blocks via a request mechanism<ul><li>To do that, a user has to propose a substitution block with an updated &#8220;new&#8221; Merkle root along with the necessary computations (in a PoW scenario, the hashes)</li></ul></li><li>The miners (again, in a PoW scenario) can then vote for the proposed block. This is done by including the hash of the candidate block in new blocks</li><li>If, after a predetermined voting period, the redaction is approved, the old block is replaced by the proposed block</li></ul>\n\n\n\n<h5>Redactable blockchain in permissioned setting</h5>\n\n\n\n<p>This is an application layer approach that sets an example for a protocol in permissioned setting. The paper could be found at this link: <a href=\"https://www.ndss-symposium.org/wp-content/uploads/2019/02/ndss2019_02A-3_Derler_paper.pdf\" target=\"_blank\" rel=\"noreferrer noopener\">Fine-Grained and Controlled Rewriting in Blockchains: Chameleon-Hashing Gone Attribute-Based</a>. To avoid diving deeper into technical details, let&#8217;s just summarize it by saying that the ability to edit is based on a cryptographic primitive, called <a href=\"https://www.ndss-symposium.org/wp-content/uploads/2017/09/Chameleon-Signatures-paper-Hugo-Krawczyk.pdf\" target=\"_blank\" rel=\"noreferrer noopener\">Chameleon Hash functions</a>.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"544\" src=\"https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs-1024x544.png\" alt=\"\" class=\"wp-image-3322\" srcset=\"https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs-1024x544.png 1024w, https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs-300x159.png 300w, https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs-768x408.png 768w, https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs-1038x551.png 1038w, https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Chameleon Hashes (CHs)</figcaption></figure>\n\n\n\n<p>However, since the Chameleon Hash (CH) functions from the linked paper guarantee proper function only under the condition that the trapdoor remains secure, they aren&#8217;t the optimal choice. That&#8217;s why the researchers who produced the Fine-Grained and Controlled Rewriting protocol set on to build upon an updated version of the CH functions, namely <a href=\"https://eprint.iacr.org/2017/011.pdf\" target=\"_blank\" rel=\"noreferrer noopener\">Chameleon Hashes with Ephemeral Trapdoors</a> (CHET). </p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"432\" src=\"https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs-1024x432.png\" alt=\"\" class=\"wp-image-3323\" srcset=\"https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs-1024x432.png 1024w, https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs-300x127.png 300w, https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs-768x324.png 768w, https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs-1038x438.png 1038w, https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Chameleon Hashes with Ephemeral Trapdoors (CHETs)</figcaption></figure>\n\n\n\n<p>Taking the CHETs, they created a new cryptographic primitive &#8211; Policy-Based Chameleon Hashes (PBCHs).</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>PBCHs generalize the notion of chameleon-hashes by giving the party computing a hash the ability to associate access policies to the generated hashes. Anyone who possesses enough privileges to satisfy the policy can then find arbitrary collisions for a given hash. We then apply this concept to transaction-level rewriting within blockchains, and thus support fine-grained and controlled modifiability of blockchain objects.</p><cite>David Derler, Kai Samelin, Daniel Slamanig and Christoph Striecks</cite></blockquote>\n\n\n\n<p>In short, PBCHs upgrades CHs by adding 2 things:</p>\n\n\n\n<ol><li>Attributes &#8211; essentially, roles such as &#8220;Director&#8221;, &#8220;Scientist&#8221;, &#8220;Engineer&#8221;, &#8220;Manager&#8221;, etc.</li><li>Access structures &#8211; Boolean conditions ensuring an entity has a given attribute such as (&#8220;Scientist&#8221; AND &#8220;Engineer&#8221;) OR &#8220;Manager&#8221;</li></ol>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"544\" src=\"https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs-1024x544.png\" alt=\"\" class=\"wp-image-3324\" srcset=\"https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs-1024x544.png 1024w, https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs-300x159.png 300w, https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs-768x408.png 768w, https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs-1038x551.png 1038w, https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Policy Based Chameleon Hashes (PBCHs)</figcaption></figure>\n\n\n\n<p>In the end, the innovative protocol produced a solution for efficiently being able to exchange transactions within a block, regardless of the block position within the blockchain, while keeping the hash of the Merkle Tree valid.</p>\n\n\n\n<h3>So&#8230; What does this mean?</h3>\n\n\n\n<p>If you ask me, nothing essential at this point in time. Although growing with great speed, the adoption of blockchain is still in its early years. We&#8217;re seeing the spectrum of practical applications grow each day hand by hand with the increasing user base and that&#8217;s what makes it so dynamic and interesting. The newly explored areas in this new technology allow for anything from bugs costing millions in cryptocurrency, scams, and make-money-fast schemes to cutting-edge innovations, research, and a view for a better future. But not to get philosophical, back to the topic of this blog post. </p>\n\n\n\n<p>Redactibility is just one of the research areas that are somewhere on the sideline of the main pitch that is today&#8217;s blockchain technology. Time will show if it gets picked to play and becomes crucial. There are many moving parts to that. For one, the described permissionless solution is in harmony with Nakamoto&#8217;s philosophy, but it would still require time and effort for it to be applied in a real-world blockchain. The second PBCH protocol introduces a strong cryptographic approach to the problem while being an application-layer solution, but at its core, it requires a permissioned setting &#8211; something that the crypto community isn&#8217;t fond of.</p>\n\n\n\n<p>In the end, before even talking about different approaches and solutions to a redactable blockchain, we should have a definitive answer to the more important questions &#8211; will the community ever want such a thing hard enough that it actually jumps from the field of research to the real world? Maybe&#8230; Who knows? But by all means, it&#8217;s worth it to keep an eye on it.</p>\n","excerpt":"<p>This was my reaction when I was first introduced to the topic. Although there isn&#8217;t a hot discussion surrounding the [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Aleksandar Hadzhiyski","path":"/author/aleksandar/"}}},{"node":{"date":"2021-05-11T14:25:31","id":"3077","title":"Cryptocurrencies and privacy [part 2]","path":"/blog/cryptocurrencies-and-privacy-part-2/","content":"\n<h2>Privacy-enhancing cryptocurrencies</h2>\n\n\n\n<p>While the previous <a href=\"https://hack.bg/blog/lets-talk-blockchain/cryptocurrencies-and-privacy/\" class=\"rank-math-link\">blog post</a> concerned itself with privacy-enhancing Bitcoin-compatible protocols, in this one we will analyze a different approach to increase privacy, namely privacy-enhancing cryptocurrencies. The main distinguishing features of them are:</p>\n\n\n\n<ul><li>They improve on older cryptocurrencies by placing privacy at the core of their new design</li><li>They aren’t backward compatible since they’re a whole new cryptocurrency</li><li>They have inherently higher complexity</li></ul>\n\n\n\n<p>So far, so good. Those new privacy-enhanced cryptocurrencies sound like a nice deal, what are some real-world examples then? Well, let’s point out the most prominent ones and then analyze them closer. We’ll be scratching on Zerocoin, Zerocash, and Monero.</p>\n\n\n\n<h3>Zerocoin</h3>\n\n\n\n<p>The first one, <a href=\"http://zerocoin.org/\" class=\"rank-math-link\">Zerocoin</a>, is more of a protocol-oriented project. Quoting its creators as to what its aim is: </p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Zerocoin is a project to fix a major weakness in Bitcoin: the lack of privacy guarantees we take for granted in using credit cards and cash. Our goal is to build a cryptocurrency where your neighbors, friends, and enemies can’t see what you bought or for how much.</p><cite>Zerocoin website</cite></blockquote>\n\n\n\n<p>This very cool statement is backed by the mixing capability implemented in the <a href=\"https://ieeexplore.ieee.org/document/6547123\" class=\"rank-math-link\">protocol</a> itself. Now, let’s open  Zerocoin’s hatch and see how its gears turn. The main idea is that there are two types of coins &#8211; a Basecoin (Bitcoin or some other altcoin) and a Zerocoin which serves as an extension of the Basecoin. Basecoins can be swapped for Zerocoins and vice versa. If you go back to the <a href=\"https://hack.bg/blog/lets-talk-blockchain/cryptocurrencies-and-privacy/\" class=\"rank-math-link\">first part</a> of this post, you will see that this serves pretty much the same purpose as coin mixing and it aims to remove the linkability of the initial Basecoins. You can find a rough visualization of what happens when using only the Basecoin vs Basecoin + Zerocoin. </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"333\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-1024x333.png\" alt=\"\" class=\"wp-image-3116\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-1024x333.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-300x97.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-768x250.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-1536x499.png 1536w, https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability-1038x337.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-1full-linkability.png 1828w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Transaction linkability of a Basecoin(BTC) vs. Zerocoin</figcaption></figure></div>\n\n\n\n<p>The idea consists of two parts: initially, a user converts a Basecoin into a Zerocoin, and then, in the future, the same user can use the Zerocoin to turn it back into a Basecoin. The protocol guarantees a curious user can’t find out exactly which Zerocoin was used to create a Basecoin, hence the initial “creator” of the Zerocoin can’t be linked. The first part (minting) is achieved through a classical cryptographic commitment. To mint a Zerocoin, a user must generate a serial number <strong><em>S</em></strong> which will be used in the future to spend the Zerocoin (this prevents double-spending), and a random secret <strong><em>r</em></strong> which must remain private (this enforces the unlinkability when spending). The commitment then is calculated as <em><strong>c := g^(S) * h^(r)</strong> </em>(<strong><em>g</em></strong> and <strong><em>h</em></strong> being hash functions) which ensures that neither <strong><em>S</em></strong> nor <strong><em>r</em></strong> can be computed by only knowing the commitment <strong><em>c</em></strong>. Once this is done, a user posts the commitment together with the hash of the Basecoin which they wish to convert to Zerocoin, and if the Basecoin is owned by them, then the minting transaction is accepted and posted on the blockchain.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"272\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-1024x272.png\" alt=\"\" class=\"wp-image-3117\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-1024x272.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-300x80.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-768x204.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-1536x408.png 1536w, https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing-1038x275.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-2minfing.png 1828w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Zerocoin minting process</figcaption></figure></div>\n\n\n\n<p>So far, unlinkability hasn’t been achieved. This is done in the second part (spending). To accomplish this, the protocol utilizes several techniques, one of which is an accumulator. A closer look at how accumulators operate is shown below.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"642\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators-1024x642.png\" alt=\"\" class=\"wp-image-3118\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators-1024x642.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators-300x188.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators-768x481.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators-919x576.png 919w, https://hack.bg/wp-content/uploads/2021/05/PIC-3accumulators.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Basic overview of an accumulator function</figcaption></figure></div>\n\n\n\n<p>Generally, the accumulator in the Zerocoin protocol is used for accumulating every mint transaction on the blockchain as part of the spending phase. So, after this slight technical detour, let’s look at how Alice can spend her Zerocoins while maintaining unlinkability.</p>\n\n\n\n<ol><li>Firstly, she would have to publish the serial number <strong><em>S</em></strong> she generated at the minting phase &#8211; remember that <strong><em>c := g^(S) * h^(r)</em></strong> </li><li>Then, she should accumulate all previously minted Zerocoins (their commitments) on the blockchain &#8211; <strong><em>a</em></strong></li><li>After that, Alice will compute the public witness <strong><em>w</em></strong> for her coin</li><li>Lastly, she must create a ZKP stating that &#8220;she knows a random secret <strong><em>r</em></strong> such that a coin <strong><em>c</em></strong> is one of the minted Zerocoins”. She keeps <strong><em>r</em></strong> and <strong><em>c</em></strong> secret, of course. <br><br>The ZKP is the interesting part since it uses a logical disjunction of ZKPs for all of the Zerocoins and the whole ZKP is evaluated as true if one ZKP is valid while not revealing exactly which ZKP is valid.</li></ol>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"577\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP-1024x577.png\" alt=\"\" class=\"wp-image-3119\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP-1024x577.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP-300x169.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP-768x433.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP-1023x576.png 1023w, https://hack.bg/wp-content/uploads/2021/05/PIC-4ZKP.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Process of computing a disjunction of ZKPs</figcaption></figure></div>\n\n\n\n<p>Of course, the protocol itself doesn’t guarantee absolute unlinkability if used poorly. For once, if there are only a few people using Zerocoins, then the overall ZKP from step 4 would result in very fragile unlinkability. Another point of failure is user habits. The effectiveness of the protocol depends on the users making smart decisions, meaning that if a single user mints a Zerocoin from one address and then simply spends a Zerocoin from the same address, nothing is achieved.</p>\n\n\n\n<h3>Zerocash</h3>\n\n\n\n<p>If you visit Zerocoin’s official website, you will see the information that the protocol has been succeeded by a fully functional project called <a href=\"https://z.cash/\" class=\"rank-math-link\">Zerocash</a>. So, what are the improvements?</p>\n\n\n\n<p>The main change is that Zerocash runs on its own and doesn’t need a Basecoin to function. Additionally, it relies on better cryptographic proof techniques (zk-SNARKs). At its core, Zerocash makes use of the notion that there are 2 address types &#8211; private (z-addresses) and transparent (t-addresses) ones which allow 4 different transaction types.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"375\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses-1024x375.png\" alt=\"\" class=\"wp-image-3120\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses-1024x375.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses-300x110.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses-768x281.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses-1038x380.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-5z-addresses.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Zcash transaction types</figcaption></figure></div>\n\n\n\n<p>The most interesting of these 4 transaction types If the Z-to-Z transaction which quoting Zerocash’s website is specified as follows:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>A Z-to-Z transaction appears on the public blockchain, so it is known to have occurred and that the fees were paid. But the addresses, transaction amount, and the memo field are all encrypted and not publicly visible. This type of encryption is only possible through the use of zero-knowledge proofs.<br>The owner of an address may choose to disclose z-address and transaction details with trusted third parties — think auditory and compliance needs — through the use of view keys and payment disclosure.</p><cite>Zerocash website</cite></blockquote>\n\n\n\n<p>So far, Zerocash looks better than Zerocoin, but it also has some drawbacks. The main one being the inherent need for a secret random input needed to generate public parameters during the setup phase and the importance of these inputs being securely destroyed. The reason for this is if someone gets ahold of those secrets, then that person could <a href=\"http://zerocash-project.org/q_and_a#can-one-put-a-backdoor-in-zerocash\" class=\"rank-math-link\">forge</a> coins arbitrarily. This hasn’t happened yet, so we can assume the system has been safe so far.</p>\n\n\n\n<h3>Monero</h3>\n\n\n\n<p>But what if we are looking for a cryptocurrency that is even stricter when it comes to privacy. How about something along these lines:</p>\n\n\n\n<ul><li>It’s a set of open-source privacy-focused protocols that were initially built upon Bytecoin/CryptoNode code</li><li>There’s an accepted hard-fork approximately twice a year used as a testing environment for new functions</li><li>The community interest is increasing constantly and it’s very well maintained</li></ul>\n\n\n\n<p>Well, this is <a href=\"https://www.getmonero.org/\" class=\"rank-math-link\">Monero</a> for you. It has its roots in this famous bitcointalk forum <a href=\"https://bitcointalk.org/index.php?topic=563821.0\" class=\"rank-math-link\">thread</a>. Nowadays, Monero developers have implemented several very important features that make the cryptocurrency arguably the best privacy-oriented one out there: it provides stealth addresses which aren’t the typical public addresses as in other cryptos, the transaction information is confidential meaning the transacted amounts aren&#8217;t publicly visible, and it utilizes ring signatures.</p>\n\n\n\n<p>Let’s look at the first feature, <strong><em>stealth addresses</em></strong>. Most cryptocurrencies promote the usage of a new address for every payment, however, this has often proven to be ineffective in maintaining privacy. Firstly, due to the work in modern heuristics that aim to link addresses and secondly, because at some point one user has to communicate an address to another user or service. This is why Monero tackled this problem by creating a new address management system. Stealth addresses function by allowing a user to post a general public “STEALTHADDR” which other users can use as a blueprint to create arbitrarily many different addresses and send coins to them. These coins will be accessible only by the user holding the private key to the blueprint “STEALTHADDR”. This way, a curious user can’t link different fresh addresses to the initial “STEALTHADDR”.</p>\n\n\n\n<p>The math behind this isn’t too complex. Let’s say Alice creates a pair of private keys &#8211; <em><strong>(a, b)</strong></em> and publishes a pair of public keys &#8211; <em><strong>(g^a, g^b)</strong></em>. After that, Bob can use those public keys to create as many fresh addresses as he wants and send money to Alice through those. For a new address, Bob generates a private random secret <strong><em>r</em></strong>, computes <strong><em>f = g^(a * r)</em></strong>, and then the new address would be <strong><em>P = g^(H(f)) * g^b</em></strong>. When sending coins, Bob also includes <strong><em>g^r</em></strong>. Now, Alice can compute the private key <strong><em>p</em></strong> for the new address <strong><em>P</em></strong> simply by calculating <strong><em>p = H(g^(a * r)) + b</em></strong> and spend the coins.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"249\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-6-1024x249.png\" alt=\"\" class=\"wp-image-3135\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-6-1024x249.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-6-300x73.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-6-768x187.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-6-1038x253.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-6.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Stealth addresses</figcaption></figure>\n\n\n\n<p>The next important feature is <strong><em>confidential transactions</em></strong>. Monero has correctly focused on hiding the transacted amount because that piece of information is quite heavily utilized in modern linking heuristic methods. This is achieved via the homomorphic property of commitments (confidential transactions in Monero). Besides the essential hiding and binding properties, the homomorphic one is applied so that if there are, for example, 3 commitments &#8211; a single commit for 1 coin, another commit for 4 coins, and another for 6 coins, their combination would result in a single commitment for 11 coins.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"244\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-7-1-1024x244.png\" alt=\"\" class=\"wp-image-3123\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-7-1-1024x244.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-7-1-300x71.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-7-1-768x183.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-7-1-1038x247.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-7-1.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Homomorphic property of a Pedersen commitment</figcaption></figure></div>\n\n\n\n<p>Let’s now apply this to Monero’s confidential transactions in a practical example.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"261\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-8-1024x261.png\" alt=\"\" class=\"wp-image-3124\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-8-1024x261.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-8-300x76.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-8-768x196.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-8-1038x265.png 1038w, https://hack.bg/wp-content/uploads/2021/05/PIC-8.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Confidential transaction example</figcaption></figure></div>\n\n\n\n<p>Now, for the last essential part of Monero &#8211; <strong><em>ring signatures</em></strong>. To introduce this concept, we can start off with an example of a typical Bitcoin transaction. In it, every input has a deterministic mapping to a single output. This makes the system quite simple and easy to use at the cost of enabling transaction tracking. In contrast to this approach, ring signatures provide a cryptographic mechanism that allows many outputs to be mapped to a single input. Monero basically manages to create a transaction signature via ring signatures that:</p>\n\n\n\n<ul><li>Proves that one of the secret keys was used to make a transaction</li><li>Doesn’t reveal the public key that was used in the transaction</li><li>Prevents the usage of the same public key in future transactions</li></ul>\n\n\n\n<p>To best illustrate how this works, imagine that you are given a bucket of lego pieces that can be combined to form a circle. You also have your very own lego piece which is identical to all of the others in the bucket, but only you know that it’s your own piece. Now, you take random pieces from the bucket and, together with your piece, build a circle without anyone looking. You then take the circle, give it to someone and ask them to pick out exactly your piece. Intuitively, the success of the person depends on pure chance &#8211; the fewer pieces in the circle, the greater the chance of the person guessing which piece is exactly yours. Not only that, but if you always use the same piece, the person guessing might start noticing it, so that’s why it’s important to also use a different personal piece each time.</p>\n\n\n\n<p>This non-technical analogy, while basic, highlights the most essential aspects of ring signatures in Monero. For a short summary of the math behind the mechanism, you could check out the picture below.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys-1024x903.png\" alt=\"\" class=\"wp-image-3125\" width=\"1024\" height=\"903\" srcset=\"https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys-1024x903.png 1024w, https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys-300x265.png 300w, https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys-768x678.png 768w, https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys-653x576.png 653w, https://hack.bg/wp-content/uploads/2021/05/PIC-9pub.-priv.-keys.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Basic example of a ring signature transaction</figcaption></figure></div>\n\n\n\n<h3>Conclusion</h3>\n\n\n\n<p>The ongoing research focusing on privacy in cryptocurrencies is very active. As presented in the first part of this blog post, there are several viable solutions that focus on making privacy-enhancing technology compatible with current cryptocurrencies. But, many active projects have taken this a step further and succeeded in creating new cryptocurrencies which are all about keeping coin users anonymous.<br>With the risk of repeating myself, regardless of whether you think anonymity in cryptocurrencies is important or not, privacy is something that shouldn’t be neglected! It’s such a hot topic in today’s tech world for a reason. As long as cryptocurrencies continue to strive towards being a viable and even better alternative to fiat currencies, they have to at least try and be better in every aspect possible. Of course, the physical aspect of cash seems rather impossible to replicate via a blockchain. Privacy, however, is something that could and must be improved and hopefully, developers will continue to improve this aspect of the technology that is the future &#8211; cryptocurrencies!</p>\n","excerpt":"<p>Privacy-enhancing cryptocurrencies While the previous blog post concerned itself with privacy-enhancing Bitcoin-compatible protocols, in this one we will analyze a [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Aleksandar Hadzhiyski","path":"/author/aleksandar/"}}},{"node":{"date":"2021-04-22T11:00:00","id":"3022","title":"Cryptocurrencies and privacy [part 1]","path":"/blog/cryptocurrencies-and-privacy/","content":"\n<h2>Privacy-enhancing Bitcoin-compatible protocols</h2>\n\n\n\n<p>Nowadays, privacy has become such an important topic within the many technologies we use in our lives that it’s only natural for us to ask the question: <strong>Where does privacy stand in the world of cryptocurrencies?</strong> The intuitive answer of many people unfamiliar with blockchain technology is that cryptocurrencies provide full anonymity and privacy. Similarly to a famous pawnshop owner bargaining on their tv show: \n<em>“Anonymity? Sorry, best I can do is pseudonymity.”</em></p>\n\n\n\n<p>As a starting point, let’s define what anonymity means in the context of cryptocurrencies. The term could be explained as the sum of pseudonymity and unlinkability.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity.png\" alt=\"privacy through anonimity in cryptocurrencies\" class=\"wp-image-3024\" width=\"748\" height=\"287\" srcset=\"https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity.png 1495w, https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity-300x115.png 300w, https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity-1024x393.png 1024w, https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity-768x295.png 768w, https://hack.bg/wp-content/uploads/2021/04/PIC-1anonymity-1038x399.png 1038w\" sizes=\"(max-width: 748px) 100vw, 748px\" /><figcaption>Anonymity in cryptocurrencies</figcaption></figure></div>\n\n\n\n<p>Those two concepts are very closely intertwined and it’s important to point out that the latter isn’t simply a nice-to-have rather an essential part. I’ve heard many times the incorrect assumption that even if one’s pseudonyms (blockchain addresses) are linked, how could that possibly lead to the person behind those pseudonyms. In reality, many cryptoasset services hold some kind of personal identifiable information (PII). All it takes is one pseudonym to be linked to the PII and the thread unravels. Let’s take a closer look at the most famous cryptocurrency &#8211; Bitcoin and why it’s not fully anonymous.</p>\n\n\n\n<ul><li>Firstly, cryptoassets built on a blockchain are public and that includes both transactions and addresses.</li><li>Secondly, addresses could be linked via clustering heuristics used in different tools such as Chainalysis, CipherTrace, and GraphSense.</li><li>Lastly, as previously mentioned, many cryptoasset services hold PII that lead back to the people behind addresses.</li></ul>\n\n\n\n<p>All of these points lead to the fact that transactions along with senders and recipients of payments could be linked to specific users. It’s easy to see that Bitcoin is missing the unlinkability part from the anonymity equation. Not only that but also the offered privacy is arguably worse than that of traditional banking. In the end, the underlying blockchain put together with the data saved from different exchanges creates somewhat of a privacy hell.</p>\n\n\n\n<p>I think that at this point we can agree that although the early promises and expectations from cryptoassets were for anonymity, linkable payments are the de facto status quo. Looking back at more than a decade of cryptoassets, we can observe an ever-increasing acceptance of cryptocurrencies as means of payment. However, with great power comes great responsibility. On the one side, there’s the positive increase in acceptance, while on the other side there are all of the negative news throughout the years: the shutdown of the Silk Road Darknet Marketplace, the famous Mt. Gox hack, the Bitstamp security breach, the DAO hack, the wave of Ponzi schemes and ICO scams. If you ask me, those events are inevitable for a new and emerging technology in the field of payments. Just like every new creation there still are a lot of unknowns and problems that should closely be analyzed and solved.</p>\n\n\n\n<p>In that spirit, let’s look at the opportunities to avoid linkability in cryptocurrencies. The first approach I will analyze is the application of Bitcoin-compatible solutions.</p>\n\n\n\n<h3>Coin mixing</h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing.png\" alt=\"\" class=\"wp-image-3025\" width=\"748\" height=\"287\" srcset=\"https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing.png 1495w, https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing-300x115.png 300w, https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing-1024x393.png 1024w, https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing-768x295.png 768w, https://hack.bg/wp-content/uploads/2021/04/PIC-2coin-mixing-1038x399.png 1038w\" sizes=\"(max-width: 748px) 100vw, 748px\" /><figcaption>Tagged coins go in, untagged coins go out.</figcaption></figure></div>\n\n\n\n<p>The basic idea of coin mixing is quite straightforward. An arbitrary amount of honest users each put the same amount of “tagged” coins as input in the mixer and wish to obtain that amount of “untagged” coin if the mixing was a success or receive back the original “tagged” coins if the mixing failed due to some reason. Of course, the described process sounds intuitively like a centralized service of sorts. There are several issues with that: the mixing service can always link coins to users and it’ll almost surely require some kind of fee. We can also mention theft by the service as a potential issue although there are protocols that can make the mixing service accountable for the number of coins (BNMCKF Mixcoin proposal). An example for a centralized trusted mixing service is bestmixer and for an untrusted mixing server &#8211; <a href=\"https://eprint.iacr.org/2016/575.pdf\" class=\"rank-math-link\">TumbleBit</a>. Great, now that the shortcomings are pointed out, the logical question is: What about decentralized solutions?</p>\n\n\n\n<p>Decentralized mixing sounds great due to several reasons. There is no central service, theft is impossible, it provides inherently better anonymity and lastly, it follows Satoshi Nakamoto’s decentralized philosophy for Bitcoin.</p>\n\n\n\n<h4>CoinJoin</h4>\n\n\n\n<p>The first decentralized mixing protocol to mention is the <a href=\"https://www.comsys.rwth-aachen.de/fileadmin/papers/2017/2017-maurer-trustcom-coinjoin.pdf\" class=\"rank-math-link\">CoinJoin</a> protocol. I’ll try to make a very short and non-technical summary of the protocol and if you feel it’s unjust, please excuse me. The first step is to find users who also want to mix the same amount of coins as you. After that, you exchange input and output addresses for the transactions. Every user constructs their transaction (where does the user want to send coins to), sends it around, collects signatures from the other users, and before signing (confirming the transaction) also checks that their output is present. After that, the transaction with the inputs and outputs is broadcast to the Bitcoin network. So far, this protocol fulfills the decentralization and no-theft requirements. However, it introduces another big problem. That is, if a malicious user “infiltrates” the CoinJoin group, then that user knows the input/output combinations of all the other users and has no problem sharing that information with someone else.</p>\n\n\n\n<h4>CoinShuffle</h4>\n\n\n\n<p>This is where an improved protocol called <a href=\"https://petsymposium.org/2014/papers/Ruffing.pdf\" class=\"rank-math-link\">CoinShuffle</a> comes into play. CoinShuffle’s main improvements are that it provides unlinkability (input/output combinations aren’t linkable to users) and robustness (if there’s a malicious user, they will be exposed). CoinShuffle functions similarly to a pinboard where users willing to participate indicate that by generating cryptographic key pairs and posting the public key. It’s important to note that CoinShuffle can guarantee unlinkability and robustness as long as there are at least 2 honest users on the board. The protocol itself has two main building blocks &#8211; <em>layered encryption</em> and <em>permutation</em> that ensure it can work as intended.</p>\n\n\n\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<div class=\"wp-block-columns\">\n<div class=\"wp-block-column\" style=\"flex-basis:100%\">\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption.png\" alt=\"\" class=\"wp-image-3026\" width=\"748\" height=\"287\" srcset=\"https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption.png 1495w, https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption-300x115.png 300w, https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption-1024x393.png 1024w, https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption-768x295.png 768w, https://hack.bg/wp-content/uploads/2021/04/PIC-3layerd-encryption-1038x399.png 1038w\" sizes=\"(max-width: 748px) 100vw, 748px\" /><figcaption>Layered encryption</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation.png\" alt=\"\" class=\"wp-image-3027\" width=\"748\" height=\"287\" srcset=\"https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation.png 1495w, https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation-300x115.png 300w, https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation-1024x393.png 1024w, https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation-768x295.png 768w, https://hack.bg/wp-content/uploads/2021/04/PIC-4permutation-1038x399.png 1038w\" sizes=\"(max-width: 748px) 100vw, 748px\" /><figcaption>Permutation</figcaption></figure></div>\n</div>\n</div>\n</div></div>\n\n\n\n<p>So, once the protocol is initiated, each user generates an output address and has to use the key pair with which the user “joined” the board. After that, each participant uses their signature key to sign their input address + public key and post that to the board. Then, each user applies onion encryption to their output address using the public keys of the “upcoming&#8221; users and adds that to the chain of encrypted output addresses. The idea is that the different encrypted output addresses are indistinguishable by the other users since they could decrypt only one layer and so, in the end, no user can link any output address to a specific user.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle.png\" alt=\"\" class=\"wp-image-3028\" width=\"914\" height=\"243\" srcset=\"https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle.png 1828w, https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle-300x80.png 300w, https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle-1024x272.png 1024w, https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle-768x204.png 768w, https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle-1536x408.png 1536w, https://hack.bg/wp-content/uploads/2021/04/PIC-5coin-shuffle-1038x275.png 1038w\" sizes=\"(max-width: 914px) 100vw, 914px\" /><figcaption>CoinShuffle shuffling phase</figcaption></figure></div>\n\n\n\n<p>As for the robustness, there’s no guarantee that a malicious user wouldn&#8217;t just refuse to sign the transaction when it’s their turn and thus force the mixing to fail. There is, however, a solution for that situation as well and it’s called the blaming phase. Since the cryptographic key pair used to “post” on the pinboard is created only for the current transaction, it’s no problem to reveal all private (decryption) keys in the case of a failed transaction. Following the reveal, all encryption steps are replicated and the “malicious” user whose private key is missing can be exposed and kicked from the protocol. After that, the protocol should force the remaining participants to create new Bitcoin addresses and cryptographic key pairs for improved privacy before running again.</p>\n\n\n\n<p>After covering those two protocols in a somewhat informal manner, we can conclude that there’s a real possibility to enhance the privacy of Bitcoin transactions while remaining fully compatible with the currency. It is safe to say that what applies to Bitcoin, can generally be used for a great number of other cryptocurrencies as well. You might be impressed by the improvement in privacy a protocol can bring and naturally ask yourself: &#8220;Well, if the protocol’s so great, why isn’t it the norm?&#8221;</p>\n\n\n\n<p>That’s simple &#8211; users can decide for themselves to ignore it and simply use the cryptocurrency as originally designed. No one can enforce the usage of privacy-enhancing protocols on a global scale. Some wallets implement them, nevertheless, a lot of users decide to perform their transactions in a “vanilla” fashion with the idea that they don’t have anything to hide so they have no problem with their transactions being linkable. Whether that’s a correct approach or not, everyone can decide for themselves. The main point is to not lose sight of the importance of privacy in today’s world and that includes the ever-growing field of cryptocurrencies.</p>\n\n\n\n<p>Regardless of whether you agree with the previous statement or not, there are already solutions that try to combat the inherent privacy issues found in Bitcoin and other cryptoassets. They achieve this by taking a step further than the privacy-enhancing protocols and building new cryptocurrencies with privacy at their cores. Those privacy-enhanced cryptocurrencies try to correct flaws in other cryptoassets at the cost of being inherently more complex and not having backwards compatibility. Prominent examples are Monero, Zerocoin, and Zerocash. They implement interesting improvements over older cryptocurrencies and will hopefully, continue to grow. In the <a href=\"https://hack.bg/blog/cryptocurrencies-and-privacy-part-2/\" class=\"rank-math-link\">second part of the blog post</a>, we will dive deeper into their details to further clarify the possibilities of keeping your data private in the world of cryptocurrencies.</p>\n","excerpt":"<p>Privacy-enhancing Bitcoin-compatible protocols Nowadays, privacy has become such an important topic within the many technologies we use in our lives [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Aleksandar Hadzhiyski","path":"/author/aleksandar/"}}},{"node":{"date":"2021-01-15T10:00:00","id":"2417","title":"Break the ice between blockchains with Cosmos network","path":"/blog/break-the-ice-between-blockchains-with-cosmos-network/","content":"\n<p>We are living in an interconnected world, driven by growth-oriented markets and constantly transforming businesses. <a href=\"https://hack.bg/dlt-blockchain-development-services/blockchain-software-development/\" class=\"rank-math-link\">Blockchain technology</a> has the potential to bring the game to the next level, check out our articles on blockchain to understand how.<br>Nevertheless, Proof-of-Work consensus-based blockchains bring some limitations to the table:</p>\n\n\n\n<ul><li>Scalability &#8211; Growing transaction fees, increased block mining time, etc.</li><li>Usability &#8211; Developers are limited to a few programming languages.</li><li>Sovereignty &#8211; All applications share the same environment. In order to introduce new features or fix issues or flaws in an application it would require a permission from the governance of the respective blockchain platform.</li></ul>\n\n\n\n<p>Here comes the Cosmos network to our aid.</p>\n\n\n\n<p>Cosmos is a next-generation network of blockchains able to communicate with one another. The communication is possible through a set of open-source tools such as <strong>Tendermint, Cosmos SDK, and IBC.</strong></p>\n\n\n\n<p><strong>Tendermint</strong> is a Byzantine-Fault Tolerance based solution that encloses networking and consensus layers of a blockchain to enable developers to focus on the application layer. Its features include:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-stack-1024x576.png\" alt=\"\" class=\"wp-image-2538\" srcset=\"https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-stack-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-stack-300x169.png 300w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-stack-768x432.png 768w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-stack-1536x864.png 1536w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-stack.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Cosmos stack</figcaption></figure></div>\n\n\n\n<ul><li>Provides up to 1/3 validator machines failing arbitrarily.</li><li>Language Agnostic: connects to the application layer of the blockchain by a socket protocol called ABCI</li><li>Fast Finality: a transaction is completed once it&#8217;s included in a block</li></ul>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-abci-1024x576.png\" alt=\"\" class=\"wp-image-2540\" srcset=\"https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-abci-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-abci-300x169.png 300w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-abci-768x432.png 768w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-abci-1536x864.png 1536w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-abci.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Cosmos: Application &lt;&gt; ABCI &lt;&gt; Tendermint</figcaption></figure></div>\n\n\n\n<p><strong>Cosmos SDK</strong> allows developers to build a secure blockchain on top of Tendermint. Core principles:</p>\n\n\n\n<ul><li>Modularity: enables the creation of modules that adapt a chosen blockchain for the custom user needs.</li><li>Security: each module encapsulates its functionality and governs the communication with other modules.</li></ul>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-sdk-tendermint-1024x576.png\" alt=\"\" class=\"wp-image-2542\" srcset=\"https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-sdk-tendermint-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-sdk-tendermint-300x169.png 300w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-sdk-tendermint-768x432.png 768w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-sdk-tendermint-1536x864.png 1536w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-sdk-tendermint.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Cosmos SDK and modules</figcaption></figure></div>\n\n\n\n<p><strong>Inter-Blockchain Communication</strong> protocol enables the communication between blockchains. By utilizing the instant finality of Tendermint consensus it connects heterogeneous chains together. POW chains are not part of this category because they have probabilistic-finality.<br>IBC provides sovereignty by setting validators for different blockchains that have to approve new consequent blocks on the chain.</p>\n\n\n\n<p>Cosmos makes use of star-based modular architecture which has two kinds of blockchains &#8211; Hubs and Zones. Hubs connect Zones together. Every Zone can be accessed from others through a Hub. Thus the number of connections is optimised to a minimum in order to establish communication.</p>\n\n\n\n<p>Hubs use the native token of Cosmos (ATOM) to allocate resources from one Zone to another.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-hub-1024x576.png\" alt=\"\" class=\"wp-image-2544\" srcset=\"https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-hub-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-hub-300x169.png 300w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-hub-768x432.png 768w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-hub-1536x864.png 1536w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-hub.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Cosmos Hub</figcaption></figure></div>\n\n\n\n<p>Communication between probabilistic-finality chains is handled by so called Peg-Zone blockchains. It monitors the state of another blockchain to establish a finality for transactions of the blockchain it bridges.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-pegzone-1024x576.png\" alt=\"\" class=\"wp-image-2546\" srcset=\"https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-pegzone-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-pegzone-300x169.png 300w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-pegzone-768x432.png 768w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-pegzone-1536x864.png 1536w, https://hack.bg/wp-content/uploads/2021/01/hack-cosmos-pegzone.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Cosmos Peg Zone</figcaption></figure></div>\n\n\n\n<p><strong>Cosmos provides Vertical and Horizontal scalability.</strong><br>Vertical scalability is achieved through its consensus mechanism Tendermint BFT which could handle up to thousands of transactions per second.</p>\n\n\n\n<p>Horizontal scalability &#8211;  multiple parallel chains running the same application and verified by a common validator set. In theory creates infinite scalability. </p>\n\n\n\n<p>Resolving the aforementioned limitations of the existing blockchain networks enables more space for creative ideas and trust. Being able to focus on specific problems without being limited or blocked by the underlying environment multiplies the efficiency and accelerates the growth of the technical domain. </p>\n\n\n\n<p>Cosmos breaks the ice between blockchains and gives a new push for the collaboration between different ecosystems. <a href=\"https://hack.bg/blog/blockchain-and-business/how-are-smart-contracts-and-blockchain-adding-value-to-my-business/\" class=\"rank-math-link\">Businesses</a> depending on a specific blockchain network are set for a ride on the rocket of sky-high growth and limitless more creative ideas for <a href=\"https://hack.bg/blog/blockchain-and-business/defi-decentralized-finance/\" class=\"rank-math-link\">DeFi applications</a>. Be part of the next stage of evolution for blockchain go ahead, deep dive into Cosmos network and explore the world of possibilities!</p>\n","excerpt":"<p>We are living in an interconnected world, driven by growth-oriented markets and constantly transforming businesses. Blockchain technology has the potential [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Stanislav Slavov","path":"/author/stanislav/"}}},{"node":{"date":"2020-03-29T21:36:50","id":"1667","title":"From zero to a fully-fledged aeternity decentralized application in less than 10 minutes","path":"/blog/from-zero-to-fully-fledged-decentralized-application-in-less-than-10-minutes/","content":"\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"1024\" height=\"453\" src=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-1024x453.png\" alt=\"\" class=\"wp-image-1775\" srcset=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-1024x453.png 1024w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-300x133.png 300w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-768x340.png 768w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-1038x459.png 1038w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure>\n\n\n\n<h2>Intro</h2>\n\n\n\n<p>Let&#8217;s be honest and put the cards down &#8211; if you really need to build a production-ready decentralized application 10 minutes won&#8217;t be nearly enough for sure, and if you are not familiar with the technology you might need some assistance with the <a href=\"https://hack.bg/dlt-blockchain-development-services/smart-contracts-development/\">smart contracts development</a> and setup.  </p>\n\n\n\n<p>Developing such a <a href=\"https://hack.bg/dlt-blockchain-development-services/decentralized-applications-development/\">decentralized application</a> will be a combination of planning and structuring the architecture of the project, drafting and designing the user interface (UI), writing, testing and deploying the smart contracts needed for the dapp to run its business logic … and combining all this together. This also involves a wide variety of technology stack options, depending on the desired outcome and use-case.</p>\n\n\n\n<p>For the purpose of this tutorial though, we will develop an app from scratch to a working decentralized application on aeternity blockchain with a simple frontend.</p>\n\n\n\n<p>Now let the timer start:</p>\n\n\n\n<h3>1. Initialize our project</h3>\n\n\n\n<p>We will use the <a href=\"https://github.com/aeternity/aepp-aeproject-js\">aeproject</a> tool which will allow us to easily set up the development environment locally.</p>\n\n\n\n<ul><li>dependencies<ul><li>docker</li><li>npm &amp; node</li></ul></li></ul>\n\n\n\n<p>Install globally</p>\n\n\n\n<pre class=\"wp-block-code\"><code>npm install -g aeproject</code></pre>\n\n\n\n<p>Initialize project</p>\n\n\n\n<pre class=\"wp-block-code\"><code>aeproject init</code></pre>\n\n\n\n<h3>2. Write our smart contract(s)</h3>\n\n\n\n<p>In this step, we will develop a simple smart contract that is only storing an integer (number) in its state on the blockchain.</p>\n\n\n\n<p>Let&#8217;s also add a getter method which will allow us to read from the contract state.</p>\n\n\n\n<p>Usually, we will do something like this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>@compiler >= 4\n\ncontract MyContract =\n   record state = { number: int }\n   entrypoint init() : state = { number = 0 }\n   stateful entrypoint set(x: int) = put(state{number = x})\n   stateful entrypoint get() : int = state.number</code></pre>\n\n\n\n<p>In our case, we can further simplify our contract since we are only storing a single integer value. As we know Sophia contracts have restricted mutable state and it is a strongly typed language so we need to define it initially.</p>\n\n\n\n<p>In this case, we can define our <code>state</code> to be of <code>type</code> <code>int</code> as we don&#8217;t need the whole <code>record</code> structure for this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>@compiler >= 4\n\ncontract MyContract =\n   type state = int\n   entrypoint init() : state = 0\n   stateful entrypoint set(x: int) = put(x)\n   stateful entrypoint get() : int = state</code></pre>\n\n\n\n<p>Here is the same contract, written in Solidity, on Ethereum blockchain just for comparison if you are more familiar with Solidity &#8230; or not:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pragma solidity >=0.5.0 &lt;0.6.0; \n\ncontract MyContract {\n    uint256 number;\n    constructor() public {\n        number = 0;\n    }\n    function set(uint256 _number) public {\n        number = _number;\n    }\n    function get() public view returns (uint256) {\n        return number;    \n    }\n}</code></pre>\n\n\n\n<h3>3. Deploy</h3>\n\n\n\n<p>In order for us to deploy to an actual <code>testnet</code> or <code>mainnet</code> we need to have some AE tokens on the selected network, so we can pay the mining fee for the transactions we will make to the blockchain.</p>\n\n\n\n<p>Note: We could also deploy it on a local testnet which can be started via <code>aeproject node</code></p>\n\n\n\n<h4>3.1. Create a wallet</h4>\n\n\n\n<p>If we do not yet have a wallet which will be used for deployment we need to generate ourselves one:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>aecli account create &lt;WALLET_NAME></code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>Note: To quickly test all of Aeternity's blockchain features from your Terminal, you can Install and use our NodeJS CLI by running:\n\nnpm i -g @aeternity/aepp-cli\naecli --help</code></pre>\n\n\n\n<h4>3.2. Fund the wallet</h4>\n\n\n\n<p>We will get some testnet AE tokens from the <a href=\"https://faucet.testnet.aepps.com\">faucet</a>, so we can deploy the contract.</p>\n\n\n\n<h4>3.3. Get our private key</h4>\n\n\n\n<p>We are going to be deploying via the command-line interface (CLI), so we will need to have our private key to pass it to the deployer.</p>\n\n\n\n<p>Get our private key:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>aecli account address &lt;WALLET_NAME> --privateKey</code></pre>\n\n\n\n<h4>3.4. Deploy to testnet</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>aeproject deploy -n testnet -s &lt;SECRET_KEY> --compiler https://latest.compiler.aepps.com</code></pre>\n\n\n\n<h3>4. Interaction with the contract</h3>\n\n\n\n<p>There are multiple we can interact with our contract. The first and most easier is to use one of the online IDEs available out there &#8211; contracts.aeternity.art, fireeditor etc.</p>\n\n\n\n<h4>4.1. Online IDE.</h4>\n\n\n\n<ol><li>contracts.aeternity.art &#8211; we put our contract code in the editor and we can access our contract by adding the address in the <code>&lt;Address&gt;</code> field so we can interact with it.<br> <code>set</code> &#8211; for setting a new value in the smart contract we have to make a stateful call (which modifies the state and costs gas)<br><code>get</code> &#8211; our getter we can access by calling static function.<br></li><li>fireeditor.nikitafuchs.de &#8211; Same as above we can put our contract code and access the freshly deployed contract <strong>at address</strong>.<br></li></ol>\n\n\n\n<h4>4.2. via the SDK</h4>\n\n\n\n<p>We can access our contract instance via this simple command and start interacting with it.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>await sdk.getContractInstance(CONTRACT_SOURCE, { contractAddress: OUR_CONTRACT_ADDRESS} );</code></pre>\n\n\n\n<p>Of course we will first have to set up our project and intialize the SDK there.</p>\n\n\n\n<h3>5. Fully-fledged Decentralized app</h3>\n\n\n\n<h4>5.1. Set up frontend</h4>\n\n\n\n<p>In order to setup our simple fronted we will use the waellet boilerplate repo which is pre-configured to communicate with the waellet extension and has the aeternity javascript sdk already prepared there. </p>\n\n\n\n<pre class=\"wp-block-code\"><code>git clone https://github.com/waellet/waellet-aepp-boilerplate &amp;&amp; cd\nnpm install</code></pre>\n\n\n\n<h4>5.2. Add the contract interface (or the full contract code)</h4>\n\n\n\n<p>We need to add our contract interface in the app, so we can call the correct methods and encode the transactions properly. This is similar to the ABI in Solidity for example.</p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"1024\" height=\"460\" src=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-1024x460.png\" alt=\"\" class=\"wp-image-1763\" srcset=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-1024x460.png 1024w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-300x135.png 300w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-768x345.png 768w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-1038x466.png 1038w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25.png 1310w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>https://github.com/waellet/waellet-aepp-boilerplate/blob/23419a910f668069990f96b775bd119aba70f8d3/src/views/Home/Index.vue#L204-L216</figcaption></figure>\n\n\n\n<h4>5.3. Setup function calls </h4>\n\n\n\n<p>We also need to setup the contract methods calls in the app. </p>\n\n\n\n<h4>5.4. run</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>npm run serve</code></pre>\n\n\n\n<p>We can now access our app at <code>localhost:3000</code>:</p>\n\n\n\n<p>We can interact with the contract with the two sample buttons there.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"909\" src=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-1024x909.png\" alt=\"\" class=\"wp-image-1769\" srcset=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-1024x909.png 1024w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-300x266.png 300w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-768x682.png 768w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-649x576.png 649w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41.png 1376w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n","excerpt":"<p>Intro Let&#8217;s be honest and put the cards down &#8211; if you really need to build a production-ready decentralized application [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"},{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen","path":"/author/milen/"}}},{"node":{"date":"2019-10-08T10:08:15","id":"1613","title":"How to create aeternity fungible token? [tutorial]","path":"/blog/how-to-create-aeternity-fungible-token-tutorial/","content":"\n<p>In this short tutorial I&#8217;ll be showing you how to create a fungible token on aeternity blockchain network.</p>\n\n\n\n<p>In this tutorial you will create a AEX-9 (fungible token standard on aeternity) token in few easy steps.<br><br>Prerequisites:</p>\n\n\n\n<ul><li><a href=\"http://waellet.com\">Waellet</a> browser extension</li></ul>\n\n\n\n<p>Note: This will be a short tutorial on creating a fungible token with allowances.</p>\n\n\n\n<h3>Step 1. Go to waellet <code>Utilities</code>  section and select <code>Fungible Tokens</code></h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://user-images.githubusercontent.com/13139371/62917304-6ba87880-bda4-11e9-9bc6-247205e70238.png\" alt=\"waellet_1\"/></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"358\" height=\"600\" src=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.45.41.png\" alt=\"\" class=\"wp-image-1628\" srcset=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.45.41.png 358w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.45.41-179x300.png 179w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.45.41-344x576.png 344w\" sizes=\"(max-width: 358px) 100vw, 358px\" /></figure></div>\n\n\n\n<h3>Step 2.  Click <code>Deploy fungible token</code> button.</h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://user-images.githubusercontent.com/13139371/62917315-74994a00-bda4-11e9-8617-995a66cd5064.png\" alt=\"waellet_3\"/></figure></div>\n\n\n\n<h3>Step 3. Fill the form with the details needed for the token &#8211;  Token Name, Token Symbol, and decimals.</h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://user-images.githubusercontent.com/13139371/62917318-74994a00-bda4-11e9-86fb-78f698c5764d.png\" alt=\"waellet_5\"/></figure></div>\n\n\n\n<h3>Step 4. Click deploy, confirm/sign the transaction and you are ready.</h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://user-images.githubusercontent.com/13139371/62917320-7531e080-bda4-11e9-90a2-9dd8ff03baec.png\" alt=\"waellet_7\"/></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://user-images.githubusercontent.com/13139371/62917321-7531e080-bda4-11e9-985b-a6b61b0aeb8c.png\" alt=\"waellet_8\"/></figure></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>The <code>Allowances</code> section of waellet will allow you to interact with the contract and set allowances for addresses of your choice.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>The <code>Mint/Burn</code> section allows us to <code>mint</code> (create new tokens) or <code>burn</code> (remove tokens from circulation) tokens.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"359\" height=\"605\" src=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.51.09.png\" alt=\"\" class=\"wp-image-1630\" srcset=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.51.09.png 359w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.51.09-178x300.png 178w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.51.09-342x576.png 342w\" sizes=\"(max-width: 359px) 100vw, 359px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"358\" height=\"600\" src=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.52.55.png\" alt=\"\" class=\"wp-image-1631\" srcset=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.52.55.png 358w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.52.55-179x300.png 179w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.52.55-344x576.png 344w\" sizes=\"(max-width: 358px) 100vw, 358px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"378\" height=\"604\" src=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.53.08.png\" alt=\"\" class=\"wp-image-1632\" srcset=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.53.08.png 378w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.53.08-188x300.png 188w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.53.08-360x576.png 360w\" sizes=\"(max-width: 378px) 100vw, 378px\" /></figure></div>\n\n\n\n<p>After confirming the transaction you&#8217;ve successfully minted tokens to the address you specified in the previous step.</p>\n","excerpt":"<p>In this short tutorial I&#8217;ll be showing you how to create a fungible token on aeternity blockchain network. In this [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"},{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen","path":"/author/milen/"}}},{"node":{"date":"2019-07-15T14:43:14","id":"1397","title":"Waellet development update","path":"/blog/waellet-development-update/","content":"\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"388\" src=\"https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1-1024x388.png\" alt=\"\" class=\"wp-image-1433\" srcset=\"https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1-1024x388.png 1024w, https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1-300x114.png 300w, https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1-768x291.png 768w, https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1-1038x394.png 1038w, https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1.png 1200w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>waellet &#8211; aeternity blockchain in your browser</figcaption></figure></div>\n\n\n\n<p>Its been a while since we posted about <a href=\"http://waellet.com\">waellet</a>. Here&#8217;s what&#8217;s been going on lately development-wise from our side:</p>\n\n\n\n<p>Waellet now injects <code>Aepp</code> object into the current visited webpage DOM. This allows the developers of the webpage /being a <a href=\"https://hack.bg/dlt-blockchain-development-services/decentralized-applications-development/\">decentralized application</a> or just a website that wants to interact with aeternity network/ to request connection to user wallet and ask for authorization.</p>\n\n\n\n<p>Request for connection is called via the<code>connect()</code>method available from the <code>Aepp</code> object:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>Aepp\n    .request\n    .connect()\n    .then(res =&gt; console.log(res))</code></pre>\n\n\n\n<p>After the connection was established successfully the developer is able to invoke request for signing a transaction from the user like so:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>Aepp\n    .request\n    .sign({\n        recipientId: \"ak_2DDLbYBhHcuAzNg5Un853NRbUr8JVjZeMc6mTUpwmiVzA4ic6X\",\n        amount: 0.01\n    })\n    .then(res =&gt; console.log(res))</code></pre>\n\n\n\n<p>The flow looks like this:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"266\" src=\"https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow-1024x266.png\" alt=\"\" class=\"wp-image-1402\" srcset=\"https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow-1024x266.png 1024w, https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow-300x78.png 300w, https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow-768x200.png 768w, https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow-1038x270.png 1038w, https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow.png 1539w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Waellet &#8211; Signature request flow</figcaption></figure></div>\n\n\n\n<p>Besides this we&#8217;ve been working on fixing quite a lot of UI bugs and problems &#8211; some of which has been reported by you, others found by us.</p>\n\n\n\n<p>The UI for the tipping functionality which waellet will offer is ready. The smart contracts are also ready for deployment on aeternity testnet and we will be focusing on introducing this feature for beta testing in our next releases.</p>\n\n\n\n<h3>Changelog</h3>\n\n\n\n<ul><li>Fixing problem with updating balance in account, and problem with redirect to phishing warning when visiting scam page</li><li>Injecting Aepp object</li><li>Aepp communication</li><li>Created Alert Component</li><li>Sign pop-up validate balance</li><li>Confirm or Reject close window</li><li>Closing Sign pop-up resolve promise and return info</li><li>Refactor Main Loader</li><li>ability to allow connection to wallet</li><li>validate if login when open confirm pop-up and after login redirect to view</li><li>ability to get balance of current active account</li><li>Add responsiveness in sign transaction pop-up and allow connection pop-up</li><li>validate input in aepp.request.connect method</li><li>ability to remove all connected websites to wallet</li><li>unifying postmessages responses</li></ul>\n\n\n\n<h2>Contributions are welcome</h2>\n\n\n\n<p>We will highly appreciate any contribution to the waellet project &#8211; from commenting and giving your opinion or feature proposal to reporting a small UI bug to submitting PR for fixing that 🙂</p>\n\n\n\n<h2>Get waellet</h2>\n\n\n\n<p>The extension is still in <code>beta</code> but available on all Chromium based as well as Firefox browsers:</p>\n\n\n\n<ul><li><a href=\"https://chrome.google.com/webstore/detail/waellet/nnkfipoloblhgnahnaocfkhmmplcdneb\">Get waellet from Chrome Web Store</a></li><li><a href=\"https://addons.mozilla.org/en-US/firefox/addon/waellet/\">Get waellet from Firefox Addon store</a></li><li><a href=\"http://github.com/aeternity/aepp-waellet\">Download release from Github or build it from source</a></li></ul>\n","excerpt":"<p>Its been a while since we posted about waellet. Here&#8217;s what&#8217;s been going on lately development-wise from our side: Waellet [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Milen","path":"/author/milen/"}}},{"node":{"date":"2019-06-14T11:24:18","id":"1273","title":"Meet Waellet &#8211; the browser extension wallet for the aeternity blockchain network","path":"/blog/waellet-browser-extension-wallet-for-aeternity-blockchain-network/","content":"\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"492\" src=\"https://hack.bg/wp-content/uploads/2019/06/waellet_cover-1024x492.png\" alt=\"Waellet - Aeternity blockchain\" class=\"wp-image-1285\" srcset=\"https://hack.bg/wp-content/uploads/2019/06/waellet_cover-1024x492.png 1024w, https://hack.bg/wp-content/uploads/2019/06/waellet_cover-300x144.png 300w, https://hack.bg/wp-content/uploads/2019/06/waellet_cover-768x369.png 768w, https://hack.bg/wp-content/uploads/2019/06/waellet_cover-1038x498.png 1038w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Waellet &#8211; browser extension for aeternity blockchain network</figcaption></figure></div>\n\n\n\n<p>We are proud to bring to your attention a project that we have been hard working recently with the aim of making the interaction with decentralized applications (dApps) more user-friendly.</p>\n\n\n\n<h2>Meet Waellet</h2>\n\n\n\n<p>Waellet is our solution to make the interaction with the aeternity blockchain network more easy and intuitive. Our goal is to build the next generation of browser extension wallets.  We have been working on the wallet for a few months already and we are grateful for the support of <a href=\"https://aeternity-ventures.com/\">aeternity ventures</a> and <a href=\"https://www.aeternity-foundation.org/\">aeternity foundation</a>.</p>\n\n\n\n<p>The <a href=\"https://chrome.google.com/webstore/detail/waellet/nnkfipoloblhgnahnaocfkhmmplcdneb\">waellet extension</a> is available in the Chrome Web Extension store.</p>\n\n\n\n<h2>What problem do we solve?</h2>\n\n\n\n<p>When the team behind MetaMask has launched in July 2016, their browser extension managed to change the perception of the users as to how a cryptocurrency wallet should be. They made a &#8220;hot wallet&#8221; allowing you to use Ethereum based dApps directly in your browser. In addition one can store, send and receive ether and ERC-20 tokens.</p>\n\n\n\n<p>But as the ecosystem is growing and we have more and more chains coming into the blockchain world, we feel that from a user&#8217;s perspective it is limiting to have access to only one network at a time. It is similar to having a bank card that is allowing you to pay for services in only one currency.  </p>\n\n\n\n<p><em><strong>We want to bring in the next step in the evolution of the browser extension wallets.</strong></em></p>\n\n\n\n<h2>What is our solution?</h2>\n\n\n\n<p>Before wallets were mostly desktop applications making it very hard, user-unfriendly and unsafe to interact with the blockchain. This problem has been solved with the integration of the wallet into the browser /the browser extension wallet/.  </p>\n\n\n\n<p>By using the existing technology as a stepping stone we started to envision a wallet that will bring even better user experience. Gone will be the times when the user will have to switch wallets so he can interact with dApps hosted on different blockchains.</p>\n\n\n\n<h2>How does Waellet work? </h2>\n\n\n\n<p>We see Waellet as user&#8217;s first choice wallet when it comes to interacting with dApps hosted on different blockchains. Build around aeternity, Waellet is to become a tool that enables users to pay for different services without the need to worry about the network of the particular dApp &#8211; this will happen in a decentralized and cryptographic secure way through integration with the WeiDex &#8211; decentralized exchange.</p>\n\n\n\n<p>Currently, Waellet is still in beta and under heavy development. Last week we on-boarded three more people to work along with Milen, pushing to bring you our best vision of the wallet as soon as possible.</p>\n\n\n\n<p>You can download and try the <a href=\"https://waellet.com/\">waellet</a> but please use with caution as we have not reached a stable release yet.</p>\n\n\n\n<ul class=\"wp-block-gallery columns-2 is-cropped\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"359\" height=\"597\" src=\"https://hack.bg/wp-content/uploads/2019/06/account_view.png\" alt=\"\" data-id=\"1288\" data-link=\"https://hack.bg/?attachment_id=1288\" class=\"wp-image-1288\" srcset=\"https://hack.bg/wp-content/uploads/2019/06/account_view.png 359w, https://hack.bg/wp-content/uploads/2019/06/account_view-180x300.png 180w, https://hack.bg/wp-content/uploads/2019/06/account_view-346x576.png 346w\" sizes=\"(max-width: 359px) 100vw, 359px\" /><figcaption>Account view</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"360\" height=\"598\" src=\"https://hack.bg/wp-content/uploads/2019/06/home_view.png\" alt=\"\" data-id=\"1289\" data-link=\"https://hack.bg/?attachment_id=1289\" class=\"wp-image-1289\" srcset=\"https://hack.bg/wp-content/uploads/2019/06/home_view.png 360w, https://hack.bg/wp-content/uploads/2019/06/home_view-181x300.png 181w, https://hack.bg/wp-content/uploads/2019/06/home_view-347x576.png 347w\" sizes=\"(max-width: 360px) 100vw, 360px\" /><figcaption>Home view</figcaption></figure></li></ul>\n\n\n\n<p>Here is a link to the <a href=\"https://github.com/waellet\">Waellet GitHub</a> repo for those of you who would like to dive into the code, raise an issue or give it a star 🙂</p>\n\n\n\n<p>More updates are coming soon&#8230; Stay tuned!!!</p>\n","excerpt":"<p>We are proud to bring to your attention a project that we have been hard working recently with the aim [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Hristo","path":"/author/hgeorgiev/"}}},{"node":{"date":"2019-05-24T09:25:28","id":"1253","title":"BUIDLing on Aeternity &#8211; workshop at  WeAreDevelopers","path":"/blog/buidling-on-aeternity-workshop-at-wearedevelopers/","content":"\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"1024\" src=\"https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-1024x1024.jpg\" alt=\"hack - aeternity blockchain workshop at WeAreDevelopers\" class=\"wp-image-1254\" srcset=\"https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-1024x1024.jpg 1024w, https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-150x150.jpg 150w, https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-300x300.jpg 300w, https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-768x768.jpg 768w, https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-576x576.jpg 576w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>hack &#8211; aeternity blockchain workshop at WeAreDevelopers</figcaption></figure></div>\n\n\n\n<p>Experience\nState Channel Technology First-Hand—Join the æternity Development Crash Course!</p>\n\n\n\n<p>Developed by some of the most well-known Erlang engineers in the world, the open-source <a href=\"http://aeternity.com\">æternity</a> protocol offers a unique set of Layer 1 features that address issues such as scalability, cost-of-use, privacy, security, and decentralization. æternity has protocol-integrated State Channels for unlimited off-chain scaling, decentralized Oracles, and a Naming System that makes building and using æpps a much more enjoyable experience. æternity&#8217;s custom-built functional programming language – Sophia ML – is also a significant improvement over all existing alternatives and is the result of years-long research into distributed systems.</p>\n\n\n\n<p>During this year’s WeAreDevelopers World Congress in Berlin, Germany, two of æternity’s star developers&nbsp; &#8211; Milen Radkov and Phillipp Piwovarsky will hold an intensive and fast-paced workshop, enabling learners to quickly grasp the principles behind the æternity architecture and <a href=\"https://hack.bg/blog/tutorials/build-your-first-decentralized-application-aepp-on-aeternity-blockchain-sophia-smart-contract-address-book/\">build basic smart contracts using Sophia ML</a>. Participants will also understand how to apply State Channels and Oracles to develop real-world applications that solve both business and social problems.</p>\n\n\n\n<p><strong><em>The workshop will be held on 7th June 2019 at Room M1</em></strong> and will be divided into two sessions: one in the morning (starting\nat 11:00), and another in the afternoon (starting at 15:00), each featuring two\ntracks:</p>\n\n\n\n<p><strong>Track\n1: æternity Theoretics (45 mins)</strong></p>\n\n\n\n<p>The first session will feature a brief introduction to blockchain technology, shifting to an introduction to æternity’s protocol, architecture, features, and mechanics. Participants will learn about <a href=\"https://hack.bg/dlt-blockchain-development-services/smart-contracts-development/\">smart contract </a>programming with Sophia ML, how to use Oracles for real-world data integration, and State Channels for scalability.</p>\n\n\n\n<p><strong>Track\n2: Building on æternity (2hours)</strong></p>\n\n\n\n<p>The second part of the workshop will be dedicated to a practical exercise in which participants will learn how to set up the development environment and initialize projects using æternity’s Dev Suite. Participants will gain first-hand experience in writing a <a href=\"https://hack.bg/blog/tutorials/building-voting-aepp-with-sophia-ml-on-aeternity-blockchain/\">simple æpp with Sophia ML</a>, familiarize themselves with the interface, and delve deeper into building æpps on the platform. The track will expose participants to State Channels, smart contract initialization, and execution, and teach them how to implement lists in states, create structures, define and implement logic, test smart contracts, and make use of Oracles.</p>\n\n\n\n<p><strong>Here\nis the workshop schedule:</strong></p>\n\n\n\n<p><strong>Session 1</strong></p>\n\n\n\n<p>11:00 &#8211; 11:15 &#8211; Welcome coffee<br>11:15 &#8211; 12:00 &#8211; æternity Theoretics<br>12:00 &#8211; 13:00 &#8211; Lunch<br>13:00 &#8211; 15:00 &#8211; Building on æternity</p>\n\n\n\n<p><strong>Session 2</strong></p>\n\n\n\n<p>15:00 &#8211; 15:15 &#8211; Welcome coffee<br>15:15 &#8211; 16:00 &#8211;  æternity Theoretics<br>16:00 &#8211; 16:05 &#8211; Break<br>16:05 &#8211; 18:00 &#8211; Building on æternity</p>\n\n\n\n<p>The æternity team welcomes all curious\ndevelopers to a journey of exploration of the vast æternity Universe!\nRefreshments will be provided during the workshop.</p>\n\n\n\n<p>Come and find out why æternity’s\ninfrastructure is the best solution to the demands of any decentralized\napplication.</p>\n\n\n\n<p>The prerequisite for participation at this workshop is a valid ticket for the <a href=\"https://events.wearedevelopers.com/world-congress/tickets/\">WeAreDevelopers World Congress </a>2019.</p>\n","excerpt":"<p>Experience State Channel Technology First-Hand—Join the æternity Development Crash Course! Developed by some of the most well-known Erlang engineers in [&hellip;]</p>\n","categories":[{"id":"5","title":"Events","path":"/category/events/"},{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Milen","path":"/author/milen/"}}},{"node":{"date":"2019-03-26T12:22:06","id":"757","title":"How to run your own Aeternity node on Amazon AWS","path":"/blog/how-to-run-your-own-aeternity-node-on-amazon-aws/","content":"\n<p>Hey there,</p>\n\n\n\n<p>So you are new to <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\"><g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\"><a href=\"http://aeternity.com\">aeternity</a></g></g> blockchain and want to run a node of your own, but you don&#8217;t have powerful enough hardware or you don&#8217;t want to bully your laptop.</p>\n\n\n\n<p>After thinking a while you decide to run it on an Amazon AWS VPS instance, but you are not sure how to set everything up &#8211; well you&#8217;ve come to the right place.</p>\n\n\n\n<p>After registering, setting up your account and logging in for the first time you are presented with this AWS Management Console screen. </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00-1024x640.png\" alt=\"\" class=\"wp-image-758\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Scroll down a bit and select &#8220;<strong>Launch a virtual machine</strong>&#8220;.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19-1024x640.png\" alt=\"\" class=\"wp-image-759\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Then in the search bar type &#8220;ubuntu&#8221; and hit enter.</p>\n\n\n\n<p>Aeternity has a node release for ubuntu so Ubuntu 18.04 will be best suitable for the purpose of launching our own node without much headaches.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59-1024x640.png\" alt=\"\" class=\"wp-image-760\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>After the search loads, we select Ubuntu Server 18.04 (the first one).</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24-1024x640.png\" alt=\"\" class=\"wp-image-761\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>As you may know, Amazon gives you 12 months of free tier usage for some of its services and as it happens t2.micro tier <g class=\"gr_ gr_4 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"4\" data-gr-id=\"4\">vps</g> type is eligible for this.</p>\n\n\n\n<p><strong>BUT</strong></p>\n\n\n\n<p>It is worth mentioning that if we choose the free tier we won&#8217;t have enough CPU time (<g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"5\" data-gr-id=\"5\">amazon</g> has limited the <g class=\"gr_ gr_7 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"7\" data-gr-id=\"7\">cpu</g> time that the free tier can use) to sync with the whole <g class=\"gr_ gr_112 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"112\" data-gr-id=\"112\">aeternity</g> blockchain.</p>\n\n\n\n<p>So we now have a few options here:</p>\n\n\n\n<ul><li>proceed with the free t2.micro tier, sync the blockchain on our local pc and then upload it to the AWS instance </li><li>proceed with the free t2.micro tier, set everything up and then upgrade the tier when we hit the CPU time limit</li><li>or the easiest one &#8211; just select t3.nano or above we are good to go (it won&#8217;t cost <g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del\" id=\"5\" data-gr-id=\"5\">us</g> much, as it charges only on usage).</li></ul>\n\n\n\n<p>For the purpose of this tutorial I will be proceeding with the second option as it will give you a better overview of the whole procedure than the rest.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36-1024x640.png\" alt=\"\" class=\"wp-image-762\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>After selecting the tier type we click &#8220;Review and Launch&#8221; button to continue.<br></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16-1024x640.png\" alt=\"\" class=\"wp-image-764\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Then we click the &#8220;Launch&#8221; button. We are being asked to choose a keypair that will be used for SSH-ing into the instance or create a new one.</p>\n\n\n\n<p>Select &#8220;Create a new key pair&#8221; and then name it as you like. I named mine <code>aeternity</code>, so if you&#8217;ve selected another name, adjust the next commands accordingly. </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40-1024x640.png\" alt=\"\" class=\"wp-image-765\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption><br></figcaption></figure></div>\n\n\n\n<p>Download the key pair and click &#8220;Launch instance&#8221;.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58-1024x640.png\" alt=\"\" class=\"wp-image-766\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Our new vps instance is now launching.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15-1024x640.png\" alt=\"\" class=\"wp-image-767\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18-1024x640.png\" alt=\"\" class=\"wp-image-768\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38-1024x640.png\" alt=\"\" class=\"wp-image-769\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>While waiting for our AWS EC2 instance to fire, we can visit the <a href=\"http://github.com/aeternity/aeternity\">Aeternity blockchain Github repo</a> and search for the latest <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">aeternity</g> node <a href=\"http://github.com/aeternity/aeternity/releases/latest\">release</a>.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50-1024x640.png\" alt=\"\" class=\"wp-image-770\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Our AWS instance is already up and running. Now we need to connect to it via SSH and start setting up our aeternity node.</p>\n\n\n\n<p>Select the instance and click &#8220;Connect&#8221;.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53-1024x640.png\" alt=\"\" class=\"wp-image-771\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>We are now provided with instructions on how to connect to our vps via SSH. If you are using Windows machine &#8211; you can use PuTTY or another SSH client that you are used to.</p>\n\n\n\n<p>I&#8217;m running on OSx, so I will proceed with the tutorial via Mac&#8217;s terminal. It should be the same so don&#8217;t worry.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"640\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03-1024x640.png\" alt=\"\" class=\"wp-image-772\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Amazon asks us to change the<code>chmod</code>level of the file so the first thing we do is:</p>\n\n\n\n<p><code>chmod 400 aeternity.pem</code></p>\n\n\n\n<p>Note that the key pair file I&#8217;ve downloaded to my home folder so if you&#8217;ve downloaded your somewhere else &#8211; adjust this accordingly to your path.</p>\n\n\n\n<p>The next command also should be adjusted according to your <code>.pem</code> file location and the public DNS that Amazon provided for your instance.</p>\n\n\n\n<p>You should be able to see the exact commands on the screen above.</p>\n\n\n\n<p><code>ssh -i \"aeternity.pem\" ubuntu@ec2-54-159-117.255.compute-1.amazonaws.com</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"920\" height=\"581\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.38.png\" alt=\"\" class=\"wp-image-773\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.38.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.38-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.38-768x485.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.38-912x576.png 912w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"920\" height=\"581\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.11.png\" alt=\"\" class=\"wp-image-774\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.11.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.11-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.11-768x485.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.11-912x576.png 912w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>Now we are into our fresh launched Amazon AWS instance.</p>\n\n\n\n<p>In order for us to run aeternity node on Ubuntu 18.04 we need to install a few libraries beforehand.</p>\n\n\n\n<p><code>sudo apt-get install libsodium23</code></p>\n\n\n\n<p><code>sudo apt-get install libssl1.0.0</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"920\" height=\"598\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.51.png\" alt=\"\" class=\"wp-image-775\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.51.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.51-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.51-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.51-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>Then we download the latest node release from the aeternity&#8217;s github that we checked in the beginning.</p>\n\n\n\n<p><code>wget https://github.com/aeternity/aeternity/releases/download/v5.5.0/aeternity-5.5.0-ubuntu-x86_64.tar.gz</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"920\" height=\"598\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.41.44.png\" alt=\"\" class=\"wp-image-776\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.41.44.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.41.44-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.41.44-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.41.44-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>We need to create a directory where our aeternity node will be placed:</p>\n\n\n\n<p><code>mkdir aeternity</code></p>\n\n\n\n<p>and then extract the release archive in it:</p>\n\n\n\n<p> <code>tar -xvzf aeternity-5.5.0-ubuntu-x86_64.tar.gz -C aeternity</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"920\" height=\"598\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.35.png\" alt=\"\" class=\"wp-image-780\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.35.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.35-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.35-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.35-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"920\" height=\"598\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.54.png\" alt=\"\" class=\"wp-image-781\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.54.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.54-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.54-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.54-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>Enter the directory via <code>cd aeternity</code>.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"920\" height=\"598\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.58.png\" alt=\"\" class=\"wp-image-782\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.58.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.58-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.58-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.58-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>We now can start our aeternity node via:</p>\n\n\n\n<p><code>bin/aeternity start</code></p>\n\n\n\n<p>As you can see we can get a warning related to the maximum number of open files, so we execute <code>ulimit -n 24576</code> and then start again.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"920\" height=\"598\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.03.png\" alt=\"\" class=\"wp-image-784\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.03.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.03-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.03-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.03-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>For stopping the node we execute <code>bin/aeternity stop</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"920\" height=\"598\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.13.png\" alt=\"\" class=\"wp-image-785\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.13.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.13-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.13-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.13-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>If we want to see if our node is up and running we can make a simple <code>curl</code> request:</p>\n\n\n\n<p><code>curl http://127.0.0.1:3013/v2/blocks/top</code></p>\n\n\n\n<p>If you get some JSON like this &#8211; it means we are good to go.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"920\" height=\"598\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.53.png\" alt=\"\" class=\"wp-image-786\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.53.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.53-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.53-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.53-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>As you can notice the Aeternity node is working on TCP port <code>3013</code> so we need to allow that in our instance&#8217;s network settings.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"645\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01-1024x645.png\" alt=\"\" class=\"wp-image-787\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>We select the instance then click &#8220;Actions&#8221; and navigate to &#8220;Networking&#8221; -&gt; &#8220;Change Security Groups&#8221;.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"645\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33-1024x645.png\" alt=\"\" class=\"wp-image-788\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>We create <g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins replaceWithoutSep\" id=\"4\" data-gr-id=\"4\">new</g> security group called &#8220;<g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">aeternity</g>&#8221; and add new Custom TCP rule in the Inbound traffic tab for the <g class=\"gr_ gr_57 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"57\" data-gr-id=\"57\">port </g><code>3013</code><g class=\"gr_ gr_57 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"57\" data-gr-id=\"57\">.</g></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"645\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07-1024x645.png\" alt=\"\" class=\"wp-image-789\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"645\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19-1024x645.png\" alt=\"\" class=\"wp-image-790\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"645\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11-1024x645.png\" alt=\"\" class=\"wp-image-792\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Then we add this to our instance.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"645\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30-1024x645.png\" alt=\"\" class=\"wp-image-791\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>We can check if it&#8217;s working by accessing it in our browser at the following address:<br><br><code>our_instance_public_dns_that_amazon_provided_for_us:3013/v2/status</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"645\" src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38-1024x645.png\" alt=\"\" class=\"wp-image-793\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>You now have a running Aeternity node on AWS. Cheers ! 🙂</p>\n","excerpt":"<p>Hey there, So you are new to aeternity blockchain and want to run a node of your own, but you [&hellip;]</p>\n","categories":[{"id":"4","title":"Tutorials","path":"/category/tutorials/"},{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Milen","path":"/author/milen/"}}}]}}},"context":{}}