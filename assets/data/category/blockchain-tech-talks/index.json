{"hash":"e7b986c82fc9231a063ce0ade68850cd39972b8a","data":{"category":{"title":"Tech Talks","belongsTo":{"pageInfo":{"totalPages":2,"currentPage":1},"edges":[{"node":{"date":"2020-03-29T21:36:50","id":"1667","title":"From zero to a fully-fledged aeternity decentralized application in less than 10 minutes","path":"/blog/from-zero-to-fully-fledged-decentralized-application-in-less-than-10-minutes/","content":"\n<figure class=\"wp-block-image\"><img src=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-1024x453.png\" alt=\"\" class=\"wp-image-1775\" srcset=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-1024x453.png 1024w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-300x133.png 300w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-768x340.png 768w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-1038x459.png 1038w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure>\n\n\n\n<h2>Intro</h2>\n\n\n\n<p>Let&#8217;s be honest and put the cards down &#8211; if you really need to build a production-ready decentralized application 10 minutes won&#8217;t be nearly enough for sure, and if you are not familiar with the technology you might need some assistance with the <a href=\"https://hack.bg/dlt-blockchain-development-services/smart-contracts-development/\">smart contracts development</a> and setup.  </p>\n\n\n\n<p>Developing such a <a href=\"https://hack.bg/dlt-blockchain-development-services/decentralized-applications-development/\">decentralized application</a> will be a combination of planning and structuring the architecture of the project, drafting and designing the user interface (UI), writing, testing and deploying the smart contracts needed for the dapp to run its business logic … and combining all this together. This also involves a wide variety of technology stack options, depending on the desired outcome and use-case.</p>\n\n\n\n<p>For the purpose of this tutorial though, we will develop an app from scratch to a working decentralized application on aeternity blockchain with a simple frontend.</p>\n\n\n\n<p>Now let the timer start:</p>\n\n\n\n<h3>1. Initialize our project</h3>\n\n\n\n<p>We will use the <a href=\"https://github.com/aeternity/aepp-aeproject-js\">aeproject</a> tool which will allow us to easily set up the development environment locally.</p>\n\n\n\n<ul><li>dependencies<ul><li>docker</li><li>npm &amp; node</li></ul></li></ul>\n\n\n\n<p>Install globally</p>\n\n\n\n<pre class=\"wp-block-code\"><code>npm install -g aeproject</code></pre>\n\n\n\n<p>Initialize project</p>\n\n\n\n<pre class=\"wp-block-code\"><code>aeproject init</code></pre>\n\n\n\n<h3>2. Write our smart contract(s)</h3>\n\n\n\n<p>In this step, we will develop a simple smart contract that is only storing an integer (number) in its state on the blockchain.</p>\n\n\n\n<p>Let&#8217;s also add a getter method which will allow us to read from the contract state.</p>\n\n\n\n<p>Usually, we will do something like this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>@compiler >= 4\n\ncontract MyContract =\n   record state = { number: int }\n   entrypoint init() : state = { number = 0 }\n   stateful entrypoint set(x: int) = put(state{number = x})\n   stateful entrypoint get() : int = state.number</code></pre>\n\n\n\n<p>In our case, we can further simplify our contract since we are only storing a single integer value. As we know Sophia contracts have restricted mutable state and it is a strongly typed language so we need to define it initially.</p>\n\n\n\n<p>In this case, we can define our <code>state</code> to be of <code>type</code> <code>int</code> as we don&#8217;t need the whole <code>record</code> structure for this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>@compiler >= 4\n\ncontract MyContract =\n   type state = int\n   entrypoint init() : state = 0\n   stateful entrypoint set(x: int) = put(x)\n   stateful entrypoint get() : int = state</code></pre>\n\n\n\n<p>Here is the same contract, written in Solidity, on Ethereum blockchain just for comparison if you are more familiar with Solidity &#8230; or not:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pragma solidity >=0.5.0 &lt;0.6.0; \n\ncontract MyContract {\n    uint256 number;\n    constructor() public {\n        number = 0;\n    }\n    function set(uint256 _number) public {\n        number = _number;\n    }\n    function get() public view returns (uint256) {\n        return number;    \n    }\n}</code></pre>\n\n\n\n<h3>3. Deploy</h3>\n\n\n\n<p>In order for us to deploy to an actual <code>testnet</code> or <code>mainnet</code> we need to have some AE tokens on the selected network, so we can pay the mining fee for the transactions we will make to the blockchain.</p>\n\n\n\n<p>Note: We could also deploy it on a local testnet which can be started via <code>aeproject node</code></p>\n\n\n\n<h4>3.1. Create a wallet</h4>\n\n\n\n<p>If we do not yet have a wallet which will be used for deployment we need to generate ourselves one:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>aecli account create &lt;WALLET_NAME></code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>Note: To quickly test all of Aeternity's blockchain features from your Terminal, you can Install and use our NodeJS CLI by running:\n\nnpm i -g @aeternity/aepp-cli\naecli --help</code></pre>\n\n\n\n<h4>3.2. Fund the wallet</h4>\n\n\n\n<p>We will get some testnet AE tokens from the <a href=\"https://faucet.testnet.aepps.com\">faucet</a>, so we can deploy the contract.</p>\n\n\n\n<h4>3.3. Get our private key</h4>\n\n\n\n<p>We are going to be deploying via the command-line interface (CLI), so we will need to have our private key to pass it to the deployer.</p>\n\n\n\n<p>Get our private key:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>aecli account address &lt;WALLET_NAME> --privateKey</code></pre>\n\n\n\n<h4>3.4. Deploy to testnet</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>aeproject deploy -n testnet -s &lt;SECRET_KEY> --compiler https://latest.compiler.aepps.com</code></pre>\n\n\n\n<h3>4. Interaction with the contract</h3>\n\n\n\n<p>There are multiple we can interact with our contract. The first and most easier is to use one of the online IDEs available out there &#8211; contracts.aeternity.art, fireeditor etc.</p>\n\n\n\n<h4>4.1. Online IDE.</h4>\n\n\n\n<ol><li>contracts.aeternity.art &#8211; we put our contract code in the editor and we can access our contract by adding the address in the <code>&lt;Address&gt;</code> field so we can interact with it.<br> <code>set</code> &#8211; for setting a new value in the smart contract we have to make a stateful call (which modifies the state and costs gas)<br><code>get</code> &#8211; our getter we can access by calling static function.<br></li><li>fireeditor.nikitafuchs.de &#8211; Same as above we can put our contract code and access the freshly deployed contract <strong>at address</strong>.<br></li></ol>\n\n\n\n<h4>4.2. via the SDK</h4>\n\n\n\n<p>We can access our contract instance via this simple command and start interacting with it.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>await sdk.getContractInstance(CONTRACT_SOURCE, { contractAddress: OUR_CONTRACT_ADDRESS} );</code></pre>\n\n\n\n<p>Of course we will first have to set up our project and intialize the SDK there.</p>\n\n\n\n<h3>5. Fully-fledged Decentralized app</h3>\n\n\n\n<h4>5.1. Set up frontend</h4>\n\n\n\n<p>In order to setup our simple fronted we will use the waellet boilerplate repo which is pre-configured to communicate with the waellet extension and has the aeternity javascript sdk already prepared there. </p>\n\n\n\n<pre class=\"wp-block-code\"><code>git clone https://github.com/waellet/waellet-aepp-boilerplate &amp;&amp; cd\nnpm install</code></pre>\n\n\n\n<h4>5.2. Add the contract interface (or the full contract code)</h4>\n\n\n\n<p>We need to add our contract interface in the app, so we can call the correct methods and encode the transactions properly. This is similar to the ABI in Solidity for example.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-1024x460.png\" alt=\"\" class=\"wp-image-1763\" srcset=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-1024x460.png 1024w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-300x135.png 300w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-768x345.png 768w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-1038x466.png 1038w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25.png 1310w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>https://github.com/waellet/waellet-aepp-boilerplate/blob/23419a910f668069990f96b775bd119aba70f8d3/src/views/Home/Index.vue#L204-L216</figcaption></figure>\n\n\n\n<h4>5.3. Setup function calls </h4>\n\n\n\n<p>We also need to setup the contract methods calls in the app. </p>\n\n\n\n<h4>5.4. run</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>npm run serve</code></pre>\n\n\n\n<p>We can now access our app at <code>localhost:3000</code>:</p>\n\n\n\n<p>We can interact with the contract with the two sample buttons there.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-1024x909.png\" alt=\"\" class=\"wp-image-1769\" srcset=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-1024x909.png 1024w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-300x266.png 300w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-768x682.png 768w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-649x576.png 649w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41.png 1376w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n","excerpt":"<p>Intro Let&#8217;s be honest and put the cards down &#8211; if you really need to build a production-ready decentralized application 10 minutes won&#8217;t be nearly enough for sure, and if you are not familiar with the technology you might need some assistance with the smart contracts development and setup. Developing such a decentralized application will [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"},{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}},{"node":{"date":"2019-10-08T10:08:15","id":"1613","title":"How to create aeternity fungible token? [tutorial]","path":"/blog/how-to-create-aeternity-fungible-token-tutorial/","content":"\n<p>In this short tutorial I&#8217;ll be showing you how to create a fungible token on aeternity blockchain network.</p>\n\n\n\n<p>In this tutorial you will create a AEX-9 (fungible token standard on aeternity) token in few easy steps.<br><br>Prerequisites:</p>\n\n\n\n<ul><li><a href=\"http://waellet.com\">Waellet</a> browser extension</li></ul>\n\n\n\n<p>Note: This will be a short tutorial on creating a fungible token with allowances.</p>\n\n\n\n<h3>Step 1. Go to waellet <code>Utilities</code>  section and select <code>Fungible Tokens</code></h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://user-images.githubusercontent.com/13139371/62917304-6ba87880-bda4-11e9-9bc6-247205e70238.png\" alt=\"waellet_1\"/></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.45.41.png\" alt=\"\" class=\"wp-image-1628\" srcset=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.45.41.png 358w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.45.41-179x300.png 179w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.45.41-344x576.png 344w\" sizes=\"(max-width: 358px) 100vw, 358px\" /></figure></div>\n\n\n\n<h3>Step 2.  Click <code>Deploy fungible token</code> button.</h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://user-images.githubusercontent.com/13139371/62917315-74994a00-bda4-11e9-8617-995a66cd5064.png\" alt=\"waellet_3\"/></figure></div>\n\n\n\n<h3>Step 3. Fill the form with the details needed for the token &#8211;  Token Name, Token Symbol, and decimals.</h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://user-images.githubusercontent.com/13139371/62917318-74994a00-bda4-11e9-86fb-78f698c5764d.png\" alt=\"waellet_5\"/></figure></div>\n\n\n\n<h3>Step 4. Click deploy, confirm/sign the transaction and you are ready.</h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://user-images.githubusercontent.com/13139371/62917320-7531e080-bda4-11e9-90a2-9dd8ff03baec.png\" alt=\"waellet_7\"/></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://user-images.githubusercontent.com/13139371/62917321-7531e080-bda4-11e9-985b-a6b61b0aeb8c.png\" alt=\"waellet_8\"/></figure></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>The <code>Allowances</code> section of waellet will allow you to interact with the contract and set allowances for addresses of your choice.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>The <code>Mint/Burn</code> section allows us to <code>mint</code> (create new tokens) or <code>burn</code> (remove tokens from circulation) tokens.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.51.09.png\" alt=\"\" class=\"wp-image-1630\" srcset=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.51.09.png 359w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.51.09-178x300.png 178w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.51.09-342x576.png 342w\" sizes=\"(max-width: 359px) 100vw, 359px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.52.55.png\" alt=\"\" class=\"wp-image-1631\" srcset=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.52.55.png 358w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.52.55-179x300.png 179w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.52.55-344x576.png 344w\" sizes=\"(max-width: 358px) 100vw, 358px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.53.08.png\" alt=\"\" class=\"wp-image-1632\" srcset=\"https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.53.08.png 378w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.53.08-188x300.png 188w, https://hack.bg/wp-content/uploads/2019/10/Screenshot-2019-10-07-at-9.53.08-360x576.png 360w\" sizes=\"(max-width: 378px) 100vw, 378px\" /></figure></div>\n\n\n\n<p>After confirming the transaction you&#8217;ve successfully minted tokens to the address you specified in the previous step.</p>\n","excerpt":"<p>In this short tutorial I&#8217;ll be showing you how to create a fungible token on aeternity blockchain network. In this tutorial you will create a AEX-9 (fungible token standard on aeternity) token in few easy steps. Prerequisites: Waellet browser extension Note: This will be a short tutorial on creating a fungible token with allowances. Step [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"},{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}},{"node":{"date":"2019-07-15T14:43:14","id":"1397","title":"Waellet development update","path":"/blog/waellet-development-update/","content":"\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1-1024x388.png\" alt=\"\" class=\"wp-image-1433\" srcset=\"https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1-1024x388.png 1024w, https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1-300x114.png 300w, https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1-768x291.png 768w, https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1-1038x394.png 1038w, https://hack.bg/wp-content/uploads/2019/07/waellet_landing-1.png 1200w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>waellet &#8211; aeternity blockchain in your browser</figcaption></figure></div>\n\n\n\n<p>Its been a while since we posted about <a href=\"http://waellet.com\">waellet</a>. Here&#8217;s what&#8217;s been going on lately development-wise from our side:</p>\n\n\n\n<p>Waellet now injects <code>Aepp</code> object into the current visited webpage DOM. This allows the developers of the webpage /being a <a href=\"https://hack.bg/dlt-blockchain-development-services/decentralized-applications-development/\">decentralized application</a> or just a website that wants to interact with aeternity network/ to request connection to user wallet and ask for authorization.</p>\n\n\n\n<p>Request for connection is called via the<code>connect()</code>method available from the <code>Aepp</code> object:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>Aepp\n    .request\n    .connect()\n    .then(res =&gt; console.log(res))</code></pre>\n\n\n\n<p>After the connection was established successfully the developer is able to invoke request for signing a transaction from the user like so:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>Aepp\n    .request\n    .sign({\n        recipientId: \"ak_2DDLbYBhHcuAzNg5Un853NRbUr8JVjZeMc6mTUpwmiVzA4ic6X\",\n        amount: 0.01\n    })\n    .then(res =&gt; console.log(res))</code></pre>\n\n\n\n<p>The flow looks like this:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow-1024x266.png\" alt=\"\" class=\"wp-image-1402\" srcset=\"https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow-1024x266.png 1024w, https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow-300x78.png 300w, https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow-768x200.png 768w, https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow-1038x270.png 1038w, https://hack.bg/wp-content/uploads/2019/07/waellet_signature_request_flow.png 1539w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Waellet &#8211; Signature request flow</figcaption></figure></div>\n\n\n\n<p>Besides this we&#8217;ve been working on fixing quite a lot of UI bugs and problems &#8211; some of which has been reported by you, others found by us.</p>\n\n\n\n<p>The UI for the tipping functionality which waellet will offer is ready. The smart contracts are also ready for deployment on aeternity testnet and we will be focusing on introducing this feature for beta testing in our next releases.</p>\n\n\n\n<h3>Changelog</h3>\n\n\n\n<ul><li>Fixing problem with updating balance in account, and problem with redirect to phishing warning when visiting scam page</li><li>Injecting Aepp object</li><li>Aepp communication</li><li>Created Alert Component</li><li>Sign pop-up validate balance</li><li>Confirm or Reject close window</li><li>Closing Sign pop-up resolve promise and return info</li><li>Refactor Main Loader</li><li>ability to allow connection to wallet</li><li>validate if login when open confirm pop-up and after login redirect to view</li><li>ability to get balance of current active account</li><li>Add responsiveness in sign transaction pop-up and allow connection pop-up</li><li>validate input in aepp.request.connect method</li><li>ability to remove all connected websites to wallet</li><li>unifying postmessages responses</li></ul>\n\n\n\n<h2>Contributions are welcome</h2>\n\n\n\n<p>We will highly appreciate any contribution to the waellet project &#8211; from commenting and giving your opinion or feature proposal to reporting a small UI bug to submitting PR for fixing that 🙂</p>\n\n\n\n<h2>Get waellet</h2>\n\n\n\n<p>The extension is still in <code>beta</code> but available on all Chromium based as well as Firefox browsers:</p>\n\n\n\n<ul><li><a href=\"https://chrome.google.com/webstore/detail/waellet/nnkfipoloblhgnahnaocfkhmmplcdneb\">Get waellet from Chrome Web Store</a></li><li><a href=\"https://addons.mozilla.org/en-US/firefox/addon/waellet/\">Get waellet from Firefox Addon store</a></li><li><a href=\"http://github.com/aeternity/aepp-waellet\">Download release from Github or build it from source</a></li></ul>\n","excerpt":"<p>Its been a while since we posted about waellet. Here&#8217;s what&#8217;s been going on lately development-wise from our side: Waellet now injects Aepp object into the current visited webpage DOM. This allows the developers of the webpage /being a decentralized application or just a website that wants to interact with aeternity network/ to request connection [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}},{"node":{"date":"2019-06-14T11:24:18","id":"1273","title":"Meet Waellet &#8211; the browser extension wallet for the aeternity blockchain network","path":"/blog/waellet-browser-extension-wallet-for-aeternity-blockchain-network/","content":"\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/06/waellet_cover-1024x492.png\" alt=\"Waellet - Aeternity blockchain\" class=\"wp-image-1285\" srcset=\"https://hack.bg/wp-content/uploads/2019/06/waellet_cover-1024x492.png 1024w, https://hack.bg/wp-content/uploads/2019/06/waellet_cover-300x144.png 300w, https://hack.bg/wp-content/uploads/2019/06/waellet_cover-768x369.png 768w, https://hack.bg/wp-content/uploads/2019/06/waellet_cover-1038x498.png 1038w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Waellet &#8211; browser extension for aeternity blockchain network</figcaption></figure></div>\n\n\n\n<p>We are proud to bring to your attention a project that we have been hard working recently with the aim of making the interaction with decentralized applications (dApps) more user-friendly.</p>\n\n\n\n<h2>Meet Waellet</h2>\n\n\n\n<p>Waellet is our solution to make the interaction with the aeternity blockchain network more easy and intuitive. Our goal is to build the next generation of browser extension wallets.  We have been working on the wallet for a few months already and we are grateful for the support of <a href=\"https://aeternity-ventures.com/\">aeternity ventures</a> and <a href=\"https://www.aeternity-foundation.org/\">aeternity foundation</a>.</p>\n\n\n\n<p>The <a href=\"https://chrome.google.com/webstore/detail/waellet/nnkfipoloblhgnahnaocfkhmmplcdneb\">waellet extension</a> is available in the Chrome Web Extension store.</p>\n\n\n\n<h2>What problem do we solve?</h2>\n\n\n\n<p>When the team behind MetaMask has launched in July 2016, their browser extension managed to change the perception of the users as to how a cryptocurrency wallet should be. They made a &#8220;hot wallet&#8221; allowing you to use Ethereum based dApps directly in your browser. In addition one can store, send and receive ether and ERC-20 tokens.</p>\n\n\n\n<p>But as the ecosystem is growing and we have more and more chains coming into the blockchain world, we feel that from a user&#8217;s perspective it is limiting to have access to only one network at a time. It is similar to having a bank card that is allowing you to pay for services in only one currency.  </p>\n\n\n\n<p><em><strong>We want to bring in the next step in the evolution of the browser extension wallets.</strong></em></p>\n\n\n\n<h2>What is our solution?</h2>\n\n\n\n<p>Before wallets were mostly desktop applications making it very hard, user-unfriendly and unsafe to interact with the blockchain. This problem has been solved with the integration of the wallet into the browser /the browser extension wallet/.  </p>\n\n\n\n<p>By using the existing technology as a stepping stone we started to envision a wallet that will bring even better user experience. Gone will be the times when the user will have to switch wallets so he can interact with dApps hosted on different blockchains.</p>\n\n\n\n<h2>How does Waellet work? </h2>\n\n\n\n<p>We see Waellet as user&#8217;s first choice wallet when it comes to interacting with dApps hosted on different blockchains. Build around aeternity, Waellet is to become a tool that enables users to pay for different services without the need to worry about the network of the particular dApp &#8211; this will happen in a decentralized and cryptographic secure way through integration with the WeiDex &#8211; decentralized exchange.</p>\n\n\n\n<p>Currently, Waellet is still in beta and under heavy development. Last week we on-boarded three more people to work along with Milen, pushing to bring you our best vision of the wallet as soon as possible.</p>\n\n\n\n<p>You can download and try the <a href=\"https://waellet.com/\">waellet</a> but please use with caution as we have not reached a stable release yet.</p>\n\n\n\n<ul class=\"wp-block-gallery columns-2 is-cropped\"><li class=\"blocks-gallery-item\"><figure><img src=\"https://hack.bg/wp-content/uploads/2019/06/account_view.png\" alt=\"\" data-id=\"1288\" data-link=\"https://hack.bg/?attachment_id=1288\" class=\"wp-image-1288\" srcset=\"https://hack.bg/wp-content/uploads/2019/06/account_view.png 359w, https://hack.bg/wp-content/uploads/2019/06/account_view-180x300.png 180w, https://hack.bg/wp-content/uploads/2019/06/account_view-346x576.png 346w\" sizes=\"(max-width: 359px) 100vw, 359px\" /><figcaption>Account view</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://hack.bg/wp-content/uploads/2019/06/home_view.png\" alt=\"\" data-id=\"1289\" data-link=\"https://hack.bg/?attachment_id=1289\" class=\"wp-image-1289\" srcset=\"https://hack.bg/wp-content/uploads/2019/06/home_view.png 360w, https://hack.bg/wp-content/uploads/2019/06/home_view-181x300.png 181w, https://hack.bg/wp-content/uploads/2019/06/home_view-347x576.png 347w\" sizes=\"(max-width: 360px) 100vw, 360px\" /><figcaption>Home view</figcaption></figure></li></ul>\n\n\n\n<p>Here is a link to the <a href=\"https://github.com/waellet\">Waellet GitHub</a> repo for those of you who would like to dive into the code, raise an issue or give it a star 🙂</p>\n\n\n\n<p>More updates are coming soon&#8230; Stay tuned!!!</p>\n","excerpt":"<p>We are proud to bring to your attention a project that we have been hard working recently with the aim of making the interaction with decentralized applications (dApps) more user-friendly. Meet Waellet Waellet is our solution to make the interaction with the aeternity blockchain network more easy and intuitive. Our goal is to build the [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Hristo Georgiev","path":"/author/hgeorgiev/"}}},{"node":{"date":"2019-05-24T09:25:28","id":"1253","title":"BUIDLing on Aeternity &#8211; workshop at  WeAreDevelopers","path":"/blog/buidling-on-aeternity-workshop-at-wearedevelopers/","content":"\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-1024x1024.jpg\" alt=\"hack - aeternity blockchain workshop at WeAreDevelopers\" class=\"wp-image-1254\" srcset=\"https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-1024x1024.jpg 1024w, https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-150x150.jpg 150w, https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-300x300.jpg 300w, https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-768x768.jpg 768w, https://hack.bg/wp-content/uploads/2019/05/Artboard-1-copy@2x-100-576x576.jpg 576w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>hack &#8211; aeternity blockchain workshop at WeAreDevelopers</figcaption></figure></div>\n\n\n\n<p>Experience\nState Channel Technology First-Hand—Join the æternity Development Crash Course!</p>\n\n\n\n<p>Developed by some of the most well-known Erlang engineers in the world, the open-source <a href=\"http://aeternity.com\">æternity</a> protocol offers a unique set of Layer 1 features that address issues such as scalability, cost-of-use, privacy, security, and decentralization. æternity has protocol-integrated State Channels for unlimited off-chain scaling, decentralized Oracles, and a Naming System that makes building and using æpps a much more enjoyable experience. æternity&#8217;s custom-built functional programming language – Sophia ML – is also a significant improvement over all existing alternatives and is the result of years-long research into distributed systems.</p>\n\n\n\n<p>During this year’s WeAreDevelopers World Congress in Berlin, Germany, two of æternity’s star developers&nbsp; &#8211; Milen Radkov and Phillipp Piwovarsky will hold an intensive and fast-paced workshop, enabling learners to quickly grasp the principles behind the æternity architecture and <a href=\"https://hack.bg/blog/tutorials/build-your-first-decentralized-application-aepp-on-aeternity-blockchain-sophia-smart-contract-address-book/\">build basic smart contracts using Sophia ML</a>. Participants will also understand how to apply State Channels and Oracles to develop real-world applications that solve both business and social problems.</p>\n\n\n\n<p><strong><em>The workshop will be held on 7th June 2019 at Room M1</em></strong> and will be divided into two sessions: one in the morning (starting\nat 11:00), and another in the afternoon (starting at 15:00), each featuring two\ntracks:</p>\n\n\n\n<p><strong>Track\n1: æternity Theoretics (45 mins)</strong></p>\n\n\n\n<p>The first session will feature a brief introduction to blockchain technology, shifting to an introduction to æternity’s protocol, architecture, features, and mechanics. Participants will learn about <a href=\"https://hack.bg/dlt-blockchain-development-services/smart-contracts-development/\">smart contract </a>programming with Sophia ML, how to use Oracles for real-world data integration, and State Channels for scalability.</p>\n\n\n\n<p><strong>Track\n2: Building on æternity (2hours)</strong></p>\n\n\n\n<p>The second part of the workshop will be dedicated to a practical exercise in which participants will learn how to set up the development environment and initialize projects using æternity’s Dev Suite. Participants will gain first-hand experience in writing a <a href=\"https://hack.bg/blog/tutorials/building-voting-aepp-with-sophia-ml-on-aeternity-blockchain/\">simple æpp with Sophia ML</a>, familiarize themselves with the interface, and delve deeper into building æpps on the platform. The track will expose participants to State Channels, smart contract initialization, and execution, and teach them how to implement lists in states, create structures, define and implement logic, test smart contracts, and make use of Oracles.</p>\n\n\n\n<p><strong>Here\nis the workshop schedule:</strong></p>\n\n\n\n<p><strong>Session 1</strong></p>\n\n\n\n<p>11:00 &#8211; 11:15 &#8211; Welcome coffee<br>11:15 &#8211; 12:00 &#8211; æternity Theoretics<br>12:00 &#8211; 13:00 &#8211; Lunch<br>13:00 &#8211; 15:00 &#8211; Building on æternity</p>\n\n\n\n<p><strong>Session 2</strong></p>\n\n\n\n<p>15:00 &#8211; 15:15 &#8211; Welcome coffee<br>15:15 &#8211; 16:00 &#8211;  æternity Theoretics<br>16:00 &#8211; 16:05 &#8211; Break<br>16:05 &#8211; 18:00 &#8211; Building on æternity</p>\n\n\n\n<p>The æternity team welcomes all curious\ndevelopers to a journey of exploration of the vast æternity Universe!\nRefreshments will be provided during the workshop.</p>\n\n\n\n<p>Come and find out why æternity’s\ninfrastructure is the best solution to the demands of any decentralized\napplication.</p>\n\n\n\n<p>The prerequisite for participation at this workshop is a valid ticket for the <a href=\"https://events.wearedevelopers.com/world-congress/tickets/\">WeAreDevelopers World Congress </a>2019.</p>\n","excerpt":"<p>Experience State Channel Technology First-Hand—Join the æternity Development Crash Course! Developed by some of the most well-known Erlang engineers in the world, the open-source æternity protocol offers a unique set of Layer 1 features that address issues such as scalability, cost-of-use, privacy, security, and decentralization. æternity has protocol-integrated State Channels for unlimited off-chain scaling, decentralized [&hellip;]</p>\n","categories":[{"id":"5","title":"Events","path":"/category/events/"},{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}},{"node":{"date":"2019-03-26T12:22:06","id":"757","title":"How to run your own Aeternity node on Amazon AWS","path":"/blog/how-to-run-your-own-aeternity-node-on-amazon-aws/","content":"\n<p>Hey there,</p>\n\n\n\n<p>So you are new to <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\"><g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\"><a href=\"http://aeternity.com\">aeternity</a></g></g> blockchain and want to run a node of your own, but you don&#8217;t have powerful enough hardware or you don&#8217;t want to bully your laptop.</p>\n\n\n\n<p>After thinking a while you decide to run it on an Amazon AWS VPS instance, but you are not sure how to set everything up &#8211; well you&#8217;ve come to the right place.</p>\n\n\n\n<p>After registering, setting up your account and logging in for the first time you are presented with this AWS Management Console screen. </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00-1024x640.png\" alt=\"\" class=\"wp-image-758\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.00.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Scroll down a bit and select &#8220;<strong>Launch a virtual machine</strong>&#8220;.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19-1024x640.png\" alt=\"\" class=\"wp-image-759\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.19.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Then in the search bar type &#8220;ubuntu&#8221; and hit enter.</p>\n\n\n\n<p>Aeternity has a node release for ubuntu so Ubuntu 18.04 will be best suitable for the purpose of launching our own node without much headaches.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59-1024x640.png\" alt=\"\" class=\"wp-image-760\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.24.59.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>After the search loads, we select Ubuntu Server 18.04 (the first one).</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24-1024x640.png\" alt=\"\" class=\"wp-image-761\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.24.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>As you may know, Amazon gives you 12 months of free tier usage for some of its services and as it happens t2.micro tier <g class=\"gr_ gr_4 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"4\" data-gr-id=\"4\">vps</g> type is eligible for this.</p>\n\n\n\n<p><strong>BUT</strong></p>\n\n\n\n<p>It is worth mentioning that if we choose the free tier we won&#8217;t have enough CPU time (<g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"5\" data-gr-id=\"5\">amazon</g> has limited the <g class=\"gr_ gr_7 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"7\" data-gr-id=\"7\">cpu</g> time that the free tier can use) to sync with the whole <g class=\"gr_ gr_112 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"112\" data-gr-id=\"112\">aeternity</g> blockchain.</p>\n\n\n\n<p>So we now have a few options here:</p>\n\n\n\n<ul><li>proceed with the free t2.micro tier, sync the blockchain on our local pc and then upload it to the AWS instance </li><li>proceed with the free t2.micro tier, set everything up and then upgrade the tier when we hit the CPU time limit</li><li>or the easiest one &#8211; just select t3.nano or above we are good to go (it won&#8217;t cost <g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del\" id=\"5\" data-gr-id=\"5\">us</g> much, as it charges only on usage).</li></ul>\n\n\n\n<p>For the purpose of this tutorial I will be proceeding with the second option as it will give you a better overview of the whole procedure than the rest.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36-1024x640.png\" alt=\"\" class=\"wp-image-762\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.25.36.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>After selecting the tier type we click &#8220;Review and Launch&#8221; button to continue.<br></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16-1024x640.png\" alt=\"\" class=\"wp-image-764\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.16.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Then we click the &#8220;Launch&#8221; button. We are being asked to choose a keypair that will be used for SSH-ing into the instance or create a new one.</p>\n\n\n\n<p>Select &#8220;Create a new key pair&#8221; and then name it as you like. I named mine <code>aeternity</code>, so if you&#8217;ve selected another name, adjust the next commands accordingly. </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40-1024x640.png\" alt=\"\" class=\"wp-image-765\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.40.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption><br></figcaption></figure></div>\n\n\n\n<p>Download the key pair and click &#8220;Launch instance&#8221;.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58-1024x640.png\" alt=\"\" class=\"wp-image-766\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.26.58.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Our new vps instance is now launching.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15-1024x640.png\" alt=\"\" class=\"wp-image-767\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.15.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18-1024x640.png\" alt=\"\" class=\"wp-image-768\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.18.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38-1024x640.png\" alt=\"\" class=\"wp-image-769\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.38.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>While waiting for our AWS EC2 instance to fire, we can visit the <a href=\"http://github.com/aeternity/aeternity\">Aeternity blockchain Github repo</a> and search for the latest <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">aeternity</g> node <a href=\"http://github.com/aeternity/aeternity/releases/latest\">release</a>.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50-1024x640.png\" alt=\"\" class=\"wp-image-770\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.27.50.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Our AWS instance is already up and running. Now we need to connect to it via SSH and start setting up our aeternity node.</p>\n\n\n\n<p>Select the instance and click &#8220;Connect&#8221;.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53-1024x640.png\" alt=\"\" class=\"wp-image-771\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.28.53.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>We are now provided with instructions on how to connect to our vps via SSH. If you are using Windows machine &#8211; you can use PuTTY or another SSH client that you are used to.</p>\n\n\n\n<p>I&#8217;m running on OSx, so I will proceed with the tutorial via Mac&#8217;s terminal. It should be the same so don&#8217;t worry.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03-1024x640.png\" alt=\"\" class=\"wp-image-772\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03-1024x640.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03-300x188.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03-768x480.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03-922x576.png 922w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.03.png 1280w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Amazon asks us to change the<code>chmod</code>level of the file so the first thing we do is:</p>\n\n\n\n<p><code>chmod 400 aeternity.pem</code></p>\n\n\n\n<p>Note that the key pair file I&#8217;ve downloaded to my home folder so if you&#8217;ve downloaded your somewhere else &#8211; adjust this accordingly to your path.</p>\n\n\n\n<p>The next command also should be adjusted according to your <code>.pem</code> file location and the public DNS that Amazon provided for your instance.</p>\n\n\n\n<p>You should be able to see the exact commands on the screen above.</p>\n\n\n\n<p><code>ssh -i \"aeternity.pem\" ubuntu@ec2-54-159-117.255.compute-1.amazonaws.com</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.38.png\" alt=\"\" class=\"wp-image-773\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.38.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.38-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.38-768x485.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.29.38-912x576.png 912w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.11.png\" alt=\"\" class=\"wp-image-774\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.11.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.11-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.11-768x485.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.11-912x576.png 912w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>Now we are into our fresh launched Amazon AWS instance.</p>\n\n\n\n<p>In order for us to run aeternity node on Ubuntu 18.04 we need to install a few libraries beforehand.</p>\n\n\n\n<p><code>sudo apt-get install libsodium23</code></p>\n\n\n\n<p><code>sudo apt-get install libssl1.0.0</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.51.png\" alt=\"\" class=\"wp-image-775\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.51.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.51-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.51-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.31.51-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>Then we download the latest node release from the aeternity&#8217;s github that we checked in the beginning.</p>\n\n\n\n<p><code>wget https://github.com/aeternity/aeternity/releases/download/v5.5.0/aeternity-5.5.0-ubuntu-x86_64.tar.gz</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.41.44.png\" alt=\"\" class=\"wp-image-776\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.41.44.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.41.44-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.41.44-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.41.44-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>We need to create a directory where our aeternity node will be placed:</p>\n\n\n\n<p><code>mkdir aeternity</code></p>\n\n\n\n<p>and then extract the release archive in it:</p>\n\n\n\n<p> <code>tar -xvzf aeternity-5.5.0-ubuntu-x86_64.tar.gz -C aeternity</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.35.png\" alt=\"\" class=\"wp-image-780\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.35.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.35-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.35-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.35-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.54.png\" alt=\"\" class=\"wp-image-781\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.54.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.54-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.54-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.54-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>Enter the directory via <code>cd aeternity</code>.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.58.png\" alt=\"\" class=\"wp-image-782\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.58.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.58-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.58-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.43.58-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>We now can start our aeternity node via:</p>\n\n\n\n<p><code>bin/aeternity start</code></p>\n\n\n\n<p>As you can see we can get a warning related to the maximum number of open files, so we execute <code>ulimit -n 24576</code> and then start again.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.03.png\" alt=\"\" class=\"wp-image-784\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.03.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.03-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.03-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.03-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>For stopping the node we execute <code>bin/aeternity stop</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.13.png\" alt=\"\" class=\"wp-image-785\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.13.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.13-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.13-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.13-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>If we want to see if our node is up and running we can make a simple <code>curl</code> request:</p>\n\n\n\n<p><code>curl http://127.0.0.1:3013/v2/blocks/top</code></p>\n\n\n\n<p>If you get some JSON like this &#8211; it means we are good to go.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.53.png\" alt=\"\" class=\"wp-image-786\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.53.png 920w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.53-300x195.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.53-768x499.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.46.53-886x576.png 886w\" sizes=\"(max-width: 920px) 100vw, 920px\" /></figure></div>\n\n\n\n<p>As you can notice the Aeternity node is working on TCP port <code>3013</code> so we need to allow that in our instance&#8217;s network settings.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01-1024x645.png\" alt=\"\" class=\"wp-image-787\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.01.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>We select the instance then click &#8220;Actions&#8221; and navigate to &#8220;Networking&#8221; -&gt; &#8220;Change Security Groups&#8221;.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33-1024x645.png\" alt=\"\" class=\"wp-image-788\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.50.33.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>We create <g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins replaceWithoutSep\" id=\"4\" data-gr-id=\"4\">new</g> security group called &#8220;<g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">aeternity</g>&#8221; and add new Custom TCP rule in the Inbound traffic tab for the <g class=\"gr_ gr_57 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"57\" data-gr-id=\"57\">port </g><code>3013</code><g class=\"gr_ gr_57 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"57\" data-gr-id=\"57\">.</g></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07-1024x645.png\" alt=\"\" class=\"wp-image-789\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.07.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19-1024x645.png\" alt=\"\" class=\"wp-image-790\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.51.19.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11-1024x645.png\" alt=\"\" class=\"wp-image-792\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.11.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>Then we add this to our instance.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30-1024x645.png\" alt=\"\" class=\"wp-image-791\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.30.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>We can check if it&#8217;s working by accessing it in our browser at the following address:<br><br><code>our_instance_public_dns_that_amazon_provided_for_us:3013/v2/status</code></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38-1024x645.png\" alt=\"\" class=\"wp-image-793\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38-1024x645.png 1024w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38-300x189.png 300w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38-768x484.png 768w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38-914x576.png 914w, https://hack.bg/wp-content/uploads/2019/03/Screenshot-2019-03-14-at-16.52.38.png 1386w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n\n\n\n<p>You now have a running Aeternity node on AWS. Cheers ! 🙂</p>\n","excerpt":"<p>Hey there, So you are new to aeternity blockchain and want to run a node of your own, but you don&#8217;t have powerful enough hardware or you don&#8217;t want to bully your laptop. After thinking a while you decide to run it on an Amazon AWS VPS instance, but you are not sure how to [&hellip;]</p>\n","categories":[{"id":"4","title":"Tutorials","path":"/category/tutorials/"},{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}},{"node":{"date":"2019-03-22T16:48:06","id":"832","title":"Tezos decentralized voting","path":"/blog/tezos-decentralized-voting/","content":"\n<h2>What it is and how it works?</h2>\n\n\n\n<p>Recently <a href=\"https://tezos.com/\">Tezos protocol</a> had concluded a historic first voting round for upgrade proposals. The participants in the votes (the so-called &#8220;bakers&#8221;) had the possibility to chose between 2 proposals. Athens A and Athens B. But before we look into the process in details let&#8217;s first say few words about tezos for those of you who are unfamiliar with the project.</p>\n\n\n\n<p>Tezos is a distributed ledger built on blockchain that is designed to facilitate the building of <a href=\"https://hack.bg/dlt-blockchain-development-services/smart-contracts-development/\">smart contracts</a> while allowing for the evolution of the platform in an organic manner. The Tezos blockchain is meant to be self-evolving and capable of amending functions based on the community’s determination thanks to the protocol&#8217;s on-chain governance process.</p>\n\n\n\n<p><strong>But how exactly does the on-chain governance works? Understanding the Tezos amendment process.</strong></p>\n\n\n\n<p>The amendment process can be broken into four discrete periods: the Proposal Period, the Exploration or “Testing” Vote Period, the Testing Period, and the Promotion Vote Period. Each of these four periods lasts eight baking cycles (i.e. 32,768 blocks or roughly 22 days, 18 hours), comprising almost exactly three months from proposal to activation.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/03/tezos-governance-mechanism.jpg\" alt=\"tezos-governance-mechanism\" class=\"wp-image-840\" srcset=\"https://hack.bg/wp-content/uploads/2019/03/tezos-governance-mechanism.jpg 974w, https://hack.bg/wp-content/uploads/2019/03/tezos-governance-mechanism-300x212.jpg 300w, https://hack.bg/wp-content/uploads/2019/03/tezos-governance-mechanism-768x543.jpg 768w, https://hack.bg/wp-content/uploads/2019/03/tezos-governance-mechanism-814x576.jpg 814w\" sizes=\"(max-width: 974px) 100vw, 974px\" /><figcaption>Tezos Decentralized Voting.</figcaption></figure></div>\n\n\n\n<p>Аny failure to proceed to the subsequent period reverts the network back to a Proposal Period. In other words, failure to proceed restarts the entire amendment process.</p>\n\n\n\n<p>Tezos decentralized vote system is a step towards  the creation of <a href=\"https://medium.com/tezos/blockchains-are-not-startups-16449e210a61\">internet-based-institutions</a> that are built to last, ones that can be adopted sustainably by hundreds of millions, if not billions of users some day. </p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>More information can be found at:</p>\n\n\n\n<ul><li><a href=\"https://tezos.com/static/white_paper-2dc8c02267a8fb86bd67a108199441bf.pdf\">Tezos white paper</a></li><li><a href=\"https://tezos.com/static/position_paper-841a0a56b573afb28da16f6650152fb4.pdf﻿\">Tezos position paper</a></li><li><a href=\"https://medium.com/tezos/amending-tezos-b77949d97e1e\">Amending Tezos blog post</a></li></ul>\n","excerpt":"<p>What it is and how it works? Recently Tezos protocol had concluded a historic first voting round for upgrade proposals. The participants in the votes (the so-called &#8220;bakers&#8221;) had the possibility to chose between 2 proposals. Athens A and Athens B. But before we look into the process in details let&#8217;s first say few words [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Hristo Georgiev","path":"/author/hgeorgiev/"}}},{"node":{"date":"2019-02-21T12:18:59","id":"694","title":"0x07. Aeternity Sophia ML workshop &#8211; [Blockchain Developers Meetup]","path":"/blog/0x07-aeternity-sophia-ml-workshop-blockchain-developers-meetup/","content":"\n<p>Hey guys, </p>\n\n\n\n<p>Yesterday we had our 7th Blockchain Developers Meetup this time dedicated to <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">Aeternity&#8217;s</g> Sophia smart contract language.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/02/DSC_0512-1024x678.jpg\" alt=\"\" class=\"wp-image-698\" srcset=\"https://hack.bg/wp-content/uploads/2019/02/DSC_0512-1024x678.jpg 1024w, https://hack.bg/wp-content/uploads/2019/02/DSC_0512-300x199.jpg 300w, https://hack.bg/wp-content/uploads/2019/02/DSC_0512-768x509.jpg 768w, https://hack.bg/wp-content/uploads/2019/02/DSC_0512-870x576.jpg 870w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Blockchain Developers Meetup 0x07 Aeternity Sophia workshop</figcaption></figure></div>\n\n\n\n<p>For those of you who couldn&#8217;t attend or miss it &#8211; here is a brief summary of what we discussed and what we covered, also all of the resources.</p>\n\n\n\n<h2>Blockchain developers digest</h2>\n\n\n\n<p>As usual we&#8217;ve started our meetup with an overview of the blockchain ecosystem from the developers perspective.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/02/DSC_0516-1024x678.jpg\" alt=\"\" class=\"wp-image-699\" srcset=\"https://hack.bg/wp-content/uploads/2019/02/DSC_0516-1024x678.jpg 1024w, https://hack.bg/wp-content/uploads/2019/02/DSC_0516-300x199.jpg 300w, https://hack.bg/wp-content/uploads/2019/02/DSC_0516-768x509.jpg 768w, https://hack.bg/wp-content/uploads/2019/02/DSC_0516-870x576.jpg 870w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Hristo&#8217;s blockchain developers digest</figcaption></figure></div>\n\n\n\n<p><a href=\"http://twitter.com/HG34470538\">Hristo</a> walked us <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">trought</g> the recent blockchain developers news digest,  and explained some of the most important ones:</p>\n\n\n\n<ul><li>Ethereum Hard Fork &#8211; Constantinople and Petersburg</li><li><a href=\"http://aeternity.com\">Aeternity</a> Minerva Protocol Update Release</li><li>Bitcoin BIP174 &#8211; Partially Signed Bitcoin Transaction (PSBT)</li><li>LeapDAO MVP /More Viable Plasma/</li><li>Monoplasma&nbsp;</li><li>Baidu Blockchain Engine (BBE) Platform</li><li><a href=\"http://weidex.market\">WeiDex &nbsp;Developments</a></li></ul>\n\n\n\n<p>After the blockchain developers news digest, it was time to step into Sophia ML. </p>\n\n\n\n<h2>Sophia ML presentation</h2>\n\n\n\n<p><a href=\"http://twitter.com/milen_radkov\">Milen</a> covered the specifications of the language, showing a simple smart contract, and talking about the different types and built-in functions we have in Sophia.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/02/DSC_0523-1024x678.jpg\" alt=\"\" class=\"wp-image-700\" srcset=\"https://hack.bg/wp-content/uploads/2019/02/DSC_0523-1024x678.jpg 1024w, https://hack.bg/wp-content/uploads/2019/02/DSC_0523-300x199.jpg 300w, https://hack.bg/wp-content/uploads/2019/02/DSC_0523-768x509.jpg 768w, https://hack.bg/wp-content/uploads/2019/02/DSC_0523-870x576.jpg 870w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Sophia types and Built-in functions</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/02/solidity-sophia-comparison-1024x572.png\" alt=\"\" class=\"wp-image-696\" srcset=\"https://hack.bg/wp-content/uploads/2019/02/solidity-sophia-comparison-1024x572.png 1024w, https://hack.bg/wp-content/uploads/2019/02/solidity-sophia-comparison-300x168.png 300w, https://hack.bg/wp-content/uploads/2019/02/solidity-sophia-comparison-768x429.png 768w, https://hack.bg/wp-content/uploads/2019/02/solidity-sophia-comparison-1031x576.png 1031w, https://hack.bg/wp-content/uploads/2019/02/solidity-sophia-comparison.png 1278w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Solidity vs Sophia smart contract comparison</figcaption></figure></div>\n\n\n\n<p>He talked about what <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">improvemets</g> can we expect to be introduced with the following Minerva update &#8211; such as safe arithmetical operations and more.</p>\n\n\n\n<h2>Workshop</h2>\n\n\n\n<p>For the workshop part, <a href=\"http://twitter.com/milen_radkov\">Milen</a> had prepared an Auction smart contract both in Solidity and in Sophia and walked us through every single detail, explaining and comparing the two of them.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/02/DSC_0527-1024x678.jpg\" alt=\"\" class=\"wp-image-701\" srcset=\"https://hack.bg/wp-content/uploads/2019/02/DSC_0527-1024x678.jpg 1024w, https://hack.bg/wp-content/uploads/2019/02/DSC_0527-300x199.jpg 300w, https://hack.bg/wp-content/uploads/2019/02/DSC_0527-768x509.jpg 768w, https://hack.bg/wp-content/uploads/2019/02/DSC_0527-870x576.jpg 870w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Milen showing the differences between Solidity and Sophia</figcaption></figure></div>\n\n\n\n<p>The auction had functions for placing a bid, refunding losing bids, withdrawing the winning bid by the owner of the auction and a function to cancel the auction.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/02/auction-aepp-partial-1024x700.png\" alt=\"\" class=\"wp-image-697\" srcset=\"https://hack.bg/wp-content/uploads/2019/02/auction-aepp-partial-1024x700.png 1024w, https://hack.bg/wp-content/uploads/2019/02/auction-aepp-partial-300x205.png 300w, https://hack.bg/wp-content/uploads/2019/02/auction-aepp-partial-768x525.png 768w, https://hack.bg/wp-content/uploads/2019/02/auction-aepp-partial-842x576.png 842w, https://hack.bg/wp-content/uploads/2019/02/auction-aepp-partial.png 1056w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Sophia Auction aepp &#8211; partial code</figcaption></figure></div>\n\n\n\n<p>Milen covered the syntax specifics of the Sophia Language. Function definitions and how can we create ourselves helper functions to use as modifiers and more.</p>\n\n\n\n<p>The whole code you can get from the <g class=\"gr_ gr_85 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"85\" data-gr-id=\"85\">github</g> repo provided below in the resources.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Watch the recording here:</p>\n\n\n\n<figure class=\"wp-block-embed-youtube aligncenter wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/d0poB9Lznig?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div><figcaption>Aeternity Sophia Language Workshop &#8211; 0x07 [Blockchain Developers Meetup]</figcaption></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>Resources</h3>\n\n\n\n<ul><li>Hristo&#8217;s presentation &#8211; <a href=\"https://docs.google.com/presentation/d/1otzLc6VgEHt2ynJJeQ9mCMy0HhmfcYxflN9V1UtvL7Q/edit?usp=sharing\">blockchain developers digest</a></li><li>Milen&#8217;s presentation &#8211; <a class=\"\" href=\"https://docs.google.com/presentation/d/1-uO8caNV2HytPKNDh53WGkYBjqfmKShC310WDSIfdDg/edit?usp=sharing\"><g class=\"gr_ gr_8 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"8\" data-gr-id=\"8\">Aeternity&#8217;s</g> Sophia Language</a></li><li>Github repo of the workshop&#8217;s project &#8211; <a href=\"https://github.com/mradkov/auction-aepp\">Auction <g class=\"gr_ gr_9 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"9\" data-gr-id=\"9\">aepp</g> with Sophia</a></li><li><a href=\"https://github.com/aeternity/protocol/blob/minerva/contracts/sophia.md\">Sophia specification/documentation</a></li><li><a href=\"https://hack.bg/blog/blockchain-tech-talks/aeternity-sophia-language-visual-studio-code-extension/\">Sophia Visual Studio Code syntax highlighter extension</a></li><li><a href=\"https://youtu.be/d0poB9Lznig\">Video recording of the meetup</a></li></ul>\n\n\n\n<h3>Follow us</h3>\n\n\n\n<ul><li><a href=\"https://meetup.com/blockchain-developers-meetup-bulgaria\">Blockchain Developers Meetup</a></li><li><a href=\"https://twitter.com/hack_bg\">Twitter</a></li><li><a href=\"https://linkedin.com/in/company/hack-blockchain-development\">Linkedin</a></li><li><a href=\"https://hack.bg\">Website</a></li></ul>\n","excerpt":"<p>Hey guys, Yesterday we had our 7th Blockchain Developers Meetup this time dedicated to Aeternity&#8217;s Sophia smart contract language. For those of you who couldn&#8217;t attend or miss it &#8211; here is a brief summary of what we discussed and what we covered, also all of the resources. Blockchain developers digest As usual we&#8217;ve started [&hellip;]</p>\n","categories":[{"id":"71","title":"Meet-ups","path":"/category/meetups/"},{"id":"5","title":"Events","path":"/category/events/"},{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}},{"node":{"date":"2019-02-19T11:42:04","id":"678","title":"Aeternity Sophia Language &#8211; Visual Studio Code Extension","path":"/blog/aeternity-sophia-language-visual-studio-code-extension/","content":"\n<figure class=\"wp-block-image\"><img src=\"https://hack.bg/wp-content/uploads/2019/02/aeternity-sophia-lang-vscode-extension-1024x576.png\" alt=\"Aeternity Sophia Language Visual Studio Code Extension\" class=\"wp-image-688\" srcset=\"https://hack.bg/wp-content/uploads/2019/02/aeternity-sophia-lang-vscode-extension-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2019/02/aeternity-sophia-lang-vscode-extension-300x169.png 300w, https://hack.bg/wp-content/uploads/2019/02/aeternity-sophia-lang-vscode-extension-768x432.png 768w, https://hack.bg/wp-content/uploads/2019/02/aeternity-sophia-lang-vscode-extension.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Aeternity Sophia Language Visual Studio Code Extension</figcaption></figure>\n\n\n\n<h3>Just a quick update.</h3>\n\n\n\n<blockquote class=\"wp-block-quote is-style-large\"><p>We&#8217;ve created a Visual Studio code extension for Aeternity&#8217;s Sophia Language.</p></blockquote>\n\n\n\n<p>We felt the need for this, after having to write some Sophia smart contracts in visual studio code.</p>\n\n\n\n<p>After searching a while, we didn&#8217;t find anything released nor developed yet in regards to helping to highlight the code or show typos, so we decided to create it and help the community of blockchain developers out there, that might be struggling writing Aeternity&#8217;s Sophia smart contracts.</p>\n\n\n\n<p>Currently the extension only supports syntax highlighting the code, but we have planned some features for the nearest future to be added:</p>\n\n\n\n<ul><li>Syntax highlighting</li><li>Code snippets</li><li>Shortcut for fast compilation of the current <g class=\"gr_ gr_81 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"81\" data-gr-id=\"81\">sophia</g> smart contract</li><li>Shortcut for compiling all smart contracts in the project directory</li><li>Code completion</li><li>Default project structure</li><li>and more&#8230;</li></ul>\n\n\n\n<p>The extension could be found in the vscode marketplace and also here:</p>\n\n\n\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=MilenRadkov.sophia\">https://marketplace.visualstudio.com/items?itemName=MilenRadkov.sophia</a></p>\n\n\n\n<p>Also &#8211; this extension is open source, so any contributions, ideas <g class=\"gr_ gr_3 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-ins replaceWithoutSep\" id=\"3\" data-gr-id=\"3\">and</g> suggestions are more than welcome here in the github repo:</p>\n\n\n\n<p><a href=\"https://github.com/mradkov/vscode-sophia\">https://github.com/mradkov/vscode-sophia</a></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p><em>Update</em>: People wanted to donate some tokens for our efforts in the <g class=\"gr_ gr_92 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"92\" data-gr-id=\"92\">aeternity</g> community, so we are providing here a public address for this:<br><br><a href=\"https://www.aeknow.org/address/wallet/ak_2VjbtcY2jNj3zg3BXzDA2bNBAqT78NFsfBorER9mPg9gCXtcxa\">ak_2VjbtcY2jNj3zg3BXzDA2bNBAqT78NFsfBorER9mPg9gCXtcxa</a></p>\n","excerpt":"<p>Just a quick update. We&#8217;ve created a Visual Studio code extension for Aeternity&#8217;s Sophia Language. We felt the need for this, after having to write some Sophia smart contracts in visual studio code. After searching a while, we didn&#8217;t find anything released nor developed yet in regards to helping to highlight the code or show [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"},{"id":"7","title":"News","path":"/category/news/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}},{"node":{"date":"2019-01-28T09:36:38","id":"433","title":"How to setup our environment for developing on Ethereum","path":"/blog/how-to-setup-our-environment-for-developing-on-ethereum/","content":"\n<p class=\"has-drop-cap\">There are lots of tutorials on the Internet for developing decentralized applications, smart contracts and write unit test with Solidity on the Ethereum blockchain. Including a <a href=\"https://hack.bg/category/blog/tutorials/\">few of our own</a>, for that matter. </p>\n\n\n\n<p>BUT a large part of them lack the initial environment setup, that is needed for someone just arriving in the blockchain space with a bag full of questions, wondering where the heck to start from. </p>\n\n\n\n<p>So, after a series of questions received regarding this topic, I&#8217;m writing this, hoping, to help you out setup your ethereum solidity development environment if you are completely new to this space.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Prerequisites</h2>\n\n\n\n<ul><li>Windows, macOS, Linux computer or laptop</li><li>Internet connection</li><li>patience &#8230; 🙂</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>macOS <g class=\"gr_ gr_34 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling\" id=\"34\" data-gr-id=\"34\">se</g>tup<br></h2>\n\n\n\n<p>For macOS, ensure that you have the latest version of\n<a href=\"https://developer.apple.com/xcode/download/\">Xcode installed</a>.\nThis contains the <a href=\"https://en.wikipedia.org/wiki/Clang\">Clang C++ compiler</a>, the\n<a href=\"https://en.wikipedia.org/wiki/Xcode\">Xcode IDE</a> and other Apple development\ntools which are required for building C++ applications on OS X.\nIf you are installing Xcode for the first time, or have just installed a new\nversion then you will need to agree to the license before you can do\ncommand-line builds:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>sudo xcodebuild -license accept</code></pre>\n\n\n\n<p>Ethereum Solidity OS X builds require you have <a href=\"http://brew.sh\">Homebrew</a> package manager installed for installing external dependencies.</p>\n\n\n\n<p>Install Homebrew:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"</code></pre>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>brew update</code></pre>\n\n\n\n<p>Install node and NPM (Node Package Manager) using brew &#8211; npm will be automatically installed with node:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>brew install node</code></pre>\n\n\n\n<p>Then we can proceed with installing <code>solc</code> which is the Solidity command-line compiler.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>npm install -g solc</code></pre>\n\n\n\n<p>After that we install <code>truffle</code> framework and <code>ganache-cli</code> which will be our primary tools for compiling, testing and deployment.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>npm install -g truffle</code></pre>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>npm install -g ganache-cli</code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Windows setup</h2>\n\n\n\n<p>We need to install several things for a windows environment. The first one is git for windows &#8211; it&#8217;s a command-line tool for retrieving source code from Github. <g class=\"gr_ gr_112 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-ins replaceWithoutSep\" id=\"112\" data-gr-id=\"112\">Next</g> we need to have CMake installed, which is a cross-platform build file generator. And last we have to have a C++ compiler which we can get from Visual Studio Build Tools. The links for these three are below:</p>\n\n\n\n<ul><li><a href=\"https://git-scm.com/download/win\">Git for <g class=\"gr_ gr_48 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"48\" data-gr-id=\"48\">Windows</g></a></li><li><a href=\"https://cmake.org/download/\">CMake</a></li><li><a href=\"https://www.visualstudio.com/downloads/#build-tools-for-visual-studio-2017\">Visual Studio 2017 Build Tools</a></li></ul>\n\n\n\n<p>After <g class=\"gr_ gr_3 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-ins replaceWithoutSep\" id=\"3\" data-gr-id=\"3\">that</g> we can proceed with installing node and <g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"5\" data-gr-id=\"5\">then </g><code>solc</code><g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"5\" data-gr-id=\"5\"> <g class=\"gr_ gr_14 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-del replaceWithoutSep\" id=\"14\" data-gr-id=\"14\"><g class=\"gr_ gr_63 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-del replaceWithoutSep\" id=\"63\" data-gr-id=\"63\">,</g></g></g><g class=\"gr_ gr_14 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"14\" data-gr-id=\"14\"><g class=\"gr_ gr_63 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"63\" data-gr-id=\"63\"> </g></g><code>truffle</code><g class=\"gr_ gr_14 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"14\" data-gr-id=\"14\"><g class=\"gr_ gr_63 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"63\" data-gr-id=\"63\"> ,</g></g> <code>ganache-cli</code> like shown in the macOS setup.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><br> Then we can proceed with installing <code>solc</code> which is the Solidity command-line compiler.<br> <br> <br> <code>npm install -g solc</code><br> <br> <br> After that we install <code>truffle</code> framework and <code>ganache-cli</code> which will be our primary tools for compiling, testing and deployment.<br> <br> <br> <code>npm install -g truffle</code><br> <br> <br> <code>npm install -g ganache-cli</code> </p></blockquote>\n","excerpt":"<p>There are lots of tutorials on the Internet for developing decentralized applications, smart contracts and write unit test with Solidity on the Ethereum blockchain. Including a few of our own, for that matter. BUT a large part of them lack the initial environment setup, that is needed for someone just arriving in the blockchain space [&hellip;]</p>\n","categories":[{"id":"4","title":"Tutorials","path":"/category/tutorials/"},{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}}]}}},"context":{}}