{"hash":"6e4a16ae583830626604484392b63bb9aecbdcf7","data":{"post":{"id":"3303","title":"Redactable blockchain&#8230; Wait,  what?","date":"2021-06-24T12:58:06","content":"\n<p class=\"has-drop-cap\">This was my reaction when I was first introduced to the topic. Although there isn&#8217;t a hot discussion surrounding the concept, it&#8217;s worth exploring it. That&#8217;s why I thought it would be meaningful to share some information on the motivation behind the idea, several solutions that were introduced by researchers, and why I think it makes sense to pay attention to the topic.</p>\n\n\n\n<p>First things first, there is a chance that your thought right now is: &#8220;I thought the whole idea of blockchain is that it&#8217;s an immutable and verifiable way of preserving information. I would want it to be immutable under <em>ALL</em> circumstances.&#8221;</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://hack.bg/wp-content/uploads/2021/06/well_yes_but_actually.jpg\" alt=\"\" class=\"wp-image-3304\" width=\"496\" height=\"278\" srcset=\"https://hack.bg/wp-content/uploads/2021/06/well_yes_but_actually.jpg 960w, https://hack.bg/wp-content/uploads/2021/06/well_yes_but_actually-300x169.jpg 300w, https://hack.bg/wp-content/uploads/2021/06/well_yes_but_actually-768x432.jpg 768w\" sizes=\"(max-width: 496px) 100vw, 496px\" /></figure></div>\n\n\n\n<p>To clarify Pirate Captain&#8217;s opinion, let&#8217;s look at an analogy. Nowadays, the Internet is a vast landscape that is home to both great and not-so-great content. And that content is (to some extent) manageable and subject to control. Well, the blockchain bears many similarities to the Internet, it&#8217;s a peer-to-peer network, information is stored &#8220;on&#8221; it, people are free to &#8220;upload&#8221; information to it. The big difference is that once it&#8217;s up there, that data stays there. Forever.</p>\n\n\n\n<h3>Is this good? Or bad?</h3>\n\n\n\n<p>Well, of course, it&#8217;s good. Immutability kind of makes digital currency possible. However, let&#8217;s look at some of the examples when the inherent immutability of blockchain is actually bad:</p>\n\n\n\n<ul><li>Illegal and improper content embedded in transactions &#8211; such was found by researchers from RWTH Aachen University as stated in this <a href=\"https://www.theguardian.com/technology/2018/mar/20/child-abuse-imagery-bitcoin-blockchain-illegal-content\" target=\"_blank\" rel=\"noreferrer noopener\">article</a></li><li>Illegal distribution of intellectual property</li><li>Potential new laws such as the &#8220;right to be forgotten&#8221; (<a href=\"https://gdpr.eu/article-17-right-to-be-forgotten/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Article 17 of the GDPR</a>)</li><li>Lastly, one could also view the inability to update smart contracts and fix bugs as a negative byproduct of immutability. Although the community has managed with those issues so far.</li></ul>\n\n\n\n<p>After listing those points, let&#8217;s also look at some of the issues with redacting blockchains:</p>\n\n\n\n<ul><li>It&#8217;s an extremely controversial and polarizing topic that might bring more harm than good at this time</li><li>The complexity of finding a working solution is high and with some solutions, it will tend to get higher as a blockchain grows and data gets &#8220;dug in&#8221; further back into the chain</li><li>Who is to say how frequently redactions will be applied?</li></ul>\n\n\n\n<p>As with all topics, people are entitled to their opinion, and if you didn&#8217;t close the website until now, because mutable blockchains sound preposterous to you, here are some solutions that address mutability.</p>\n\n\n\n<h4>Hard forks</h4>\n\n\n\n<p>This is the most straightforward solution. The blockchain is replaced from the current block to the block that will be changed. Although quite simple to explain, hard forks can be extremely costly because a segment of the blockchain has to be re-written.</p>\n\n\n\n<h4>More solutions that &#8220;keep&#8221; immutability</h4>\n\n\n\n<p>Obviously, hard forks are not optimal. There are other ways to implement redactable content while keeping the blockchain immutable.</p>\n\n\n\n<ul><li>The first option I&#8217;ll mention is pruning. This is the act of deleting raw data in blocks after some period of new blocks. The strategy is described in Bitcoin&#8217;s whitepaper (7. Reclaiming Disk Space) although in a different aspect and not as a way to get rid of &#8220;bad&#8221; data on the blockchain.</li><li>One option is to store pointers to the data and not the actual data. This way the data is kept in some distributed storage system (IPFS) and to redact the data on the blockchain, one has to change the data in the distributed storage. The pointers in the blockchain remain the same.</li><li>Another approach that covers deleting data and not editing is storing data in an encrypted form and keeping the decryption keys private. That way, deleting data could be equal to deleting the decryption keys.</li></ul>\n\n\n\n<h4>Solutions that discard immutability</h4>\n\n\n\n<p>This is the most disruptive type of solution as they effectively institute a new understanding of what the blockchain ledger is. Many questions may arise &#8211; what kind of changes will be allowed, are the changes going to be of entire blocks or transactions within a block, permissionless or premissioned? </p>\n\n\n\n<p>To get a better overview of the different approaches, I&#8217;ll share two solutions born from academic research &#8211; one is an example for a consensus/network layer approach in a permissionless setting, the other is an application layer approach in permissioned setting.</p>\n\n\n\n<h5>Redactable blockchain in permissionless setting</h5>\n\n\n\n<p>You can read the paper <a href=\"https://thanghoang.github.io/teaching/sp21/cs5594/files/paper/sp19.pdf\" target=\"_blank\" rel=\"noreferrer noopener\">here</a>. Alternatively, you can also check the <a href=\"https://www.youtube.com/watch?v=gxCkkqLQiWE&amp;t=849s\" target=\"_blank\" rel=\"noreferrer noopener\">presentation of the protocol at the 2019 IEEE Symposium on Security and Privacy</a>. Either way, here is a short summary of the protocol:</p>\n\n\n\n<ul><li>It&#8217;s a voting-based protocol for block redaction that works with all consensus protocols (PoW, PoS, etc.)</li><li>The main idea is to modify the classical block structure the following way:<ul><li>There are two links between each block (&#8220;old&#8221; and &#8220;new&#8221;) and two Merkle roots</li><li>For each valid block, the &#8220;new&#8221; and &#8220;old&#8221; links are the same</li></ul></li><li>Users can propose to edit blocks via a request mechanism<ul><li>To do that, a user has to propose a substitution block with an updated &#8220;new&#8221; Merkle root along with the necessary computations (in a PoW scenario, the hashes)</li></ul></li><li>The miners (again, in a PoW scenario) can then vote for the proposed block. This is done by including the hash of the candidate block in new blocks</li><li>If, after a predetermined voting period, the redaction is approved, the old block is replaced by the proposed block</li></ul>\n\n\n\n<h5>Redactable blockchain in permissioned setting</h5>\n\n\n\n<p>This is an application layer approach that sets an example for a protocol in permissioned setting. The paper could be found at this link: <a href=\"https://www.ndss-symposium.org/wp-content/uploads/2019/02/ndss2019_02A-3_Derler_paper.pdf\" target=\"_blank\" rel=\"noreferrer noopener\">Fine-Grained and Controlled Rewriting in Blockchains: Chameleon-Hashing Gone Attribute-Based</a>. To avoid diving deeper into technical details, let&#8217;s just summarize it by saying that the ability to edit is based on a cryptographic primitive, called <a href=\"https://www.ndss-symposium.org/wp-content/uploads/2017/09/Chameleon-Signatures-paper-Hugo-Krawczyk.pdf\" target=\"_blank\" rel=\"noreferrer noopener\">Chameleon Hash functions</a>.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"544\" src=\"https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs-1024x544.png\" alt=\"\" class=\"wp-image-3322\" srcset=\"https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs-1024x544.png 1024w, https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs-300x159.png 300w, https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs-768x408.png 768w, https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs-1038x551.png 1038w, https://hack.bg/wp-content/uploads/2021/06/PIC-1CHs.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Chameleon Hashes (CHs)</figcaption></figure>\n\n\n\n<p>However, since the Chameleon Hash (CH) functions from the linked paper guarantee proper function only under the condition that the trapdoor remains secure, they aren&#8217;t the optimal choice. That&#8217;s why the researchers who produced the Fine-Grained and Controlled Rewriting protocol set on to build upon an updated version of the CH functions, namely <a href=\"https://eprint.iacr.org/2017/011.pdf\" target=\"_blank\" rel=\"noreferrer noopener\">Chameleon Hashes with Ephemeral Trapdoors</a> (CHET). </p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"432\" src=\"https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs-1024x432.png\" alt=\"\" class=\"wp-image-3323\" srcset=\"https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs-1024x432.png 1024w, https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs-300x127.png 300w, https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs-768x324.png 768w, https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs-1038x438.png 1038w, https://hack.bg/wp-content/uploads/2021/06/PIC-2CHETs.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Chameleon Hashes with Ephemeral Trapdoors (CHETs)</figcaption></figure>\n\n\n\n<p>Taking the CHETs, they created a new cryptographic primitive &#8211; Policy-Based Chameleon Hashes (PBCHs).</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>PBCHs generalize the notion of chameleon-hashes by giving the party computing a hash the ability to associate access policies to the generated hashes. Anyone who possesses enough privileges to satisfy the policy can then find arbitrary collisions for a given hash. We then apply this concept to transaction-level rewriting within blockchains, and thus support fine-grained and controlled modifiability of blockchain objects.</p><cite>David Derler, Kai Samelin, Daniel Slamanig and Christoph Striecks</cite></blockquote>\n\n\n\n<p>In short, PBCHs upgrades CHs by adding 2 things:</p>\n\n\n\n<ol><li>Attributes &#8211; essentially, roles such as &#8220;Director&#8221;, &#8220;Scientist&#8221;, &#8220;Engineer&#8221;, &#8220;Manager&#8221;, etc.</li><li>Access structures &#8211; Boolean conditions ensuring an entity has a given attribute such as (&#8220;Scientist&#8221; AND &#8220;Engineer&#8221;) OR &#8220;Manager&#8221;</li></ol>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"544\" src=\"https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs-1024x544.png\" alt=\"\" class=\"wp-image-3324\" srcset=\"https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs-1024x544.png 1024w, https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs-300x159.png 300w, https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs-768x408.png 768w, https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs-1038x551.png 1038w, https://hack.bg/wp-content/uploads/2021/06/PIC-3PBCHs.png 1495w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Policy Based Chameleon Hashes (PBCHs)</figcaption></figure>\n\n\n\n<p>In the end, the innovative protocol produced a solution for efficiently being able to exchange transactions within a block, regardless of the block position within the blockchain, while keeping the hash of the Merkle Tree valid.</p>\n\n\n\n<h3>So&#8230; What does this mean?</h3>\n\n\n\n<p>If you ask me, nothing essential at this point in time. Although growing with great speed, the adoption of blockchain is still in its early years. We&#8217;re seeing the spectrum of practical applications grow each day hand by hand with the increasing user base and that&#8217;s what makes it so dynamic and interesting. The newly explored areas in this new technology allow for anything from bugs costing millions in cryptocurrency, scams, and make-money-fast schemes to cutting-edge innovations, research, and a view for a better future. But not to get philosophical, back to the topic of this blog post. </p>\n\n\n\n<p>Redactibility is just one of the research areas that are somewhere on the sideline of the main pitch that is today&#8217;s blockchain technology. Time will show if it gets picked to play and becomes crucial. There are many moving parts to that. For one, the described permissionless solution is in harmony with Nakamoto&#8217;s philosophy, but it would still require time and effort for it to be applied in a real-world blockchain. The second PBCH protocol introduces a strong cryptographic approach to the problem while being an application-layer solution, but at its core, it requires a permissioned setting &#8211; something that the crypto community isn&#8217;t fond of.</p>\n\n\n\n<p>In the end, before even talking about different approaches and solutions to a redactable blockchain, we should have a definitive answer to the more important questions &#8211; will the community ever want such a thing hard enough that it actually jumps from the field of research to the real world? Maybe&#8230; Who knows? But by all means, it&#8217;s worth it to keep an eye on it.</p>\n","excerpt":"<p>This was my reaction when I was first introduced to the topic. Although there isn&#8217;t a hot discussion surrounding the [&hellip;]</p>\n","link":"https://hack.bg/blog/blockchain-tech-talks/redactable-blockchain-wait-what/","modified":"2021-06-24T12:58:07","featuredMedia":{"sourceUrl":"https://hack.bg/wp-content/uploads/2021/06/cover.png","altText":"redactable-blockchain-cover","mimeType":"image/png","mediaDetails":{"width":1920,"height":1080}},"categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/","count":16}],"tags":[{"id":"13","title":"Blockchain","path":"/tag/blockchain/","count":65},{"id":"191","title":"Fork","path":"/tag/fork/","count":1},{"id":"190","title":"Redactable","path":"/tag/redactable/","count":1}],"author":{"name":"Aleksandar Hadzhiyski","path":"/author/aleksandar/"},"metadata":{"postAudioId":["4902fbf9af0fb470ad9a980a600e6a5fe24a3f61"],"mediumPost":["O:11:\"Medium_Post\":11:{s:16:\"author_image_url\";N;s:10:\"author_url\";N;s:11:\"byline_name\";N;s:12:\"byline_email\";N;s:10:\"cross_link\";N;s:2:\"id\";N;s:21:\"follower_notification\";N;s:7:\"license\";N;s:14:\"publication_id\";N;s:6:\"status\";N;s:3:\"url\";N;}"],"postViewsCount":["77"],"rankMathFocusKeyword":["blockchain"],"rankMathTitle":[],"rankMathDescription":[]}}},"context":{}}