{"hash":"03ecf60e0b3906b2c4222f0a39c860d56b92073b","data":{"tag":{"title":"Blockchain","belongsTo":{"pageInfo":{"totalPages":6,"currentPage":5},"edges":[{"node":{"date":"2019-01-23T20:11:11","id":"533","title":"Building Voting æpp with Sophia ML on æternity blockchain","path":"/blog/building-voting-aepp-with-sophia-ml-on-aeternity-blockchain/","content":"\n<p>Time is passing by and we are getting more experienced in writing smart contracts with Sophia ML language on æ<g class=\"gr_ gr_8 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"8\" data-gr-id=\"8\">ternity</g> blockchain.</p>\n\n\n\n<p>In this tutorial, I&#8217;d like to share with you a simple voting decentralized <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">aepp</g> solution that we&#8217;ve built during the æpps summit in Turkey, which I took part in.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"960\" height=\"540\" src=\"https://hack.bg/wp-content/uploads/2019/01/aepps-summit.jpg\" alt=\"\" class=\"wp-image-542\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/aepps-summit.jpg 960w, https://hack.bg/wp-content/uploads/2019/01/aepps-summit-300x169.jpg 300w, https://hack.bg/wp-content/uploads/2019/01/aepps-summit-768x432.jpg 768w\" sizes=\"(max-width: 960px) 100vw, 960px\" /><figcaption>photo by nikita fuchs</figcaption></figure></div>\n\n\n\n<p>This was one of my first times interacting with Sophia ML smart contracts, and while at the æpps summit I&#8217;ve gathered some cool and enthusiastic people, and made ourselves sort of a studying group. We decided to brainstorm and learn together while developing this voting <g class=\"gr_ gr_6 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"6\" data-gr-id=\"6\">aepp</g>. This is the short summary of what we&#8217;ve decided our voting <g class=\"gr_ gr_7 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"7\" data-gr-id=\"7\">aepp</g> will be doing:</p>\n\n\n\n<ol><li>Add candidates to vote for</li><li>Allow users to give their vote for a certain candidate</li><li>Count the votes that every candidate gathered</li></ol>\n\n\n\n<p class=\"note\">You can <g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins replaceWithoutSep\" id=\"5\" data-gr-id=\"5\">try</g> push the <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">aepp&#8217;s</g> functionalities further, with more sophisticated functions and use case, you can try doing it <g class=\"gr_ gr_7 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-del replaceWithoutSep\" id=\"7\" data-gr-id=\"7\">yourself,</g> <g class=\"gr_ gr_25 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar multiReplace\" id=\"25\" data-gr-id=\"25\">like</g> we did. Try it &#8211; its fun.</p>\n\n\n\n<h2>Setting up project and development <g class=\"gr_ gr_109 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace gr-progress\" id=\"109\" data-gr-id=\"109\">environment</g></h2>\n\n\n\n<p><g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-ins replaceWithoutSep\" id=\"5\" data-gr-id=\"5\">First</g> we have to initialize our project where we will write <g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar multiReplace\" id=\"4\" data-gr-id=\"4\">the smart</g> contract. In order to do that we will be using <code>forgae</code>. Take a look at the <a href=\"https://hack.bg/blog/tutorials/build-your-first-decentralized-application-aepp-on-aeternity-blockchain-sophia-smart-contract-address-book/\">Build first </a><g class=\"gr_ gr_92 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"92\" data-gr-id=\"92\"><a href=\"https://hack.bg/blog/tutorials/build-your-first-decentralized-application-aepp-on-aeternity-blockchain-sophia-smart-contract-address-book/\">aeternity</a></g><a href=\"https://hack.bg/blog/tutorials/build-your-first-decentralized-application-aepp-on-aeternity-blockchain-sophia-smart-contract-address-book/\"> application with Sophia ML tutorial</a> and follow the steps to initialize your project.</p>\n\n\n\n<h2>Smart contract</h2>\n\n\n\n<p>As you probably already know (if you&#8217;ve followed the previous tutorial), in <g class=\"gr_ gr_3 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-ins replaceWithoutSep\" id=\"3\" data-gr-id=\"3\">Sophia</g> ML we have a <strong>state</strong> which is the place where we store data on-chain, and it is the only thing in the smart contract that can be mutated (overwritten).</p>\n\n\n\n<p>The first thing we do is to define our variables and types that we are going to use in the smart contract. And <g class=\"gr_ gr_217 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"217\" data-gr-id=\"217\">the </g><code>init()</code><g class=\"gr_ gr_217 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"217\" data-gr-id=\"217\"> function</g> which is the constructor basically, if we compare this to a Solidity smart contract.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>contract Vote =\n   type candidate = address\n   type votes = list(address)\n\n   record state = \n      { vote : map(candidate, votes) }\n\n   public function init() : state = \n      { vote = { } }</code></pre>\n\n\n\n<p>We are defining <g class=\"gr_ gr_263 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"263\" data-gr-id=\"263\">the </g><code>candidate</code><g class=\"gr_ gr_263 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"263\" data-gr-id=\"263\"> type</g> as address, and votes as a <strong>list</strong> of addresses. And the <code>state</code> record will be storing a map (key-value-pair) of <code>candidate</code> to <code>votes</code>.<br></p>\n\n\n\n<p><del>Starting with the first functionality for the aepp &#8211; adding candidates:</del></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code><del>  public stateful function add_candidate(candidate: address) : bool =       is_candidate(candidate)       true</del></code></pre>\n\n\n\n<p><del>What this does is passing the candidate to the </del><code><del>is_candiate()</del></code><del> function &#8211; taking a candidate&#8217;s address as a parameter, checking if there is a candidate defined at with this address and saving it to the </del><strong><del>votes</del></strong><del> mapping in the state with the initial empty list of voters if not.</del><br></p>\n\n\n\n<p><del>Here are the helper functions we are using for this:</del></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code><del>   private stateful function is_candidate(candidate: address) =       let candidate_found = lookupByAddress(candidate, state.votes, { voters = [] })       if (size(candidate_found.voters) == 0)          put(state{             votes[candidate] = { voters = [] } })    private function lookupByAddress(k : address, m, v) =       switch(Map.lookup(k,m))          None => v          Some(x) => x</del></code></pre>\n\n\n\n<p>We are doing this because in Sophia ML we don&#8217;t have a default value of 0x0/false as in Solidity for example. So, in order for us to cast a vote, we need to first have added the candidates which we can vote for.</p>\n\n\n\n<p class=\"note\">If we don&#8217;t add the candidate first, before voting, we will hit <code>out of gas</code> error.</p>\n\n\n\n<p>Next we create the vote function which looks like this:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>public stateful function vote(vote_for: candidate) =\n      put(state{ vote[vote_for = []] @ vs = Call.caller :: vs })</code></pre>\n\n\n\n<p>We access the transaction initiator&#8217;s address by the <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">built </g><g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"4\" data-gr-id=\"4\"><g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"3\" data-gr-id=\"3\">in</g> </g><code>Call.caller</code><g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"4\" data-gr-id=\"4\"> and</g> prepend <g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"5\" data-gr-id=\"5\">it </g><code>::</code><g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"5\" data-gr-id=\"5\"> to</g> the current list of voters. Using this <g class=\"gr_ gr_23 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"23\" data-gr-id=\"23\">syntx</g> we <g class=\"gr_ gr_32 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"32\" data-gr-id=\"32\">dont</g> need to worry whether the candidate was initialized or not.</p>\n\n\n\n<p><g class=\"gr_ gr_9 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins replaceWithoutSep\" id=\"9\" data-gr-id=\"9\">Last</g> thing is the get votes count function.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>public function count_votes(count_for : candidate) =\n      length(state.vote[count_for = []])</code></pre>\n\n\n\n<p>Here we are using a custom <code>length</code> function which we define as a helper function below. Here is the code and below we can see the explanation.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>private function length(l : list('a)) : int = length'(l, 0)\n</code></pre>\n\n\n\n<p>This is where things get a bit more complicated, so I will try to explain what is happening here.</p>\n\n\n\n<p>Since in Sophia ML we don&#8217;t have <code>.count</code> or <code>.length</code> to get the list length, we need to make ourselves a helper function which will make a recursion and will iterate over the list while incrementing a counter.</p>\n\n\n\n<p>The <code>length</code> function is defined to accept a list <g class=\"gr_ gr_9 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"9\" data-gr-id=\"9\">of </g><code>'a</code><g class=\"gr_ gr_9 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"9\" data-gr-id=\"9\"> which</g> is the convention for a generic <g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-del replaceWithoutSep\" id=\"5\" data-gr-id=\"5\">type,</g> and a return <g class=\"gr_ gr_11 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"11\" data-gr-id=\"11\">type </g><code>int</code><g class=\"gr_ gr_11 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"11\" data-gr-id=\"11\"> .</g> In the function&#8217;s <g class=\"gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-ins replaceWithoutSep\" id=\"6\" data-gr-id=\"6\">body</g> we are calling <g class=\"gr_ gr_10 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"10\" data-gr-id=\"10\">the </g><code>length'</code><g class=\"gr_ gr_10 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"10\" data-gr-id=\"10\"> </g><g class=\"gr_ gr_7 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-del replaceWithoutSep\" id=\"7\" data-gr-id=\"7\"><g class=\"gr_ gr_10 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"10\" data-gr-id=\"10\">function</g>,</g> while passing the list and an initial value for the counter.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>private function length'(l : list('a), x : int) : int =       switch(l)          [] => x          _ :: l' => length'(l', x + 1)</code></pre>\n\n\n\n<p>And here the magic happens, we use <g class=\"gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"6\" data-gr-id=\"6\">the </g><code>switch</code><g class=\"gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"6\" data-gr-id=\"6\"> statement</g> with 2 cases <code>[] => x</code> &#8211; which returns the value of the counter and breaks the recursion if the list is empty. And <code>_ :: l' => length'(l', x+1)</code> &#8211; meaning we are using a pattern matching and we are separating the first element from the list and the remainder and then recursively passing the list&#8217;s remainder to the same <g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-del replaceWithoutSep\" id=\"5\" data-gr-id=\"5\">function,</g> while incrementing the counter.</p>\n\n\n\n<p>The whole smart contract code looks like this in the end</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/d05aeb76c59e2098d54dc900e94aaa41.js\"></script><figcaption>Sophia ML basic voting aepp</figcaption></figure>\n\n\n\n<h2>Conclusion</h2>\n\n\n\n<p>It is fairly simple to create a basic aepp on æternity blockchain using Sophia ML. In our case with the ae-vote we stumbled upon some tricky parts like the recursive iteration, we had to make above, but when you familiarize yourself with the language it is easier.</p>\n\n\n\n<h3>Useful links</h3>\n\n\n\n<ul><li><a href=\"https://github.com/mradkov/ae-vote\">Github repo of the project</a></li><li><a href=\"https://github.com/aeternity/protocol/blob/master/contracts/sophia.md\">Sophia documentation</a></li><li><a href=\"https://dev.aepps.com/\">æternity documentation</a></li></ul>\n","excerpt":"<p>Time is passing by and we are getting more experienced in writing smart contracts with Sophia ML language on æternity [&hellip;]</p>\n","categories":[{"id":"4","title":"Tutorials","path":"/category/tutorials/"},{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"}],"author":{"name":"Milen","path":"/author/milen/"}}},{"node":{"date":"2019-01-16T17:18:35","id":"525","title":"How to boost your business with blockchain? [Part 2]","path":"/blog/how-to-boost-your-business-with-blockchain-part-2/","content":"\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*zdI2UFmpzHMjCTfK\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@samsonyyc?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Samson Creative.</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>In the previous post of this series on how to boost your business with blockchain, we were discussing the fundamentals of blockchain tech. If you have missed it you can find it here:&nbsp;<strong><a href=\"https://hack.bg/blog/blockchain-and-business/how-to-boost-your-business-with-blockchain/\">How to boost your business with blockchain?</a></strong></p>\n\n\n\n<p style=\"text-align:left\">Briefly speaking, we reviewed in a simplified non-technical way the core of blockchain technology and we discussed how you can benefit from integrating it into your business. We came to the conclusion that the main benefit of using blockchain technology is to achieve <strong>trust.</strong></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*qCfB1Rs_TejfX9bm\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@mmckee30?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Mitch Mckee</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>In the previous post, we concluded that trust is essential for making business and its the essence of blockchain tech, so using blockchain is beneficial for attracting new customers and partners.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>In this post, we are going to discuss whether you should do an ICO or an STO to power your existing business or finance your new business idea.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*ZktwoqxtvERrzPes\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>So let&#8217;s first explain what is ICO and what is STO.</p>\n\n\n\n<p>ICO stands for <a href=\"https://hack.bg/dlt-blockchain-development-services/ico-initial-coin-offering/\">Initial Coin Offering</a> and as many of you had heard it was the main way for non-existing projects to gather an impressive amount of money during those last few years.</p>\n\n\n\n<p>It all started with Ethereum raising money to develop its platform, the one that has become the main platform to make ICO&#8217;s on. The peak was sometime in the middle of last year with projects like Tezos and FileCoin raising as much as 250 millions of dollars from individual investors.&nbsp;</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*li78tZhCpfoqOgA8\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@blankerwahnsinn?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Fabian Blank</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>Even though many of the projects failed to deliver the expected products, either due to lack of technology developments (the main issue being scalability) or by simply disappearing with bags full of money (a.k.a. SCAM) the <strong><em><g class=\"gr_ gr_4 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"4\" data-gr-id=\"4\">ICOs</g> are an “Effective way” to crowdfund your project if rules are followed </em></strong><em>as stated recently by </em>Jay Clayton, chairman of the U.S. Securities and Exchange Commission (SEC). You can find more on the recent article <a href=\"https://www.coindesk.com/icos-are-effective-way-to-raise-capital-if-rules-are-followed-sec-chairman\">from <g class=\"gr_ gr_49 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"49\" data-gr-id=\"49\">coindesk</g></a>.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*Sr6riKSA36oEWnKL\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>Due to a large number of scams and projects that did not manage to deliver, plus the downturn of the market, many proclaimed that the ICO era is over and that the new way to raise money is via an STO. But what is STO?</p>\n\n\n\n<p>STO stands for Security Token Offering and the main difference to the ICO is that the tokens are <strong>Security Tokens</strong>, backed by something tangible like the assets, profits, or revenue of the company. To put it in another way, only accredited investors can participate in the offerings. Their funds are protected by the law and the investors are getting either a part of the company (shares) or part of the company&#8217;s profits (dividends).</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*pFPj1Nd3IiOr7E2G\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>Securities laws are well developed and defined in most of <g class=\"gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-del replaceWithoutSep\" id=\"6\" data-gr-id=\"6\">the countries</g>. Thus, Security Tokens would inherit a well build legal framework and structure that would support token buyer rights, protect them from <g class=\"gr_ gr_7 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-del replaceWithoutSep\" id=\"7\" data-gr-id=\"7\">the unfortunate</g> situations and set their expectations right. However, secondary trading and liquidity are comparatively reduced for these tokens, as securities can&#8217;t be traded as freely as the Utility Tokens since securities are subjected to many country-specific restrictions.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*Th5k_Ex7QrrKM6VR\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<blockquote class=\"wp-block-quote is-style-large\"><p>To wrap it up &#8230; <br></p></blockquote>\n\n\n\n<p>ICOs are a great way to deliver a <strong>utility token</strong> that will power your business by allowing the early &#8220;supporters&#8221; of your idea to use your services at a reduced price.</p>\n\n\n\n<p>STOs are an alternative way to raise money by offering <strong>security tokens, </strong>which are seen as shares of your company, giving rights to dividends or part of your company to the investors.&nbsp;</p>\n\n\n\n<p>Which of both to chose to boost your business depends on your business plan but clearly any of the above can bring you the fresh capital that will allow you to grow your business.&nbsp;</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you have a great idea — but you not sure if blockchain technology can be integrated into your business, Get in touch with us at <a href=\"mailto:hello@hack.bg\" rel=\"noreferrer noopener\" target=\"_blank\">hello@hack.bg</a>.</p>\n\n\n\n<p>The full list of our services could be found on our website at <a href=\"https://hack.bg/#services\" rel=\"noreferrer noopener\" target=\"_blank\">https://hack.bg/#services</a></p>\n\n\n\n<p><strong>We<em> bring ideas to life.</em></strong></p>\n","excerpt":"<p>In the previous post of this series on how to boost your business with blockchain, we were discussing the fundamentals [&hellip;]</p>\n","categories":[{"id":"18","title":"Blockchain and Business","path":"/category/blockchain-and-business/"}],"author":{"name":"Hristo","path":"/author/hgeorgiev/"}}},{"node":{"date":"2019-01-10T10:59:33","id":"449","title":"Build your first decentralized application (aepp) on Aeternity blockchain &#8211; Sophia ML smart contract &#8211; Address Book","path":"/blog/build-your-first-decentralized-application-aepp-on-aeternity-blockchain-sophia-smart-contract-address-book/","content":"\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity-1024x576.jpg\" alt=\"Sophia aeternity\" class=\"wp-image-500\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity-1024x576.jpg 1024w, https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity-300x169.jpg 300w, https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity-768x432.jpg 768w, https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity-1025x576.jpg 1025w, https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity.jpg 1334w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Sophia aeternity</figcaption></figure>\n\n\n\n<p class=\"has-drop-cap has-text-align-left\">Æternity blockchain is live after long period of waiting, the community is big and the core developers are top skilled. The project offers smart contracts development platform for decentralized applications dapps or how they call them &#8211; æpps.</p>\n\n\n\n<p class=\"has-text-align-left\">In this tutorial we are going to create a simple smart contract in Sophia ML programming language &#8211; address book <g class=\"gr_ gr_4 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"4\" data-gr-id=\"4\">aepp</g>. We will create, compile, test and deploy the smart contract.<br></p>\n\n\n\n<h2>Prerequisites</h2>\n\n\n\n<ul><li><a href=\"https://docs.docker.com/compose/install/\">Docker</a></li><li><s>Forgae</s> <a href=\"https://www.npmjs.com/package/aeproject\">AEproject</a></li><li><a href=\"https://github.com/aeternity/aepp-cli-js\">Aecli</a> * (optional if we want to do something with the sdk like encode/decode address by publicKey or signTx)</li></ul>\n\n\n\n<p class=\"has-text-align-left\">Docker we need for running local aeternity node for compiling, testing and development environment. Assuming you already have <g class=\"gr_ gr_52 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"52\" data-gr-id=\"52\">docker</g> installed on your machine we move on, if not &#8211; please follow the guide in their official website and then continue with the steps below.</p>\n\n\n\n<p class=\"has-text-align-left\"><g class=\"gr_ gr_6 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"6\" data-gr-id=\"6\"><s>Forgae</s> AEproject</g> is <g class=\"gr_ gr_14 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar multiReplace\" id=\"14\" data-gr-id=\"14\">an æternity</g> development framework which helps with setting up a project. The framework makes the development of smart contracts in the <g class=\"gr_ gr_8 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"8\" data-gr-id=\"8\">aeternity</g> network pretty easily. It provides commands for the compilation of smart contracts, running a local Epoch and unit testing the contracts.<br></p>\n\n\n\n<p class=\"has-text-align-left\">We install it globally via:</p>\n\n\n\n<pre><code>npm install -g aeproject</code></pre>\n\n\n\n<p class=\"has-text-align-left\">After installing <s>forgae</s> AEproject we can verify everything went well with <code>aeproject --help</code> which will also get us familiarize with the commands and options it has.</p>\n\n\n\n<pre><code>Usage: aeproject [options] [command]\n\nOptions:\n  -V, --version      output the version number\n  -h, --help         output usage information\n\nCommands:\n  init [options]     Initialize AEProject\n  compile [options]  Compile contracts\n  test [options]     Running the tests\n  node [options]     Running a local node. Without any argument node will be runned with --start argument\n  deploy [options]   Run deploy script</code></pre>\n\n\n\n<p class=\"has-text-align-left\">We are almost done with the setup. The last tool we need is <code>aecli</code> which is æternity&#8217;s JavaScript SDK command-line interface. It is still not available as <g class=\"gr_ gr_693 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar multiReplace\" id=\"693\" data-gr-id=\"693\">a <g class=\"gr_ gr_691 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"691\" data-gr-id=\"691\">npm</g></g> package, so for us to use it we should clone the repository, install from source and then link it to our local <g class=\"gr_ gr_587 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling\" id=\"587\" data-gr-id=\"587\">npm</g> manually.<br></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>git clone https://github.com/aeternity/aepp-cli-js.git</code></pre>\n\n\n\n<p class=\"has-text-align-left\">We then need to enter into the cloned repository with:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>cd aepp-cli-js</code></pre>\n\n\n\n<p class=\"has-text-align-left\">Run <code>npm link</code> in order to link the AECLI to <code>aecli/bin/aecli.js</code> (<em>If you have any folder permission issues, try running with sudo <code>sudo npm link</code></em>)</p>\n\n\n\n<blockquote class=\"wp-block-quote has-text-align-left\"><p><code>npm link</code> <g class=\"gr_ gr_3 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins doubleReplace replaceWithoutSep\" id=\"3\" data-gr-id=\"3\">command</g> will create a symlink in the global node_modules folder and expose the CLI binary to be used through the terminal.</p><cite>npm link</cite></blockquote>\n\n\n\n<p class=\"has-text-align-left\">and lastly we should run<code>npm install</code> so npm update its packages and symlinks.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>npm install</code></pre>\n\n\n\n<p class=\"has-text-align-left\">Now if everything went well our environment is set and ready to start developing sophia smart contracts on æternity. </p>\n\n\n\n<h3>Project init</h3>\n\n\n\n<p class=\"has-text-align-left\">As always, first we need to create a directory where our project files will be placed:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>mkdir addressbook-aepp</code><br><code>cd addressbook-aepp</code></pre>\n\n\n\n<p class=\"has-text-align-left\">Then we initialize our project with <code>aeproject init</code> which will create for us all the necessary files and directories.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>aeproject init</code></pre>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"837\" height=\"587\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-init-aepp.png\" alt=\"Initialization of aeternity aepp with forgae\" class=\"wp-image-461\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-init-aepp.png 837w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-aepp-300x210.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-aepp-768x539.png 768w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-aepp-821x576.png 821w\" sizes=\"(max-width: 837px) 100vw, 837px\" /><figcaption>Initialization of aeternity aepp with forgae</figcaption></figure></div>\n\n\n\n<p class=\"has-text-align-left\">If we look at our project directory we will see that we now have <strong>contracts</strong>, <strong>deployment</strong>, <strong>test</strong> directories where our focus will mainly be, as well as other config files like package.json and docker-compose.yml.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"837\" height=\"587\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-init-project-directory.png\" alt=\"forgae init project directory\" class=\"wp-image-470\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-init-project-directory.png 837w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-project-directory-300x210.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-project-directory-768x539.png 768w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-project-directory-821x576.png 821w\" sizes=\"(max-width: 837px) 100vw, 837px\" /><figcaption>forgae init project directory</figcaption></figure></div>\n\n\n\n<p class=\"has-text-align-left\">Now we need to <strong>start docker</strong> and then start our local node with:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>aeproject node</code></pre>\n\n\n\n<blockquote class=\"wp-block-quote has-text-align-left\"><p>The <strong>node</strong> command help developers run their <g class=\"gr_ gr_11 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"11\" data-gr-id=\"11\">local  network</g> on docker. The local network contains 3 nodes. To spawn a fully functional <g class=\"gr_ gr_12 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"12\" data-gr-id=\"12\">network  takes</g> <g class=\"gr_ gr_8 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins replaceWithoutSep\" id=\"8\" data-gr-id=\"8\">couple</g> of minutes. At the end of this <g class=\"gr_ gr_9 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-ins replaceWithoutSep\" id=\"9\" data-gr-id=\"9\">command</g> you will <g class=\"gr_ gr_13 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"13\" data-gr-id=\"13\">be  presented</g> with accounts that you can use in your unit tests.</p><cite>documentation</cite></blockquote>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"837\" height=\"587\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-node.png\" alt=\"forgae node initialized successfully\" class=\"wp-image-468\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-node.png 837w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-300x210.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-768x539.png 768w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-821x576.png 821w\" sizes=\"(max-width: 837px) 100vw, 837px\" /><figcaption>forgae node initialized successfully</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"837\" height=\"587\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-node-funding.png\" alt=\"forgae node gives us preset test accounts\" class=\"wp-image-469\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-node-funding.png 837w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-funding-300x210.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-funding-768x539.png 768w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-funding-821x576.png 821w\" sizes=\"(max-width: 837px) 100vw, 837px\" /><figcaption>forgae node gives us preset test accounts</figcaption></figure></div>\n\n\n\n<p class=\"has-text-align-left\">To stop the local node, simply run</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>aeproject node --stop</code></pre>\n\n\n\n<p>Additionally we need to start the local compiler the same way as we start the node.</p>\n\n\n\n<p><code>aeproject compiler</code></p>\n\n\n\n<h2>Write Sophia ML smart contracts</h2>\n\n\n\n<p class=\"has-text-align-left\">When we initialized our project with <code>aeproject init</code> it automatically created for us an <code>ExampleContract.aes</code> file, which name speaks for what it is. Its content looks like this:<br></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>@compiler &gt;= 4\ncontract ExampleContract =\n    type state = ()\n    function main(x : int) = x</code></pre>\n\n\n\n<p class=\"has-text-align-left\">This example contract has one function which accepts a single argument of <g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"4\" data-gr-id=\"4\">type </g><code>int</code><g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"4\" data-gr-id=\"4\"> and</g> returns the value of the passed <g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"5\" data-gr-id=\"5\">argument </g><code>x</code><g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"5\" data-gr-id=\"5\">.</g></p>\n\n\n\n<p class=\"has-text-align-left\">If this is your first time looking at Sophia smart contract, you probably notice that it is quite different from Solidity for example, and looks much similar to Python. </p>\n\n\n\n<p class=\"has-text-align-left\"><g class=\"gr_ gr_4 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"4\" data-gr-id=\"4\">Aeternity&#8217;s</g> Sophia is <g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar multiReplace\" id=\"5\" data-gr-id=\"5\">a ML</g>-family language. It is strongly typed and has restricted mutable state. <a href=\"https://github.com/aeternity/protocol/blob/master/contracts/sophia.md\">Sophia</a> is developed to be used for creating smart contracts on Aeternity Blockchain, so some of the conventional languages&#8217; features are missing, but other blockchain specific primitives, types and constructions are added and supported.</p>\n\n\n\n<p class=\"has-text-align-left\">Okay, we move on to the fun part. We now hit the delete button and get rid of the <code>ExampleContract.aes</code>. </p>\n\n\n\n<p class=\"has-text-align-left\">We create our <code>AddressBook.aes</code> sophia smart contract in the <code>contracts</code>folder and open it with our favorite editor (in my case VIM).</p>\n\n\n\n<p class=\"has-text-align-left\">We define the name of our smart contract, following the example above:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>contract AddressBook =<br><br></code></pre>\n\n\n\n<p class=\"note\">Note: Indentation is important in Sophia language, so keep that in mind.</p>\n\n\n\n<p class=\"has-text-align-left\">Sophia uses Python-style layout rules to group declarations and statements. A\nlayout block with more than one element must start on a separate line and be\nindented more than the currently enclosing layout block. Blocks with a single\nelement can be written on the same line as the previous token.</p>\n\n\n\n<p class=\"has-text-align-left\">Each element of the block must share the same indentation and no part of an element may be indented less than the indentation of the block.</p>\n\n\n\n<p class=\"has-text-align-left\">Okay, the first thing we do after that is defining our person and state records and create the <code>init</code>function.<br></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>@compiler >= 4\ncontract AddressBook =\n\n   record person =\n     { first_name : string\n     , last_name : string\n     , age : int }\n\n   record state  = { people : map(address, person) }\n\n   entrypoint init() = { people = {} }</code></pre>\n\n\n\n<p class=\"has-text-align-left\">Let us focus on some info from the sophia documentation so we know what we&#8217;ve done so far:</p>\n\n\n\n<p class=\"has-text-align-left\">Sophia does not have arbitrary mutable state, but only a limited form of\nstate associated with each contract instance.</p>\n\n\n\n<ul><li>Each contract defines a type <code>state</code> encapsulating its mutable state.</li><li>The initial state of a contract is computed by the contract&#8217;s <code>init</code>\nfunction. The <code>init</code> function is <em>pure</em> and returns the initial state as its\nreturn value. At contract creation time, the <code>init</code> function is executed and\nits result is stored as the contract state.</li><li>The value of the state is accessible from inside the contract\nthrough an implicitly bound variable <code>state</code>.</li><li>State updates are performed by calling a function <code>put : state =&gt; ()</code>.</li><li>Aside from the <code>put</code> function (and similar functions for transactions\nand events), the language is purely functional.</li><li>Functions modifying the state need to be annotated with the <code>stateful</code> keyword.</li></ul>\n\n\n\n<blockquote class=\"wp-block-quote has-text-align-left\"><p>A contract may define a type state encapsulating its local state. The state must be initialised when instantiating a contract. This is done by the init function which can take arbitrary arguments and is called on contract instance creation.<br></p><cite>sophia documentation</cite></blockquote>\n\n\n\n<p class=\"has-text-align-left\">We now have to create setter function for saving person&#8217;s details, and getter functions for getting them.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>   stateful entrypoint add_person(person_address: address, first_name': string, last_name': string, age: int) =\n      let new_person : person =\n         { first_name = first_name',\n           last_name = last_name',\n           age = age }\n      put(state{ people[person_address] = new_person })</code></pre>\n\n\n\n<p class=\"has-text-align-left\"><s>For</s> our <s>getter </s><g class=\"gr_ gr_31 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-ins replaceWithoutSep\" id=\"31\" data-gr-id=\"31\"><s>functions</s></g><s> we will need a helper function which will allow us to easily search in </s><g class=\"gr_ gr_149 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-del replaceWithoutSep\" id=\"149\" data-gr-id=\"149\"><s>the </s></g><code>map</code><g class=\"gr_ gr_149 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-del replaceWithoutSep\" id=\"149\" data-gr-id=\"149\"> <s>we</s></g><s>&#8216;ve created</s>.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code><strike>function lookupByAddress(k : address, m, v) =\n      switch(Map.lookup(k, m))\n         None    =&gt; v\n         Some(x) =&gt; x</strike></code></pre>\n\n\n\n<p class=\"has-text-align-left\">and our getters:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>   entrypoint get_person(person_address : <em>address</em>) : person = \n      switch(Map.lookup(person_address, <em>state</em>.people))\n         <em>None</em> =&gt; abort(\"No data for that person\")\n         <em>Some</em>(person_found) =&gt; person_found</code></pre>\n\n\n\n<p class=\"has-text-align-left\">Now we are done with the smart contract. It should look like this:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/87bd736e39440155873a973426a548a8.js\"></script><figcaption>AddressBook.aes &#8211; aeternity smart contract</figcaption></figure>\n\n\n\n<h2>Compile Sophia ML contracts</h2>\n\n\n\n<p class=\"has-text-align-left\">Compiling sophia smart contracts is done via:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>aeproject compile</code></pre>\n\n\n\n<p class=\"has-text-align-left\">And if everything went well we should see a similar output</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"793\" height=\"543\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-compile-output.png\" alt=\"Compiling sophia smart contract\" class=\"wp-image-486\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-compile-output.png 793w, https://hack.bg/wp-content/uploads/2019/01/forgae-compile-output-300x205.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-compile-output-768x526.png 768w\" sizes=\"(max-width: 793px) 100vw, 793px\" /><figcaption>Compiling sophia smart contract</figcaption></figure></div>\n\n\n\n<blockquote class=\"wp-block-quote has-text-align-left\"><p><g class=\"gr_ gr_14 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"14\" data-gr-id=\"14\">The </g><strong><code>compile</code></strong><g class=\"gr_ gr_14 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"14\" data-gr-id=\"14\"> command</g> compiles Sophia contract. It&#8217;s recommended to <g class=\"gr_ gr_31 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"31\" data-gr-id=\"31\">use </g><strong><code>.aes</code></strong><g class=\"gr_ gr_31 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"31\" data-gr-id=\"31\"> <g class=\"gr_ gr_30 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-ins replaceWithoutSep\" id=\"30\" data-gr-id=\"30\">file</g></g> extension. <g class=\"gr_ gr_52 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-ins replaceWithoutSep\" id=\"52\" data-gr-id=\"52\">Default</g> directory <g class=\"gr_ gr_60 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"60\" data-gr-id=\"60\">is </g><code>$projectDir/contracts</code><g class=\"gr_ gr_60 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"60\" data-gr-id=\"60\">.</g> The result of the compilation is the contract bytecode printed in the console. <g class=\"gr_ gr_44 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-ins doubleReplace replaceWithoutSep\" id=\"44\" data-gr-id=\"44\">Additional</g> <strong><code>--path</code></strong> parameter is available, which can specify the path to the contract to be compiled.</p></blockquote>\n\n\n\n<h2>Writing Unit Tests<br></h2>\n\n\n\n<p class=\"has-text-align-left\">First, we need to edit our deployment script, so it knows which contracts should be using. We only replace <g class=\"gr_ gr_170 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"170\" data-gr-id=\"170\"><g class=\"gr_ gr_104 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del\" id=\"104\" data-gr-id=\"104\">the</g> </g><code>ExampleContract</code><g class=\"gr_ gr_170 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"170\" data-gr-id=\"170\"> with</g> our <g class=\"gr_ gr_171 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"171\" data-gr-id=\"171\">own </g><code>AddressBook</code><g class=\"gr_ gr_171 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"171\" data-gr-id=\"171\"> </g><g class=\"gr_ gr_172 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"172\" data-gr-id=\"172\"><g class=\"gr_ gr_171 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"171\" data-gr-id=\"171\">in</g> </g><code>./deployments/deploy.js</code><g class=\"gr_ gr_172 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"172\" data-gr-id=\"172\">.</g> It should now look like this:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/6040c299a84fea0c81217e8721d11fd8.js\"></script><figcaption>AddressBook.aes deployment script</figcaption></figure>\n\n\n\n<p style=\"text-align:left\"><strike>You probably have noticed that we pass the <code>address</code> as <code>0xe9bbf604e611b5460a3b3999e9771b6f60417d73ce7c5519e12f7e127a1225ca</code> instead of aeternity&#8217;s <code>ak_2mwRmUeYmfuW93ti9HMSUJzCk1EYcQEfikVSzgo6k2VghsWhgU</code>. That is because sophia is using the bytes hex representation of our base58 encoded address. We can use <code>aecli</code> to decode our address and prepend <code>0x</code> afterwards :</strike></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><strike><code>aecli crypto decode ak_2mwRmUeYmfuW93ti9HMSUJzCk1EYcQEfikVSzgo6k2VghsWhgU</code></strike></pre>\n\n\n\n<p class=\"has-text-align-left\"><s>We should receive this output:</s></p>\n\n\n\n<blockquote class=\"wp-block-quote has-text-align-left\"><p><strike>Decoded address (hex): e9bbf604e611b5460a3b3999e9771b6f60417d73ce7c5519e12f7e127a1225ca</strike></p></blockquote>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"809\" height=\"349\" src=\"https://hack.bg/wp-content/uploads/2019/01/aecli-crypto-decode.png\" alt=\"aecli crypto decode aeternity address\" class=\"wp-image-493\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/aecli-crypto-decode.png 809w, https://hack.bg/wp-content/uploads/2019/01/aecli-crypto-decode-300x129.png 300w, https://hack.bg/wp-content/uploads/2019/01/aecli-crypto-decode-768x331.png 768w\" sizes=\"(max-width: 809px) 100vw, 809px\" /><figcaption>aecli crypto decode aeternity address</figcaption></figure></div>\n\n\n\n<p class=\"has-text-align-left\">Writing unit test for aeternity sophia smart contract is similar to writing unit tests for Ethereum solidity smart contract.</p>\n\n\n\n<p class=\"has-text-align-left\"><strike>The interesting and thing is passing arguments to functions. As you can see, we are now passing <g class=\"gr_ gr_12 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-del replaceWithoutSep\" id=\"12\" data-gr-id=\"12\">the our</g> args<code>address</code><g class=\"gr_ gr_17 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"17\" data-gr-id=\"17\">,</g><code>first_name</code><g class=\"gr_ gr_17 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"17\" data-gr-id=\"17\">,</g><code>last_name</code><g class=\"gr_ gr_17 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"17\" data-gr-id=\"17\">,</g> <g class=\"gr_ gr_25 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"25\" data-gr-id=\"25\">and </g><code>age</code><g class=\"gr_ gr_25 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"25\" data-gr-id=\"25\"> as</g> tuple string.</strike></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><strike>      args: `(${address}, \"${first_name}\", \"${last_name}\", ${age})`,</strike></pre>\n\n\n\n<p class=\"note\"><em>Note</em>: If you are passing <g class=\"gr_ gr_13 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins doubleReplace replaceWithoutSep\" id=\"13\" data-gr-id=\"13\">string</g>, do not forget to add quotes (<code>\"</code>) around the string too (<code>(\"Some string\")</code>). More than one parameter can be passed separated by coma (<code>(\"Some string\", 123, 45, \"Other string\")</code>))deploy</p>\n\n\n\n<p class=\"has-text-align-left\"><strike>Another quite handy thing is that the function call result comes with <g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"5\" data-gr-id=\"5\">built </g><g class=\"gr_ gr_91 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"91\" data-gr-id=\"91\"><g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"5\" data-gr-id=\"5\">in</g> </g><code>decode()</code><g class=\"gr_ gr_91 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"91\" data-gr-id=\"91\"> function</g>, which you can use for decoding the function output by passing the type you want to decode it to e.g. primitives like <code>int</code> , <code>string</code> <g class=\"gr_ gr_93 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"93\" data-gr-id=\"93\">or </g><code>bool</code><g class=\"gr_ gr_93 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"93\" data-gr-id=\"93\">.</g> This is quite important for our unit tests so we know how we are going to <code>assert</code> the results.</strike></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><s>    const addPersonResult = await addPerson.decode('bool');</s></pre>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/2d679aadd9cabc1ac296399354c87562.js\"></script><figcaption>AddressBook aepp unit tests</figcaption></figure>\n\n\n\n<p class=\"has-text-align-left\">Now if we run <code>aeproject test</code> we should see our unit tests output:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>aeproject test</code></pre>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"837\" height=\"587\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-test-sophia-unit-tests.png\" alt=\"forgae test output - addressbook aepp\" class=\"wp-image-491\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-test-sophia-unit-tests.png 837w, https://hack.bg/wp-content/uploads/2019/01/forgae-test-sophia-unit-tests-300x210.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-test-sophia-unit-tests-768x539.png 768w, https://hack.bg/wp-content/uploads/2019/01/forgae-test-sophia-unit-tests-821x576.png 821w\" sizes=\"(max-width: 837px) 100vw, 837px\" /><figcaption>forgae test output &#8211; addressbook aepp</figcaption></figure></div>\n\n\n\n<h2>Conclusion</h2>\n\n\n\n<p class=\"has-text-align-left\">Writing smart contracts on Sophia is very intuitive if you have previous experience writing smart contracts or experience with programming languages like Python.<br></p>\n\n\n\n<p class=\"has-text-align-left\">We will continue this series with some more sophisticated examples which will include deployment on testnet and mainnet and more soon. If you don&#8217;t want to miss the new content &#8211; join our <a href=\"http://eepurl.com/gcxyRj\">newsletter</a> to receive all our new content.</p>\n\n\n\n<h3>Useful links</h3>\n\n\n\n<ul><li><a href=\"https://meetup.com/blockchain-developers-meetup-bulgaria\">Blockchain Developers Meetup</a></li><li><a href=\"https://facebook.com/BlockchainDevelopersMeetup\">FacebookGroup</a></li><li><a href=\"http://linkedin.com/company/hack-blockchain-development/\">LinkedIn</a></li><li><a href=\"https://twitter.com/hack_bg\">Twitter</a></li></ul>\n\n\n\n<h4>Resources</h4>\n\n\n\n<ul><li><a href=\"http://github.com/mradkov/addressbook-aepp-aeternity\">AddressBook <g class=\"gr_ gr_6 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"6\" data-gr-id=\"6\">aepp</g> &#8211; Github Repo of the project</a></li><li><a href=\"https://github.com/aeternity/protocol\">Aeternity protocol <g class=\"gr_ gr_7 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"7\" data-gr-id=\"7\">github</g></a></li><li><a href=\"http://forum.aeternity.com/\">Aeternity forum</a></li></ul>\n","excerpt":"<p>Æternity blockchain is live after long period of waiting, the community is big and the core developers are top skilled. [&hellip;]</p>\n","categories":[{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen","path":"/author/milen/"}}},{"node":{"date":"2018-12-29T09:30:09","id":"286","title":"[Part two &#8211; Unit Testing] Build a Decentralized Domain Name System (DDNS) on top of Ethereum","path":"/blog/part-two-unit-testing-build-a-decentralized-domain-name-system-ddns-on-top-of-ethereum/","content":"\n<p class=\"has-drop-cap\">Whether you develop software yourself or <a href=\"https://hack.bg/#contact\">hire developers</a> to build it for you, you expect them to do everything necessary, so you can get functional and bug-free software. Sometimes, however, doing the right thing takes additional time, which is often being skipped due to all the deadlines, budget or some other reason.</p>\n\n\n\n<p>In blockchain development as in the traditional software development, unit testing reduces the number of bugs, making it &#8220;a must&#8221; to effective software development. </p>\n\n\n\n<p>In this article, we are going to look at this type of testing &#8211; unit testing &#8211; and why you should not cut corners and skip this part of the software development cycle.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"683\" src=\"https://hack.bg/wp-content/uploads/2018/12/unit-testing-decentralized-domain-name-system-hack-1024x683.jpg\" alt=\"Unit Testing Decentralized Domain Name System\" class=\"wp-image-386\" srcset=\"https://hack.bg/wp-content/uploads/2018/12/unit-testing-decentralized-domain-name-system-hack-1024x683.jpg 1024w, https://hack.bg/wp-content/uploads/2018/12/unit-testing-decentralized-domain-name-system-hack-300x200.jpg 300w, https://hack.bg/wp-content/uploads/2018/12/unit-testing-decentralized-domain-name-system-hack-768x512.jpg 768w, https://hack.bg/wp-content/uploads/2018/12/unit-testing-decentralized-domain-name-system-hack-864x576.jpg 864w, https://hack.bg/wp-content/uploads/2018/12/unit-testing-decentralized-domain-name-system-hack.jpg 1200w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Unit Testing Decentralized Domain Name System</figcaption></figure></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>This is part two of our series of building decentralized domain name system on top of <a href=\"https://ethereum.org/\">Ethereum</a>, where we&#8217;ll get familiar with good practices and techniques during <g class=\"gr_ gr_34 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins replaceWithoutSep\" id=\"34\" data-gr-id=\"34\">unit</g> testing process and deployment of a decentralized application (<g class=\"gr_ gr_14 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"14\" data-gr-id=\"14\">dApp</g>) development lifecycle.</p>\n\n\n\n<p>In the first part, we developed a decentralized application consisted of Ethereum smart contracts, that are acting as a decentralized domain name system. So, at this point, a user should be able to buy, renew, edit and transfer a domain name according to our <g class=\"gr_ gr_191 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"191\" data-gr-id=\"191\">dApp&#8217;s</g> logic. If you haven&#8217;t checked out <a href=\"https://hack.bg/blog/tutorials/part-one-smart-contracts-build-a-decentralized-domain-name-system-ddns-on-top-of-ethereum/\">the first part of our tutorial</a> yet &#8211; this is probably the time to do so.</p>\n\n\n\n<p>To sum up:</p>\n\n\n\n<ul><li>Unit tests are code that tests your contract code</li><li>It executes your contract with predefined function calls (test cases)</li><li>It compares the result of the execution with the expected result for this case</li></ul>\n\n\n\n<h2>Tooling</h2>\n\n\n\n<p>The most popular and commonly used way of creating unit tests for Ethereum smart contracts written in Solidity is by using the following tool-set.</p>\n\n\n\n<ol><li><a href=\"https://truffleframework.com/truffle\">Truffle</a> &#8211; is the most popular development framework for Ethereum. <ul><li>Built-in smart contract compilation, linking, deployment and binary management.</li><li>Automated contract testing for rapid development.</li><li>Scriptable, extensible deployment &amp; migrations framework.</li><li>Network management for deploying to any number of public &amp; private networks.</li><li>Package management with EthPM &amp; NPM, using the <a href=\"https://github.com/ethereum/EIPs/issues/190\">ERC190</a> standard.</li><li>Interactive console for direct contract communication.</li><li>Configurable build pipeline with support for tight integration.</li><li>External script runner that executes scripts within a Truffle environment. </li></ul></li><li><a href=\"https://truffleframework.com/ganache\">Ganache</a> &#8211; lets you quickly fire up a personal Ethereum blockchain which you can use to run tests, execute commands, and inspect state while controlling how the chain operates.</li></ol>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Without further due, let&#8217;s jump into setting up our project and environment for unit testing.<br></p>\n\n\n\n<p>First if we haven&#8217;t already, we need to install Truffle globally (-g)</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>npm install -g truffle</code></pre>\n\n\n\n<p>and Ganache &#8211; It is available as both a desktop application as well as a command-line tool (formerly known as the TestRPC). For the purpose of our tutorial we are going to use the command-line tool.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>npm install -g ganache-cli</code></pre>\n\n\n\n<p><g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del\" id=\"5\" data-gr-id=\"5\">Okey</g>, now we are good to go. There is a tutorial for using truffle for <g class=\"gr_ gr_37 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins doubleReplace replaceWithoutSep\" id=\"37\" data-gr-id=\"37\">unit</g> testing in their website <a href=\"https://truffleframework.com/tutorials/testing-for-throws-in-solidity-tests\">here</a>, but <g class=\"gr_ gr_18 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins replaceWithoutSep\" id=\"18\" data-gr-id=\"18\"><code>throw</code></g> function used there is now deprecated and replaced by <code>revert()</code>, <code>require()</code> and <code>assert()</code>. So it will be somewhat helpful if you know how the last work.</p>\n\n\n\n<p>Nevertheless, let us verify our knowledge by a quick lookup at the <a href=\"https://solidity.readthedocs.io/en/develop/control-structures.html#error-handling-assert-require-revert-and-exceptions\">Solidity documentation</a>:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Error handling: Assert, Require, Revert and Exceptions<br> Solidity uses state-reverting exceptions to handle errors. Such an exception will undo all changes made to the state in the current call (and all its sub-calls) and also flag an error to the caller. The convenience functions <code>assert</code> and <code>require</code> can be used to check for conditions and throw an exception if the condition is not met. The <code>assert</code> function should only be used to test for internal errors, and to check invariants. The <code>require</code>  function should be used to ensure valid conditions, such as inputs, or  contract state variables are met, or to validate return values from  calls to external contracts. If used properly, analysis tools can evaluate your contract to identify  the conditions and function calls which will reach a failing <code>assert</code>.  Properly functioning code should never reach a failing assert  statement; if this happens there is a bug in your contract which you  should fix.<br> There are two other ways to trigger exceptions: The <code>revert</code> function can be used to flag an error and revert the current call. It is possible to provide a string message containing details about the error that will be passed back to the caller.</p><cite>Solidity documentation</cite></blockquote>\n\n\n\n<h2>Project initialization</h2>\n\n\n\n<p class=\"note\"><strong>Note:</strong> If you have initialized your project with <code>truffle init</code> you can skip this part.</p>\n\n\n\n<p>In the first part we covered mainly the code, but not the environment, IDE and project setup, but for our tests to run properly we will need that set.</p>\n\n\n\n<p>Setting up a new truffle project:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>truffle init</code></pre>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"682\" height=\"564\" src=\"https://hack.bg/wp-content/uploads/2018/12/decentralized-dns-truffle-init.png\" alt=\"Decentralized Domain Name System - project initialization\" class=\"wp-image-345\" srcset=\"https://hack.bg/wp-content/uploads/2018/12/decentralized-dns-truffle-init.png 682w, https://hack.bg/wp-content/uploads/2018/12/decentralized-dns-truffle-init-300x248.png 300w\" sizes=\"(max-width: 682px) 100vw, 682px\" /><figcaption>Decentralized Domain Name System &#8211; project initialization</figcaption></figure></div>\n\n\n\n<p>As you notice after project initialization Truffe adds some files into our project directory: </p>\n\n\n\n<ul><li><code>./contracts</code> &#8211; directory where our smart contracts should be stored.</li><li><code>./migrations</code> &#8211; directory for placing our migrations scripts.</li><li><code>./test</code> &#8211; directory for test files for testing our decentralized application.</li><li><code>./truffle-config.js</code> &#8211; this is our project&#8217;s truffle configuration file.</li></ul>\n\n\n\n<h2>Writing Unit Tests</h2>\n\n\n\n<p>Writing unit tests is a must for decentralized applications development life-cycle, so we can be sure the application works <strong>the way it is designed to</strong>.</p>\n\n\n\n<p>So Truffle gives us couple of possible options to write tests &#8211; in JavaScript, TypeScript (testing your contract via web3) or Solidity (testing your contract from another contract). In our tutorial we will cover unit testing with JavaScript which its the most adopted way of doing so in my opinion.</p>\n\n\n\n<p>All contracts in truffle&#8217;s contracts folder are accessible and are published automatically for our tests. Our unit tests should be placed in the <code>./test</code> folder and must end with <code>.js</code> extension so it can be recognized as an automated test by <a href=\"https://mochajs.org/\">Mocha</a> framework which Truffle uses for testing. For the assertions Truffle uses <a href=\"https://www.chaijs.com/\">Chai</a>, which you may or may not be familiar with.</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>Chai is a BDD / TDD assertion library for <a href=\"http://nodejs.org\">node</a> and can be paired with any javascript testing framework.</p><cite>Chaijs</cite></blockquote>\n\n\n\n<p>Truffle&#8217;s got well structured, extensive <a href=\"https://truffleframework.com/docs/truffle/overview\">documentation</a> which you can read upon and get familiar with, if you want to.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<figure class=\"wp-block-pullquote is-style-default\"><blockquote><p>So starting with the structure of a unit test case.</p></blockquote></figure>\n\n\n\n<p>A test is a call of a contract function with predefined (hard-coded) arguments and a predefined expected output. And the expected output should be the correct way the contract functions.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>What makes Truffle tests different from that of Mocha is the <code>contract()</code> function: This function works exactly like <code>describe()</code> except it enables Truffle&#8217;s <a href=\"https://truffleframework.com/docs/truffle/testing/testing-your-contracts#clean-room-environment\">clean-room features</a>.</p><cite>Truffle documentation</cite></blockquote>\n\n\n\n<p>Each group of tests is ran with clean contract state, meaning that for every test new contract is being published.</p>\n\n\n\n<p>Here is how our DDNSService.test.js should look like:</p>\n\n\n\n<pre><code>\n\nconst DDNSService = artifacts.require('../contracts/DDNSService.sol')\n\n// place helpers here\n\ncontract('DDNSService', ([owner, wallet, anotherAccount]) =&gt; {\n\tlet contractInstance;\n\tlet events = [];\n\n\tbefore(() =&gt; {\n\t\tweb3.eth.defaultAccount = owner;\n\t});\n\n\tbeforeEach(async () =&gt; {\n\t\tcontractInstance = await DDNSService.new();\n\t});\n\n\tafterEach(() =&gt; {\n\t\tif (events.length) {\n\t\t\tevents.forEach((ev) =&gt; {\n\t\t\t\tev.stopWatching();\n\t\t\t});\n\n\t\t\tevents = [];\n\t\t}\n    });\n  \n    it(\"BYTES_DEFAULT_VALUE constant Should have exact value\", async () =&gt; {\n\t\t// Arrange\n\n\t\t// Act\n\t\tconst result = await contractInstance.BYTES_DEFAULT_VALUE();\n\n\t\t// Assert\n\t\tassert.equal(result, '0x00');\n   });\n\n... more tests \n\n});</code></pre>\n\n\n\n<p><br></p>\n\n\n\n<p>In the code above, we&#8217;ve set our contract instance and written the first test, which tests whether the <code>BYTES_DEFAULT_VALUE</code> constant in our smart contract is set to <code>0x00</code>.</p>\n\n\n\n<p>Here is a more sophisticated example &#8211; <i>register Should throw when the sent funds are insufficient</i> &#8211; we are getting the price for the passed domain name, IP, TLD, substract 1 via <code>.minus(1)</code> so we can have a smaller than the actual domain price saved in our <code>currentPrice</code> constant, which we pass as value argument for the domain register via the <code>register()</code> function afterwards. Then we assert whether the call failed with <code>assertRevert</code>.</p>\n\n\n\n<pre><code>it(\"register Should throw when the sent funds are insufficient\", async () =&gt; {\n\t\t// Arrange\n\t\tconst domainName = \"milenradkov\";\n\t\tconst ip = \"127.0.0.1\";\n\t\tconst topLevelDomain = \"com\";\n\t\tconst currentPrice = (await contractInstance.getPrice(domainName)).minus(1);\n\t\t// Act\n\t\tconst result = contractInstance.register(domainName, topLevelDomain, ip, { from: anotherAccount, value: currentPrice });\n\t\t// Assert\n\t\tawait assertRevert(result);\n});</code></pre>\n\n\n\n<p>Unit tests in truffle can be written <g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"4\" data-gr-id=\"4\">using </g><code>.then</code><g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"4\" data-gr-id=\"4\"> </g><g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"5\" data-gr-id=\"5\"><g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"4\" data-gr-id=\"4\">or</g> </g><code>await/async</code><g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"5\" data-gr-id=\"5\"> style</g>, so it&#8217;s up to the developer&#8217;s preference how to write them.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Testing the contract against the cases we&#8217;ve coded is really simple:</p>\n\n\n\n<p>1. Start <code>ganache-cli</code> in separate terminal/cmd &#8211; this will instantiate our private blockchain which we are going to use for tests.</p>\n\n\n\n<pre><code>ganache-cli</code></pre>\n\n\n\n<p>2. Run <code>truffle test</code> command from the project directory.</p>\n\n\n\n<pre><code>truffle test</code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>As you&#8217;ve probably noticed already, we are using the so known AAA (<a href=\"http://wiki.c2.com/?ArrangeActAssert\">Arrange Act Assert</a>) pattern for our unit tests &#8211; it&#8217;s always good to stick to well-formatted code and best practices when you are coding for lots of well-known reasons.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>&#8220;Arrange-Act-Assert&#8221;a pattern for arranging and formatting code in <a href=\"http://wiki.c2.com/?UnitTest\">UnitTest</a> methods: </p><p>Each method should group these functional sections, separated by blank lines: </p><ol><li> <strong>Arrange</strong> all necessary preconditions and inputs.\n</li><li> <strong>Act</strong> on the object or method under test.\n</li><li> <strong>Assert</strong> that the expected results have occurred.\n</li></ol><cite>Arrange-Act-Assert pattern unit test</cite></blockquote>\n\n\n\n<h3>Helpers</h3>\n\n\n\n<p>We are going to need some predefined helpers for some of our next test cases, which names are speaking for what they actually do respectively.</p>\n\n\n\n<pre><code>\n//helpers\nconst assertRevert = require('./utils/assertRevert');\nconst watchEvent = require('./utils/watchEvent');\nconst constants = require('./utils/constants');\nconst increaseTime = require('./utils/increaseTime');</code></pre>\n\n\n\n<h3>Coverage</h3>\n\n\n\n<p>Following this logic here are all the test cases covering most of the edge cases of our decentralized domain name service smart contract functions.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/2470c611a7a3d0be1508ead681929a90.js\"></script><figcaption></figcaption></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Running tests</h2>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"799\" height=\"537\" src=\"https://hack.bg/wp-content/uploads/2018/12/ganache_cli.png\" alt=\"instantiate ganache-cli\" class=\"wp-image-376\" srcset=\"https://hack.bg/wp-content/uploads/2018/12/ganache_cli.png 799w, https://hack.bg/wp-content/uploads/2018/12/ganache_cli-300x202.png 300w, https://hack.bg/wp-content/uploads/2018/12/ganache_cli-768x516.png 768w\" sizes=\"(max-width: 799px) 100vw, 799px\" /><figcaption>instantiate ganache-cli</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"799\" height=\"537\" src=\"https://hack.bg/wp-content/uploads/2018/12/ganache_cli_running.png\" alt=\"ganache-cli running\" class=\"wp-image-377\" srcset=\"https://hack.bg/wp-content/uploads/2018/12/ganache_cli_running.png 799w, https://hack.bg/wp-content/uploads/2018/12/ganache_cli_running-300x202.png 300w, https://hack.bg/wp-content/uploads/2018/12/ganache_cli_running-768x516.png 768w\" sizes=\"(max-width: 799px) 100vw, 799px\" /><figcaption>ganache-cli running</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"843\" height=\"604\" src=\"https://hack.bg/wp-content/uploads/2018/12/truffle_test.png\" alt=\"truffle test - Decentralized Domain Name System using Solidity Smart Contracts on top of Ethereum\" class=\"wp-image-378\" srcset=\"https://hack.bg/wp-content/uploads/2018/12/truffle_test.png 843w, https://hack.bg/wp-content/uploads/2018/12/truffle_test-300x215.png 300w, https://hack.bg/wp-content/uploads/2018/12/truffle_test-768x550.png 768w, https://hack.bg/wp-content/uploads/2018/12/truffle_test-804x576.png 804w\" sizes=\"(max-width: 843px) 100vw, 843px\" /><figcaption>truffle test &#8211; Decentralized Domain Name System using Solidity Smart Contracts on top of Ethereum</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"843\" height=\"604\" src=\"https://hack.bg/wp-content/uploads/2018/12/truffle_test_passing.png\" alt=\"Truffle Test passing - Decentralized Domain Name System using Solidity Smart Contracts on top of Ethereum\" class=\"wp-image-379\" srcset=\"https://hack.bg/wp-content/uploads/2018/12/truffle_test_passing.png 843w, https://hack.bg/wp-content/uploads/2018/12/truffle_test_passing-300x215.png 300w, https://hack.bg/wp-content/uploads/2018/12/truffle_test_passing-768x550.png 768w, https://hack.bg/wp-content/uploads/2018/12/truffle_test_passing-804x576.png 804w\" sizes=\"(max-width: 843px) 100vw, 843px\" /><figcaption>Truffle Test passing &#8211; Decentralized Domain Name System using Solidity Smart Contracts on top of Ethereum</figcaption></figure></div>\n\n\n\n<h2>Conclusion</h2>\n\n\n\n<p>Unit testing are important when developing smart contracts on Ethereum, as there are lots of vulnerabilities or edge cases that can lead to security flaws or value (ETH) theft.</p>\n\n\n\n<p>In the next few parts we will set up code coverage and continuous integration with Travis CI. </p>\n\n\n\n<p>Also we will look deeper in to the security part of development and testing, tips and tricks and more, so <a href=\"http://eepurl.com/gcxyRj\">stay tuned.</a></p>\n\n\n\n<h3><strong>Useful links</strong></h3>\n\n\n\n<ul><li><a href=\"https://hack.bg/blog/tutorials/part-one-smart-contracts-build-a-decentralized-domain-name-system-ddns-on-top-of-ethereum/\">Part one &#8211; Smart Contracts &#8211; Build Decentralized Domain Name System on top of Ethereum</a></li><li>Part two &#8211; Unit Testing &#8211; [you are here] 🙂</li><li>Part three &#8211; Coming soon &#8230;</li></ul>\n\n\n\n<p><strong> Website</strong>: <a rel=\"noreferrer noopener\" href=\"https://hack.bg\" target=\"_blank\">https://hack.bg</a></p>\n\n\n\n<p><strong>Follow us on social media:</strong></p>\n\n\n\n<ul><li><a rel=\"noreferrer noopener\" href=\"https://twitter.com/hack_bg\" target=\"_blank\">Twitter</a></li><li><a rel=\"noreferrer noopener\" href=\"https://facebook.com/hackbg\" target=\"_blank\">Facebook</a></li><li><a rel=\"noreferrer noopener\" href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\" target=\"_blank\">LinkedIn</a></li><li><a href=\"https://meetup.com/blockchain-developers-meetup-bulgaria\">Blockchain Developers Meetup</a></li></ul>\n","excerpt":"<p>Whether you develop software yourself or hire developers to build it for you, you expect them to do everything necessary, [&hellip;]</p>\n","categories":[{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen","path":"/author/milen/"}}},{"node":{"date":"2018-12-29T08:24:06","id":"315","title":"How to boost your business with blockchain?","path":"/blog/how-to-boost-your-business-with-blockchain/","content":"\n<h3>Part 1</h3>\n\n\n\n<p>Many business owners are asking me, what can we do with blockchain?&nbsp;</p>\n\n\n\n<p>It is so because blockchain has become a buzzword that we hear from everywhere. Alas, few understand what really blockchain is and how they can integrate this new and fancy technology into their business.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*sEdqOxhS3decUKDs\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>The aim of this post is to answer some of the most important questions that you, as a business owner or an executive, might have. Questions regarding blockchain technology and how your business can benefit from it.&nbsp;</p>\n\n\n\n<p>At the end of this post, you should be able to decide whether to integrate blockchain to your business or not, regardless if you are a successful business or in the idea stage.</p>\n\n\n\n<ol><li><strong>What is blockchain?</strong></li></ol>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*5r4U6AAgFHb_rlYf\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@clintadair?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Clint Adair</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>Essentially blockchain is a distributed ledger, a peer to peer network, where every peer has all the information about the network and nobody can lie about the state of the network.&nbsp;</p>\n\n\n\n<p>If somebody tries to cheat, the network is going to verify the information via its verification process ( consensus algorithm) and if the peers agree that the person is trying to cheat they will not include the information in the blockchain.&nbsp;</p>\n\n\n\n<p>It is important to notice that nobody can change the previous records, one can only add new records to the chain. This is why we say that the blockchain is immutable and we can <strong>trust </strong>its records.</p>\n\n\n\n<p>To put it in a simple way, since we know that no one can cheat the network by saying I&#8217;m having zillions of dollars, the peers can trust each other. So <strong>trust </strong>is the first essential part of the blockchain.&nbsp;</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*sDXH7_MALP5UNkgC\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>The second part is <strong>transparency. </strong>Yes, you got me right, the blockchain is transparent. At early years many told that they can pay with Bitcoin and nobody will be able to track them down the road but nowadays we know that it is not a fact but an uninformed assumption.&nbsp;</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*wUGptLcpvK72VqJ9\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@oliverschwendener?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Oliver Schwendener</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>The third essential part is of blockchain technology is&nbsp;<strong>traceability.</strong></p>\n\n\n\n<p>Since everything on the blockchain is linked, hence the block-chain, one can easily track things moving on the blockchain.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*MeudmeZpOlYjTTtp\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@eberhardgross?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">eberhard grossgasteiger</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>Just to wrap up the first important part of this article. The blockchain is a new type of accounting ( known as triple accounting ) and its main advantage over the previous type of accounting is <strong>Trust, Transparency, and Traceability.</strong></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>2.<strong> Ok, I got why blockchain is cool but is it a right fit for my company?</strong>&nbsp;</p>\n\n\n\n<p>If you answer with <em>yes</em> to the following question, then most likely your company can benefit from integrating blockchain technology into your business process.</p>\n\n\n\n<p><em>Is your company dealing with things that the customers/ partners need to </em><strong><em>trust </em></strong><em>you about?&nbsp;</em></p>\n\n\n\n<p>Should your customers or partners trust you with their funds, the origin of the products you supply them with or simply the fact that you have the number of stocks that you are promising to ship by the end of the day?</p>\n\n\n\n<p>If your customers/ partners can trust you without even knowing you then they might decide more easily to do business with you.&nbsp;</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*OiIeloYdaRR-mMVI\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>3. How can I boost my business with blockchain?</p>\n\n\n\n<p>As you have seen trust is essential in business and trust is an essential element of the blockchain.</p>\n\n\n\n<p>Integrating blockchain to your business process is building trust, trust brings new customers and your business is growing.</p>\n\n\n\n<p>Beside integrating blockchain technology into your business, you can think of boosting your business with an ICO (initial coin offering) or an STO (security token offering).</p>\n\n\n\n<p><a href=\"https://hack.bg/dlt-blockchain-development-services/ico-initial-coin-offering/\">What is ICO</a> and what is STO you can learn in details in my next post.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you have a great idea — but you not sure if blockchain technology can be integrated into your business, Get in touch with us at <a href=\"mailto:hello@hack.bg\" target=\"_blank\" rel=\"noreferrer noopener\">hello@hack.bg</a>.</p>\n\n\n\n<p>The full list of our services could be found on our website at <a href=\"https://hack.bg/#services\" rel=\"noreferrer noopener\" target=\"_blank\">https://hack.bg/#services</a></p>\n\n\n\n<p><strong>We</strong><em><strong> </strong></em><strong><em>bring ideas to life.</em></strong></p>\n","excerpt":"<p>Part 1 Many business owners are asking me, what can we do with blockchain?&nbsp; It is so because blockchain has [&hellip;]</p>\n","categories":[{"id":"18","title":"Blockchain and Business","path":"/category/blockchain-and-business/"}],"author":{"name":"Hristo","path":"/author/hgeorgiev/"}}},{"node":{"date":"2018-11-30T15:48:56","id":"139","title":"Blockchain Developers Meetup #0x05 — Introduction to Polkadot","path":"/blog/blockchain-developers-meetup-0x05-25e2-80-8a-25e2-80-8aintroduction-to-polkadot/","content":"\n<p>Yesterday’s <a href=\"https://meetup.com/blockchain-developers-meetup-bulgaria\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://meetup.com/blockchain-developers-meetup-bulgaria\">Blockchain Developers Meet-up</a> was great!</p>\n\n\n\n<div class=\"wp-block-image wp-caption aligncenter\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/62e6a-1YBZjG10xfpvm0x9_kIcLbQ.jpeg\" alt=\"\"/><figcaption>Milen Radkov covering what happened recently in the blockchain space</figcaption></figure></div>\n\n\n\n<p>This time our 5th Blockchain Developers Meetup started with covering the most interesting that happened recently in the blockchain space. <strong>** from a blockchain developer’s perspective **</strong></p>\n\n\n\n<p>and that was:</p>\n\n\n\n<ul><li><a href=\"https://aeternity.com\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://aeternity.com\">Aeternity blockchain</a> have just launched their first LIVE implementation (hooray)</li><li>Bitcoin Cash (BCH) had hard-forked recently to the new BCH ABC and BCH SV (Satoshi Vision)</li><li>Ethereum 2.0 is coming soon</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Our main topic this time was Introduction to <a href=\"https://polkadot.network/#cover\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://polkadot.network/#cover\">Polkadot</a>.</p>\n\n\n\n<div class=\"wp-block-image wp-caption aligncenter\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/688a7-1NEaIhXl1z7SGC03HJKtqhQ.png\" alt=\"\"/><figcaption>Polkadot — <a href=\"https://polkadot.network/#cover\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://polkadot.network/#cover\">https://polkadot.network</a></figcaption></figure></div>\n\n\n\n<p>Polkadot is a project founded by <a href=\"https://medium.com/u/d37e9e93aefc\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://medium.com/u/d37e9e93aefc\" data-anchor-type=\"2\" data-user-id=\"d37e9e93aefc\" data-action-value=\"d37e9e93aefc\" data-action=\"show-user-card\" data-action-type=\"hover\">Gav Would</a> — Co-founder of <a href=\"https://ethereum.org\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://ethereum.org\">Ethereum</a> and Founder of <a href=\"https://parity.io\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://parity.io\">Parity Technologies</a>.</p>\n\n\n\n<p>We walked through the new concepts that the Polkadot project introduces to us, and talked a bit more about the Proof of Stake consensus that it is using.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Polkadot is a heterogeneous multi‑chain technology.</p></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>It consists of many parachains with potentially differing characteristics which can make it easier to achieve anonymity or formal verification. Transactions can be spread out across the chains, <strong>allowing many more to be processed in the same period of time</strong>. Polkadot ensures that each of these blockchains remains secure and that any dealings between them are faithfully executed. Specialised parachains called bridges can be created to link independent chains.</p></blockquote>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>We also made a quick workshop of setting up our own Polkadot node.</p>\n\n\n\n<div class=\"wp-block-image wp-caption aligncenter\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/f6e9e-1ccrlbkuU_6r91SUgXYXUOA.png\" alt=\"\"/><figcaption>Polkadot node workshop on the Blockchain Developers Meet-up&nbsp;05</figcaption></figure></div>\n\n\n\n<p>So that was what we had planned part for the introduction of this cool project — polkadot.</p>\n\n\n\n<div class=\"wp-block-image wp-caption aligncenter\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/7c19a-1YOrT7RfvTgnFv0E5wMgVBA.jpeg\" alt=\"\"/><figcaption>Introduction to&nbsp;Polkadot</figcaption></figure></div>\n\n\n\n<p>But it turned out that one of our community members <a href=\"https://medium.com/u/8647f7d33679\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://medium.com/u/8647f7d33679\" data-anchor-type=\"2\" data-user-id=\"8647f7d33679\" data-action-value=\"8647f7d33679\" data-action=\"show-user-card\" data-action-type=\"hover\">Ivo Georgiev</a> (Founder of <a href=\"https://medium.com/u/8a4bb08ab7bf\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://medium.com/u/8a4bb08ab7bf\" data-anchor-type=\"2\" data-user-id=\"8a4bb08ab7bf\" data-action-value=\"8a4bb08ab7bf\" data-action=\"show-user-card\" data-action-type=\"hover\">AdEx</a>) was prepared to guide us deeper into the <a href=\"https://github.com/paritytech/substrate\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://github.com/paritytech/substrate\">substrate</a> framework that polkadot is built on. So he took part presenting, showing part of his implementation and walking us through the code. Big thank you, Ivo, for valuable sharing!&nbsp;🙂</p>\n\n\n\n<div class=\"wp-block-image wp-caption aligncenter\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/7e359-1nPwra_nxnR7aW5vzaFFHgA.jpeg\" alt=\"\"/><figcaption>Ivo Georgiev presenting about substrate</figcaption></figure></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<div class=\"wp-block-image wp-caption aligncenter\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/0e0b8-193qAwN2zSkhH2GSa1jS6Jg.jpeg\" alt=\"\"/><figcaption>Group photo in <a href=\"https://www.networking.space/\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://www.networking.space/\">Networking Co-working</a></figcaption></figure></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Watch the recording here:</p>\n\n\n\n<figure class=\"wp-block-embed-youtube aligncenter wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/nZFL5AHQCP8?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div><figcaption>Introduction to Polkadot &#8211; 0x05 [Blockchain Developers Meetup]</figcaption></figure>\n\n\n\n<h4>Resources</h4>\n\n\n\n<ul><li><a href=\"https://speakerdeck.com/radkov/blockchain-developers-meetup-05-introduction-to-polkadot\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://speakerdeck.com/radkov/blockchain-developers-meetup-05-introduction-to-polkadot\">Slides from the meet-up</a></li><li><a href=\"https://youtu.be/nZFL5AHQCP8\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://youtu.be/nZFL5AHQCP8\">Video recording</a></li></ul>\n\n\n\n<p>More info about polkadot:</p>\n\n\n\n<ul><li><a href=\"https://polkadot.network/\">https://polkadot.network/</a></li><li><a href=\"https://riot.im/app/#/room/#polkadot-watercooler:matrix.org\">https://riot.im/app/#/room/#polkadot-watercooler:matrix.org</a></li><li><a href=\"https://github.com/w3f/Web3-wiki/wiki/Polkadot\">https://github.com/w3f/Web3-wiki/wiki/Polkadot</a></li><li><a href=\"https://github.com/paritytech/polkadot\">https://github.com/paritytech/polkadot</a></li><li><a href=\"https://github.com/paritytech/substrate\">https://github.com/paritytech/substrate</a></li><li><a href=\"http://telemetry.polkadot.io\">http://telemetry.polkadot.io</a></li><li><a href=\"http://gav.polkadot.io/\">http://gav.polkadot.io/</a></li><li><a href=\"https://poc-2.polkadot.io/#/explorer\">https://poc-2.polkadot.io/#/explorer</a></li><li><a href=\"https://polkadot.js.org/apps/#/explorer\">https://polkadot.js.org/apps/#/explorer</a></li><li><a href=\"https://polkadot.js.org/apps/next/#/explorer\">https://polkadot.js.org/apps/next/#/explorer</a></li><li><a href=\"https://www.reddit.com/r/dot/comments/8xmns6/welcome_to_polkadots_subreddit_read_this_guide_to/\">https://www.reddit.com/r/dot/comments/8xmns6/welcome_to_polkadots_subreddit_read_this_guide_to/</a></li><li><a href=\"https://www.youtube.com/watch?v=lIghiCmHz0U\">https://www.youtube.com/watch?v=lIghiCmHz0U</a></li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you are <strong>interested in talking</strong> on some cool topic, or you want to <strong>propose some topic</strong> to be discussed — just <strong>drop us a line at </strong><a href=\"mailto:events@hack.bg\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"mailto:events@hack.bg\"><strong>events@hack.bg</strong></a> or write down a comment/reply.</p>\n\n\n\n<p>If you want to be informed for our next events and meetups — join us:</p>\n\n\n\n<p><strong>Blockchain Developers Meetup Group</strong>:</p>\n\n\n<style type=\"text/css\">#meetup_oembed .mu_clearfix:after { visibility: hidden; display: block; font-size: 0; content: \" \"; clear: both; height: 0; }* html #meetup_oembed .mu_clearfix, *:first-child+html #meetup_oembed .mu_clearfix { zoom: 1; }#meetup_oembed { background:#eee;border:1px solid #ccc;padding:10px;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;margin:0; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 12px; }#meetup_oembed h3 { font-weight:normal; margin:0 0 10px; padding:0; line-height:26px; font-family:Georgia,Palatino,serif; font-size:24px }#meetup_oembed p { margin: 0 0 10px; padding:0; line-height:16px; }#meetup_oembed img { border:none; margin:0; padding:0; }#meetup_oembed a, #meetup_oembed a:visited, #meetup_oembed a:link { color: #1B76B3; text-decoration: none; cursor: hand; cursor: pointer; }#meetup_oembed a:hover { color: #1B76B3; text-decoration: underline; }#meetup_oembed a.mu_button { font-size:14px; -moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;border:2px solid #A7241D;color:white!important;text-decoration:none;background-color: #CA3E47; background-image: -moz-linear-gradient(top, #ca3e47, #a8252e); background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #a8252e), color-stop(1, #ca3e47));disvplay:inline-block;padding:5px 10px; }#meetup_oembed a.mu_button:hover { color: #fff!important; text-decoration: none; }#meetup_oembed .photo { width:50px; height:50px; overflow:hidden;background:#ccc;float:left;margin:0 5px 0 0;text-align:center;padding:1px; }#meetup_oembed .photo img { height:50px }#meetup_oembed .number { font-size:18px; }#meetup_oembed .thing { text-transform: uppercase; color: #555; }</style>\n<div id=\"meetup_oembed\" style=\"height:423px\">\n<div style=\"overflow:hidden;max-height:383px\">\n<h3>Blockchain Developers Meetup (Bulgaria)</h3>\n<p style=\"margin:0 0 10px;font-size:12px;line-height:16px;\">Sofia, BG <br />          <span style=\"font-size:14px;font-weight:bold;\">119</span> <em>Developers</em></p>\n<p>          <a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" target=\"_blank\"><img src=\"https://secure.meetupstatic.com/photos/event/6/0/a/7/600_472464743.jpeg\" style=\"float:right;max-width:150px;margin-right:0;\" /></a>                          </p>\n<div style=\"margin-right:170px;line-height:16px;\">In this group, we will share knowledge about blockchain and smart contract development. We will talk about Ethereum, Aeternity, Polkadot, NEO, EOS, RSK, Hyperledger and other &#8230;</div>\n<p style=\"font-size:16px;margin:10px 0 5px;line-height:18px;\">Next Meetup</p>\n<p style=\"margin-bottom:2px;line-height:16px;font-size:14px;\"><a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/events/257561248/\" target=\"_blank\">0x06. Jump Oriented Programming in Ethereum Smart Contract</a></p>\n<p style=\"line-height:18px;\">Thursday, Jan 17, 2019,  7:00 PM<br /><span style=\"color:#4F8A10;\">2 Attending</span></p>\n</p></div>\n<p style=\"margin:10px 0 5px;\"><a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" target=\"_blank\" class=\"mu_button\">Check out this Meetup Group &rarr;</a></p>\n</div>\n\n\n\n<p><strong>Blockchain Developers Facebook Group</strong>:</p>\n\n\n<style type=\"text/css\">#meetup_oembed .mu_clearfix:after { visibility: hidden; display: block; font-size: 0; content: \" \"; clear: both; height: 0; }* html #meetup_oembed .mu_clearfix, *:first-child+html #meetup_oembed .mu_clearfix { zoom: 1; }#meetup_oembed { background:#eee;border:1px solid #ccc;padding:10px;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;margin:0; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 12px; }#meetup_oembed h3 { font-weight:normal; margin:0 0 10px; padding:0; line-height:26px; font-family:Georgia,Palatino,serif; font-size:24px }#meetup_oembed p { margin: 0 0 10px; padding:0; line-height:16px; }#meetup_oembed img { border:none; margin:0; padding:0; }#meetup_oembed a, #meetup_oembed a:visited, #meetup_oembed a:link { color: #1B76B3; text-decoration: none; cursor: hand; cursor: pointer; }#meetup_oembed a:hover { color: #1B76B3; text-decoration: underline; }#meetup_oembed a.mu_button { font-size:14px; -moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;border:2px solid #A7241D;color:white!important;text-decoration:none;background-color: #CA3E47; background-image: -moz-linear-gradient(top, #ca3e47, #a8252e); background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #a8252e), color-stop(1, #ca3e47));disvplay:inline-block;padding:5px 10px; }#meetup_oembed a.mu_button:hover { color: #fff!important; text-decoration: none; }#meetup_oembed .photo { width:50px; height:50px; overflow:hidden;background:#ccc;float:left;margin:0 5px 0 0;text-align:center;padding:1px; }#meetup_oembed .photo img { height:50px }#meetup_oembed .number { font-size:18px; }#meetup_oembed .thing { text-transform: uppercase; color: #555; }</style>\n<div id=\"meetup_oembed\" style=\"height:423px\">\n<div style=\"overflow:hidden;max-height:383px\">\n<h3>Blockchain Developers Meetup (Bulgaria)</h3>\n<p style=\"margin:0 0 10px;font-size:12px;line-height:16px;\">Sofia, BG <br />          <span style=\"font-size:14px;font-weight:bold;\">119</span> <em>Developers</em></p>\n<p>          <a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" target=\"_blank\"><img src=\"https://secure.meetupstatic.com/photos/event/6/0/a/7/600_472464743.jpeg\" style=\"float:right;max-width:150px;margin-right:0;\" /></a>                          </p>\n<div style=\"margin-right:170px;line-height:16px;\">In this group, we will share knowledge about blockchain and smart contract development. We will talk about Ethereum, Aeternity, Polkadot, NEO, EOS, RSK, Hyperledger and other &#8230;</div>\n<p style=\"font-size:16px;margin:10px 0 5px;line-height:18px;\">Next Meetup</p>\n<p style=\"margin-bottom:2px;line-height:16px;font-size:14px;\"><a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/events/257561248/\" target=\"_blank\">0x06. Jump Oriented Programming in Ethereum Smart Contract</a></p>\n<p style=\"line-height:18px;\">Thursday, Jan 17, 2019,  7:00 PM<br /><span style=\"color:#4F8A10;\">2 Attending</span></p>\n</p></div>\n<p style=\"margin:10px 0 5px;\"><a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" target=\"_blank\" class=\"mu_button\">Check out this Meetup Group &rarr;</a></p>\n</div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3><strong>Useful links</strong></h3>\n\n\n\n<p><strong>Website</strong>: <a href=\"https://hack.bg\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://hack.bg\">https://hack.bg</a></p>\n\n\n\n<p><strong>Follow us on social media:</strong></p>\n\n\n\n<ul><li><a href=\"https://twitter.com/hack_bg\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://twitter.com/hack_bg\">Twitter</a></li><li><a href=\"https://facebook.com/hackbg\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://facebook.com/hackbg\">Facebook</a></li><li><a href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\">LinkedIn</a></li></ul>\n","excerpt":"<p>Yesterday’s Blockchain Developers Meet-up was great! This time our 5th Blockchain Developers Meetup started with covering the most interesting that [&hellip;]</p>\n","categories":[{"id":"5","title":"Events","path":"/category/events/"},{"id":"71","title":"Meet-ups","path":"/category/meetups/"}],"author":{"name":"Milen","path":"/author/milen/"}}},{"node":{"date":"2018-11-30T10:46:53","id":"107","title":"[Part one &#8211; Smart Contracts] Build a Decentralized Domain Name System (DDNS) on top of Ethereum","path":"/blog/part-one-smart-contracts-build-a-decentralized-domain-name-system-ddns-on-top-of-ethereum/","content":"\n<h3>Intro</h3>\n\n\n\n<p>Nowadays it is quite popular to <a href=\"https://hack.bg\" rel=\"noreferrer noopener\" target=\"_blank\"><strong>build</strong> <strong>a</strong> <strong>decentralized application</strong></a><strong> (dApp)</strong>. If you are familiar with the blockchain smart contracts development and you’ve already developed something cool, probably there is no need for me to tell you that in this field the demand for good developers is quite high.</p>\n\n\n\n<p>But for you to be a good smart contracts developer, you have to research, learn the best coding practices, educate yourself and practice coding constantly.</p>\n\n\n\n<p>In this tutorial, I’m going to show you step by step my implementation on how to create a <strong>decentralized</strong> <strong>application</strong> which functions as a simplified <strong>DNS</strong> (<strong>domain name system</strong>). It was created a while back, but recently got a lot of attention, so I decided to make a short tutorial explaining the steps in the making.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>There are quite a lot of blockchain platforms that give us the opportunity to develop smart contracts and decentralized applications on top of their networks and infrastructure. The main platforms used for dApp development are <a href=\"https://aeternity.com/\" rel=\"noreferrer noopener\" target=\"_blank\">Aeternity</a>, <a href=\"http://ethereum.org\" rel=\"noreferrer noopener\" target=\"_blank\">Ethereum</a>, <a href=\"https://neo.org/\" rel=\"noreferrer noopener\" target=\"_blank\">NEO</a>, <a href=\"https://eos.io/\" rel=\"noreferrer noopener\" target=\"_blank\">EOS</a>, <a href=\"https://qtum.org/\" rel=\"noreferrer noopener\" target=\"_blank\">QTUM</a>, <a href=\"https://www.cardano.org\" rel=\"noreferrer noopener\" target=\"_blank\">Cardano</a>, <a href=\"https://stratisplatform.com\" rel=\"noreferrer noopener\" target=\"_blank\">Stratis</a> and for sure we will see a lot more in the nearest future. But for the purpose of this tutorial, we’ll be using <a href=\"http://solidity.readthedocs.io\" rel=\"noreferrer noopener\" target=\"_blank\">Solidity</a> as our development language and Ethereum’s infrastructure, as Ethereum is the most widely used for dApps development <strong>for now.</strong></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you do not know what a domain name system is, and how it works, now is the time for you to go to Wikipedia and check <a href=\"https://en.wikipedia.org/wiki/Domain_Name_System\" rel=\"noreferrer noopener\" target=\"_blank\">DNS</a> out to get a basic understanding of it.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>At first building a decentralized DNS on top of Ethereum might seem like a trivial task, but we will make it a bit more complex&nbsp;… right&nbsp;now</p></blockquote>\n\n\n\n<p>Let us set some requirements for our project — simplified decentralized domain name system (DDNS).</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>Requirements</h3>\n\n\n\n<ol><li>We should be able to <strong>register a domain</strong> by providing the domain name and an IP address it should point to. There are also some other conditions:</li></ol>\n\n\n\n<ul><li>A registered domain cannot be bought and is owned by the caller of the method.</li><li>The domain registration should cost 1 ETH and the domain should be registered for 1 year.</li><li>After 1 year, anyone is allowed to buy the domain again.</li><li>The domain registration can be extended by 1 year if the domain owner calls the register method and pays 1 ETH.</li><li>The domain can be any string with length <strong>more than 5 symbols.</strong></li></ul>\n\n\n\n<p>2. We need a public method to edit a domain. In our simplified <strong>decentralized DNS </strong>system, the editing of a domain will be changing the IP address it points to. The operation should be free and only the owner of the domain should be able to edit the domain.</p>\n\n\n\n<p>3. Public method to transfer the domain ownership to another user. Again this operation is free and only the domain owner can transfer his domains ownership to somebody else.</p>\n\n\n\n<p>4. Public method to get the IP based on a given domain.</p>\n\n\n\n<p>5. A Public method that returns a list of all <strong>receipts</strong> by a certain account. A <strong>receipt</strong> is a domain purchase/extension and contains the price, timestamp of purchase and expiration date of the domain.</p>\n\n\n\n<p>And since this is a domain name system, we want to make it as similar to the current ones as possible, so we are going to add some more additional features like:</p>\n\n\n\n<ul><li>Dynamic pricing — the base price can increase if a short domain name is bought.</li><li>Public method to withdraw the funds from the contract. <strong>This should be called only from the contract owner </strong>(the address which initially created the contract).</li><li>Use <strong>contract events</strong> to signify that an activity has taken place in the contract. Events can be for domain registration/transfer (DDNS) etc.</li></ul>\n\n\n\n<p>And lastly, we need to have unit tests for everything we’ve done so far.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>Implementation</h3>\n\n\n\n<h4>Step 1: Architecture design</h4>\n\n\n\n<p>First, we need to think about our architecture and design it. In our case it is a very simple project so the architecture could be something like this:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS-1024x576.png\" alt=\"\" class=\"wp-image-115\" srcset=\"https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS-300x169.png 300w, https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS-768x432.png 768w, https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS-480x270.png 480w, https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Figure 1 — Decentralized DNS (domain name system) Architecture</figcaption></figure></div>\n\n\n\n<h4>Step 2: Architecture preparation</h4>\n\n\n\n<p>There are already smart contracts for the safe math operations, ownership logic and destruction logic provided from <a href=\"https://github.com/OpenZeppelin/openzeppelin-solidity\" rel=\"noreferrer noopener\" target=\"_blank\">OpenZeppelin</a>, that have passed multiple security audits, so we don’t need to reinvent the wheel.</p>\n\n\n\n<p>For the math operations we are going to use <a href=\"https://github.com/OpenZeppelin/openzeppelin-solidity/blob/9b3710465583284b8c4c5d2245749246bb2e0094/contracts/math/SafeMath.sol\" rel=\"noreferrer noopener\" target=\"_blank\">SafeMath library</a>, which looks like this:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/edc27fd2e860d274a1ed27eed9e1b2ef.js\"></script>\n<figcaption>SafeMath.sol — Safe Mathematical operations in Solidity</figcaption></figure>\n\n\n\n<p>For the ownership and destruction logic we will again use security audited and proven to work contracts from the <a href=\"https://github.com/OpenZeppelin/openzeppelin-solidity/\" rel=\"noreferrer noopener\" target=\"_blank\">openzeppelin-solidity Github</a> repository and then proceed with the implementation of our own DDNS.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/df74ec982a3814e9b47eceb578bc17a9.js\"></script><figcaption>Ownable.sol — Ownership logic solidity</figcaption></figure>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/01aaa6104b7cf183d1fe969864080f2a.js\"></script><figcaption>Destructible.sol — Smart contract lifecycle logic solidity</figcaption></figure>\n\n\n\n<p>Lastly our main contract where we will put our logic for the <strong>decentralized domain name system </strong>(DDNS):</p>\n\n\n\n<p>It inherits the <strong>Destructible.sol</strong> contract which itself inherits the ownership logic from the <strong>Ownable.sol</strong> contract and we are good to go.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/2ca5fb13bdd424d895ca7b25436c7faa.js\"></script><figcaption>DDNS initial contract</figcaption></figure>\n\n\n\n<p>The directory tree of our project could be looking like this at this point:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree-1024x576.png\" alt=\"\" class=\"wp-image-116\" srcset=\"https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree-300x169.png 300w, https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree-768x432.png 768w, https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree-480x270.png 480w, https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Figure 2 — Project structure for <strong>Decentralized Domain Name&nbsp;System</strong></figcaption></figure></div>\n\n\n\n<h4>Step 3: Defining struct types, function modifiers, and state variables</h4>\n\n\n\n<p>Starting with the structures — <strong>structs</strong> are custom defined types that can group several variables. In our case, we will make some things easier by creating structures for them.</p>\n\n\n\n<p>So, as we all know every problem has lots of different approaches to be solved, and I challenge you to try solving this one yourself and not trust mine as the “one and only solution”.</p>\n\n\n\n<p><strong>Structs</strong></p>\n\n\n\n<p>We are defining the <strong>DomainDetails </strong>structure which has the following properties:</p>\n\n\n\n<ul><li><em>bytes</em> name — the domain name stored as bytes</li><li><em>bytes12</em> topLevel — the TLD of the domain</li><li><em>address</em> owner — address of the owner</li><li><em>bytes15</em> ip — IP that is related to the domain name</li><li><em>uint</em> expires — expiring date of the domain.</li></ul>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/df74ec982a3814e9b47eceb578bc17a9.js\"></script><figcaption>DomainDetails Structure for the DDNS implementation</figcaption></figure>\n\n\n\n<p>Second we are defining the <strong>Receipt </strong>structure — which is something we should provide the user according to the project requirements we’ve set in the beginning. It has the following properties&nbsp;:</p>\n\n\n\n<ul><li><em>uint</em> amountPaidWei — the price that was paid in this transaction, stored as the amount of wei (the smallest part of ether)</li><li><em>uint </em>timestamp — the time when this receipt was issued</li><li><em>uint</em> expires — expiring time</li></ul>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/e794c8461432ee45e93f0214e5251336.js\"></script><figcaption>Receipt structure for the DDNS implementation</figcaption></figure>\n\n\n\n<p><strong>Modifiers</strong></p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Modifiers can be used to easily change the behavior of functions. For example, they can automatically check a condition prior to executing the function. Modifiers are inheritable properties of contracts and may be overridden by derived contracts.</p></blockquote>\n\n\n\n<p>First modifier that we are going to implement is an <strong>isAvailable </strong>modifier, which we will be using to check whether a certain domain name is available to be bought.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/1b949804880dfe53deb43c9e7eb860f1.js\"></script><figcaption>isAvailable modifier &#8211; DDNS</figcaption></figure>\n\n\n\n<p>The next thing the <strong>collectDomainNamePayments </strong>modifier that we are going to use as the way for faster check if the user provided the right amount of money for the payment.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/b9bb70959ea119cf895b00e3daf3c38c.js\"></script><figcaption>collectDomainNamePayment modifier for the DDNS implementation</figcaption></figure>\n\n\n\n<p>We need a modifier which we will use for checking whether the transaction initiator (msg.sender) is the owner of the certain domain — <strong>isDomainOwner</strong>.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/f8f89b1ef1eb774e5c75603f8cce1f5a.js\"></script><figcaption>isDomainOwner modifier &#8211; DDNS</figcaption></figure>\n\n\n\n<p>And lastly, we need another two modifiers <strong>isDomainNameLengthAllowed </strong>and <strong>isTopLevelLengthAllowed </strong>for checking if the length of the provided domain name or TLD is allowed respectively.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/333d5a7e530b2014e5cab5b3aaf1b492.js\"></script><figcaption>isDomainNameLengthAllowed modifier</figcaption></figure>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/0d06cf1e8c7224de694205ae25e51f4d.js\"></script><figcaption>isTopLevelLengthAllowed modifier</figcaption></figure>\n\n\n\n<p><strong>State variables and constants</strong></p>\n\n\n\n<p>We are going to add some constants which names speak for what they are actually used for:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/a20d73ba8efabeb67abd6ea0743c448b.js\"></script><figcaption>Constants used in our DDNS smart contract</figcaption></figure>\n\n\n\n<p>and the state variables where we are going to store the domain names, payment receipts:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/73fa911fb71e40b1392c533dfd0c22ff.js\"></script><figcaption>State variables for storing our data in the DDNS</figcaption></figure>\n\n\n\n<p><strong>Events</strong></p>\n\n\n\n<p>Events in Solidity give an abstraction on top of EVM’s (Ethereum Virtual Machine) logging functionality. An application (e.g. our UI) can subscribe to an event and listen for this events.</p>\n\n\n\n<p>Events are defined with a number of parameters and their type. When an event is fired, its arguments are stored in the transaction’s log.</p>\n\n\n\n<p>Notice the <strong><em>indexed </em></strong>attribute — in Solidity, you can add up to 3 indexed parameters for an event, which will add them to a special structure called “topic”.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>We will get to this point in part 2 when we create the UI for the dApp.</p></blockquote>\n\n\n\n<p>For now, let us just add an event for every action that we are taking on our smart contract. That would be logging that a certain domain name was registered, also log if a domain was renewed. We will add an event for logging domain edits and transfers of a domain ownership. Lastly, we log the <em>money </em>operations and receipt issuing.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/c8f178e98976d57828add23e21710d1f.js\"></script><figcaption>Defined events for the DDNS project implementations</figcaption></figure>\n\n\n\n<h4>Step 4: Implementing functions</h4>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>And now let’s get to the interesting part&nbsp;…</p></blockquote>\n\n\n\n<p>First, we have to implement some functions that are going to help us with our logic, since the logic we’ve been following so far is:</p>\n\n\n\n<ul><li>As we know on the internet we could have domain names that are the same and only the TLD could be different (e.g. <code><strong>hack</strong>.bg</code> and <code><strong>hack</strong>.com</code> )</li><li>We need to have a unique <code>id</code> for each domain name, combined with its TLD.</li><li><strong>Solidity is bad with string manipulation</strong></li></ul>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>The key concept regarding the type <code>string</code> is that this is an array of UTF-8 characters, and can be seamlessly converted to <code>bytes</code>. This is the only way of manipulating the string at all. But it is important to note that UTF-8 characters do not exactly match bytes. The conversion in either direction will be accurate, but there is not an immediate relation between each byte index and the corresponding string index.<br>For most things, there may be an advantage in representing the string directly as the type <code>bytes</code> (avoiding conversions)&nbsp;…</p></blockquote>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p><strong>Solution</strong>: we create a <strong><em>pure</em></strong> function for calculating the unique hash for provided the domain and topLevel called <strong><em>getDomainHash</em></strong>. It will basically calculate the hash (keccak256) of the provided domain name + its TLD.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/0b8d62c698b0e5bf157be3c5dae41c16.js\"></script><figcaption>getDomainHash — calculate the keccak256 hash of domain + TLD for the DDNS</figcaption></figure>\n\n\n\n<p>By using this function we will be able to get the unique identifier for every domain name.</p>\n\n\n\n<p>Following the same logic — we need a unique <code>id</code> or <code>serialNumber</code> for the payment receipts that we issue — function <strong><em>getReceiptKey</em></strong>:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/aeb598abcb0fa6349be9ee7acc5a9e6e.js\"></script><figcaption>Calculate the receipt serial number/key — used as unique id for DDNS purposes</figcaption></figure>\n\n\n\n<p>* Probably you’ve noticed that these two functions we’ve already referred in the modifiers definitions.</p>\n\n\n\n<p>And a price checker for the provided domain name, since we are going to use this functionality very frequently:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/ce0e5b8442cc9034bb468d9500bf69b1.js\"></script><figcaption>Domain name price checker function — DDNS</figcaption></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>… the real deal&nbsp;…</p></blockquote>\n\n\n\n<p><strong>Register a domain name on the decentralized DNS</strong></p>\n\n\n\n<p>We continue with the register domain function — which is probably the most complex of all functions due to our requirements.</p>\n\n\n\n<p>A short explanation of the function below — when a user wants to register a domain name, he passes the <strong>domain</strong>, <strong>TLD</strong> and <strong>IP</strong>, and provides a <em>payment</em> for the domain.</p>\n\n\n\n<p>According to our requirements, some conditions should be met and that is why we’ve created some modifiers earlier at the beginning of this tutorial. They are going to help us to reuse the conditions checks when needed.</p>\n\n\n\n<p>The first thing you notice is that the function is <strong><em>payable —</em></strong>this is required if we want to collect payment in this function, and then we are using</p>\n\n\n\n<ul><li><em>isDomainNameLengthAllowed — </em>checks whether the provided domain’s name length is allowed.</li><li><em>isTopLevelLengthAllowed — </em>checks whether the provided TLD length is allowed.</li><li><em>isAvailable</em> — checks if the domain name is available to be registered (e.g. is it not bought already or if it is expired).</li><li><em>collectDomainNamePayment</em> — checks what is the required amount of ETH to be sent to buy this domain name, according to the conditions for the length of the name. And collects the payment if the user has provided the needed value.</li></ul>\n\n\n\n<p>modifiers.</p>\n\n\n\n<p>If some of the conditions in the modifiers are not met, the contract will stop executing and fire an error message, provided in the <strong><em>require() </em></strong>methods in our modifiers.</p>\n\n\n\n<p>So if everything is OK, we are continuing with the execution of the function (line 19–67):</p>\n\n\n\n<ul><li>What is the logic here?</li></ul>\n\n\n\n<p>We calculate the domain hash, create a domain object, that we store in the storage, then we issue and store a payment receipt and fire two events receipt issuing and domain registration respectively.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/038d4aa4ddad25cc0917228168f50b72.js\"></script><figcaption>Register domain function — DDNS (decentralized domain name system)</figcaption></figure>\n\n\n\n<p><strong>Renew domain name</strong></p>\n\n\n\n<p>This function is similar to the register domain name function — it does the same thing basically, with the only difference of updating the <em>expires </em>property of the requested domain name with 1 year (365 days).</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/69d7b9f1ca8674457db380723710aa71.js\"></script><figcaption>Renew Domain Name — DDNS</figcaption></figure>\n\n\n\n<p><strong>Edit domain name</strong></p>\n\n\n\n<p>For the edit domain name, according to the requirements, we should have the ability to update the IP address that the domain is pointing to and that should be a free operation (excluding gas costs).</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/9ff2f66540210c858854dd4e84e8ec5d.js\"></script><figcaption>Edit domain name function — DDNS</figcaption></figure>\n\n\n\n<p><strong>Transfer domain</strong></p>\n\n\n\n<p>Transferring the domain name ownership is a trivial task as you’ve probably guessed. There are only a few things that are worth mentioning here:</p>\n\n\n\n<ul><li>first, we check with the <strong><em>isDomainOwner</em></strong> modifier if the transaction initiator (msg.sender) is the owner of the domain</li><li>second, important thing we do is to check whether the new owner’s address is not set to 0x0 address — to prevent domain ownership loss</li><li>the rest is easy — get the domain unique id &gt; update the ownership property with new owner’s address &gt; log the change.</li></ul>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/974b7f5bf5bb37e6458b507ce73840d3.js\"></script><figcaption>Transfer domain name ownership — DDNS</figcaption></figure>\n\n\n\n<p><strong>Getters</strong></p>\n\n\n\n<p>We need to have few getters for accessing the data stored on the blockchain and also for the UI later.</p>\n\n\n\n<p>We will implement functions for getting the current IP of a domain is pointed to — <strong><em>getIp</em></strong>, a function to get the list or receipt <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del\" id=\"3\" data-gr-id=\"3\">ids</g> for certain account &#8211;<strong><em>getReceiptList</em></strong>, and a single receipt details getter — <strong><em><g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"5\" data-gr-id=\"5\">getReceipt</g>.</em></strong></p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/c8dfeaba171d832401c4464d58014ae0.js\"></script><figcaption>Get IP of the provided domain — DDNS</figcaption></figure>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/94b09d8d718dd1cbf450e238a11d1754.js\"></script><figcaption>Get receipt list function — DDNS</figcaption></figure>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/d543b1cb9a724489edca06cdc9a7ce4b.js\"></script><figcaption>Get single receipt details function — DDNS</figcaption></figure>\n\n\n\n<p><strong>Withdraw</strong></p>\n\n\n\n<p>Finally, we want to have a function which is allowing the owner of the decentralized domain name system to be able to withdraw the ETH (funds) collected from domain registration/renewal payments.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/bed65a6e4f29cf050d004888f85b86be.js\"></script><figcaption>Withdraw function — DDNS</figcaption></figure>\n\n\n\n<h4>Finally — here is our smart contract:</h4>\n\n\n\n<p>And here’s the whole smart contract for the DDNS:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/e4d9407e2ccfacb8a0b4f8f821ddf55d.js\"></script><figcaption>Decentralized Domain Name System &#8211; Smart Contract</figcaption></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you are interested in seeing the whole project in action — you can check the whole working project — <a href=\"https://github.com/mradkov/decentralized-dns\" rel=\"noreferrer noopener\" target=\"_blank\">decentralized DNS</a> in Github.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Stay tuned! Part two and three where we will be focusing on unit tests and UI implementation of the decentralized domain name system (DDNS) are coming soon&nbsp;…</p></blockquote>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>Continue&nbsp;…</h3>\n\n\n\n<ul><li>Part two: Unit testing and deploying</li><li>Part three: Building user interface (UI) for our dApp</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>Useful links</h3>\n\n\n\n<p>If you want to be informed for our next events and meet-ups — join us:</p>\n\n\n\n<p><strong>Blockchain Developers Meet-up Group</strong>:<a href=\"https://meetup.com/Blockchain-Developers-Meetup-Bulgaria\"><strong>Blockchain Developers Meet-up (Bulgaria)</strong><br><em>In this group, we will share knowledge about blockchain and smart contract development. We will talk about Ethereum…</em>meetup.com</a></p>\n\n\n\n<p><strong>Blockchain Developers Facebook Group</strong>:<a href=\"https://www.facebook.com/groups/BlockchainDevelopersMeetup\"><strong>Log into Facebook | Facebook</strong><br><em>Log into Facebook to start sharing and connecting with your friends, family, and people you know.</em>www.facebook.com</a></p>\n\n\n\n<p><strong>Follow us on social media:</strong></p>\n\n\n\n<ul><li><a href=\"https://twitter.com/hack_bg\" rel=\"noreferrer noopener\" target=\"_blank\">Twitter</a></li><li><a href=\"https://facebook.com/hackbg\" rel=\"noreferrer noopener\" target=\"_blank\">Facebook</a></li><li><a href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\" rel=\"noreferrer noopener\" target=\"_blank\">LinkedIn</a></li></ul>\n","excerpt":"<p>Intro Nowadays it is quite popular to build a decentralized application (dApp). If you are familiar with the blockchain smart [&hellip;]</p>\n","categories":[{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen","path":"/author/milen/"}}},{"node":{"date":"2018-11-09T16:10:52","id":"395","title":"Blockchain Developers Meetup Bulgaria- #0x04  - Introduction to Solidity Assembly","path":"/blog/blockchain-developers-meetup-bulgaria-0x04-introduction-to-solidity-assembly/","content":"\n<p>Four months had passed since the kick off of our awesome blockchain developers meetup. So far we’ve had very good speakers and topics. Moreover, we are happy to see new faces in the rows and to see our community growing.</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/01/2b818-1YBU7COOCqWsP6CSpe2E5Wg.jpeg\" alt=\"\"/><figcaption>Blockchain Developers Meetup Bulgaria — 04</figcaption></figure></div>\n\n\n\n<p>This time we had a small technical issue, the youtube live stream crashed a few times and we were unable to fix it on time, so we couldn’t record the whole session and we would like to apologize for that to the people watching us online. In this post, we will share with you the essence of yesterday’s meet-up.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>The event went as follows.</p>\n\n\n\n<h4>In the first&nbsp;part</h4>\n\n\n\n<p>We covered crypto related news covering Forks, Security, and technology advancements, without going into many technical details. In the second part we have our fantastic speaker <a href=\"https://pmihaylov.com/\" data-href=\"https://pmihaylov.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Preslav Mihaylov</strong></a>, head of blockchain training at <a href=\"https://softuni.bg\" data-href=\"https://softuni.bg\" target=\"_blank\" rel=\"noopener noreferrer\">Software University</a> (SoftUni Sofia), introduce the public to <strong>Solidity Assembly</strong>.</p>\n\n\n\n<p>Let’s look more into the details&nbsp;…</p>\n\n\n\n<p>Our CEO <a href=\"https://medium.com/u/23eaffb29922\" data-href=\"https://medium.com/u/23eaffb29922\" data-anchor-type=\"2\" data-user-id=\"23eaffb29922\" data-action-value=\"23eaffb29922\" data-action=\"show-user-card\" data-action-type=\"hover\" target=\"_blank\" rel=\"noopener noreferrer\">Milen Radkov</a> went to meet with some cool guys at <a href=\"https://websummit.com\" data-href=\"https://websummit.com\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Web Summit</strong></a> in Lisbon, so this time our Business Development Manager Hristo led the party — it was about time someone else to do so.</p>\n\n\n\n<p>We spoke about the recently released <strong>Cardano Rust Project,</strong> which is basically an API allowing third-party developers to dive into <a href=\"https://www.cardano.org/en/home/\" data-href=\"https://www.cardano.org/en/home/\" target=\"_blank\" rel=\"noopener noreferrer\">Cardano</a>. It is worth mentioning that the project is a toolkit compatible for iOS, Web, and Android.</p>\n\n\n\n<p>Secondly, we discussed the rise of the <strong>Bitcoin</strong> <strong>sidechains</strong> with the release of <a href=\"https://blockstream.com/liquid/\" data-href=\"https://blockstream.com/liquid/\" target=\"_blank\" rel=\"noopener noreferrer\">Blockstream’s Liquid Network</a>. An alternative to the <strong>Lightning network </strong>but with focus on exchanges and the big financial institutions(worth having a look at).</p>\n\n\n\n<p>We did not miss to mention the unsuccessful release of Constantinople Hard Fork that did not manage to sync after launch with the Testnet. Few reasons were mentioned by <a href=\"https://twitter.com/5chdn\" data-href=\"https://twitter.com/5chdn\" target=\"_blank\" rel=\"noopener noreferrer\">Afri Schoedon</a>, Parity dev and the takeaway is that the fork will be delayed until sometime in 2019.</p>\n\n\n\n<p>Next, we looked at a rather worrisome report saying that over 54% of the 100 top daily volume exchanges have security issues. And the most common issues are related to:</p>\n\n\n\n<ul><li>Console errors</li><li>User Account Security</li><li>Registar and Domain Security</li><li>Web Protocol Security</li></ul>\n\n\n\n<p>Next topic was the exiting release of Sapling, Zcash hard fork allowing shielded transfers to be completed with 100 times less memory (around 40mb) and probably six or more times faster. With this upgrade Zcash confidential transactions are getting mobile friendly because one does not need to run a full node anymore to run them. Zcash are bringing to us their awesome technology that will lead to us to the era of “privacy-by-default”.</p>\n\n\n\n<p>Just before the end of the news review, we mentioned the first Truckload Shipment Using Bitcoin Smart Contracts with Rootstock (RSK). During the shipment, the Funds for the transaction were held in escrow by the smart contract on the integrated RSK platform and were automatically released to the carrier upon delivery.</p>\n\n\n\n<p>And lastly, we discussed a recent EOS report pointing out the EOS has misled the public on the number of transaction that it can handle. The study was funded by the Bounties Network which is led by Brent Xu of ConsenSys and for this purpose replicated the EOS network to analyze its performance during two months of testing. The conclusions it reached are fairly damning. They say, for example:</p>\n\n\n\n<p>— “EOS is not a blockchain, rather a distributed homogeneous database management system, a clear distinction in that their transactions are not cryptographically validated.”</p>\n\n\n\n<p>— “The performance metrics observed when factors such as real-world network latency and packet loss are implemented indicate that TPS in EOS approaches levels comparable to Ethereum.”</p>\n\n\n\n<p>— Various forms of consensus failure were shown in the network testing. Consensus is entirely dependent upon the voting mechanism which is based on social consensus, not algorithmic BFT consensus.”</p>\n\n\n\n<h4>Getting more technical</h4>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/01/a6980-12CAfLFUMbeGI-hVp3_cd0w.jpeg\" alt=\"\"/><figcaption>Preslav Mihaylov</figcaption></figure></div>\n\n\n\n<p>Before we dive into Assembly, Preslav gave to the audience an overview of Assembly Language and the Programming Language Types.</p>\n\n\n\n<p>We discussed what are the advantages and the disadvantages of Compiled Languages over Interpreted Languages VM based Languages.</p>\n\n\n\n<p>We also looked at how they actually work:</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/01/ea65c-10AtGU2tDpnSaIwwClCkQgw.png\" alt=\"\"/><figcaption>from assembly via Assembler directly to Machine&nbsp;code</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/01/9878f-1JfdOizhMyyJuRmXL-Yk_Dw.png\" alt=\"\"/><figcaption>Compiled Languages — Best Performance/ Lack of portability</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/01/33b93-1diwTxtzARUa00gyLjmzc8w.png\" alt=\"\"/><figcaption>Comfortable high-level features/ Worst Performance</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/01/668ba-1GKLDAUFVWXjyoE4U7xlV2A.png\" alt=\"\"/><figcaption>a mix between compiled and interpreted languages</figcaption></figure></div>\n\n\n\n<p>We also discussed how the EVM is working and what are its benefits</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/01/a4a23-1KZIljUvcBOiH4fhCb8-HlA.png\" alt=\"\"/><figcaption>platform independent</figcaption></figure></div>\n\n\n\n<p>Preslav explained the benefits of using Solidity Assembly, but also did not miss to explain the risks related to using it. Using Assembly to achieve features that are not yet introduced into Solidity can come to a high price if one messes up the opcode.</p>\n\n\n\n<p>During the Live Demo, we have been introduced to Basic Operations in Assembly aiming to boost developers confidence when they encounter Assembly at work.</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/01/ac280-1Ox5mVFGc1rkUEct4y-ypUw.png\" alt=\"\"/><figcaption>Basic operations in&nbsp;Assembly</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/01/76c77-1gqbWtp2FZIAu_wK7wPNbyA.jpeg\" alt=\"\"/><figcaption>using jump to implement for loop in&nbsp;Assembly</figcaption></figure></div>\n\n\n\n<p>At the last part of Preslav&#8217;s presentation, we discussed the different types of memory in the EVM and their particularities.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Looking forward to meeting you on our next&nbsp;meetup.</p></blockquote>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you liked this article don&#8217;t hesitate to follow us on Medium. We are committed to developing<strong> the best Blockchain Developers Community in Europe</strong>!</p>\n\n\n\n<p>Special thanks to our guest lecturer Preslav Mihaylov and to the host of our fourth meetup SoftUni.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Watch the meetup session here:</p>\n\n\n\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/BPdc_apZRWM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div><figcaption>Introduction to Solidity Assembly &#8211; 0x04 [Blockchain Developers Meetup]</figcaption></figure>\n\n\n\n<h3><strong>References and Resources</strong></h3>\n\n\n\n<ul><li><a href=\"https://speakerdeck.com/pmihaylov/introduction-to-solidity-assembly?fbclid=IwAR1fCr9mdYOmpZVv-GiZBeV_Xl1LFSkV_mVpGu_YFAONlv6D8td4QMSNsI4\" data-href=\"https://speakerdeck.com/pmihaylov/introduction-to-solidity-assembly?fbclid=IwAR1fCr9mdYOmpZVv-GiZBeV_Xl1LFSkV_mVpGu_YFAONlv6D8td4QMSNsI4\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Preslav Mihaylov’s</strong> presentation</a></li><li><a href=\"https://speakerdeck.com/radkov/blockchain-developers-meetup-04\" data-href=\"https://speakerdeck.com/radkov/blockchain-developers-meetup-04\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Hristo Georgiev’s</strong> presentation</a></li><li><a href=\"https://www.youtube.com/watch?v=BPdc_apZRWM\" data-href=\"https://www.youtube.com/watch?v=BPdc_apZRWM\" target=\"_blank\" rel=\"noopener noreferrer\">Video recording</a></li></ul>\n\n\n\n<p><strong>News Sources mentioned in the meetup</strong></p>\n\n\n\n<ul><li><strong>Cardano</strong> &#8211;  <a rel=\"noreferrer noopener\" href=\"https://smartereum.com/37313/cardano-future-forecast-cardano-ada-takes-its-blockchain-to-a-whole-new-level-with-a-new-toolkit-ada-news-today/\" target=\"_blank\">https://smartereum.com/37313/cardano-future-forecast-cardano-ada-takes-its-blockchain-to-a-whole-new-level-with-a-new-toolkit-ada-news-today/</a></li><li><strong>Liquid Network</strong>  &#8211; <a rel=\"noreferrer noopener\" href=\"https://www.ccn.com/liquid-network-blockstreams-bitcoin-sidechain-is-now-live/\" target=\"_blank\">https://www.ccn.com/liquid-network-blockstreams-bitcoin-sidechain-is-now-live/</a></li><li><strong>ETH hard fork </strong> &#8211; <a rel=\"noreferrer noopener\" href=\"https://ethereumworldnews.com/ethereum-constantinople-blockchain-upgrade-delayed-until-2019/\" target=\"_blank\">https://ethereumworldnews.com/ethereum-constantinople-blockchain-upgrade-delayed-until-2019/</a></li><li><strong>Exchanges security</strong>  &#8211; <a data-href=\"https://www.ccn.com/over-half-of-all-crypto-exchanges-have-security-vulnerabilities-report/amp/\" rel=\"noopener noreferrer\" href=\"https://www.ccn.com/over-half-of-all-crypto-exchanges-have-security-vulnerabilities-report/amp/\" target=\"_blank\">https://www.ccn.com/over-half-of-all-crypto-exchanges-have-security-vulnerabilities-report/amp/</a></li><li><strong>Zcash - Sapling </strong> &#8211;  <a data-href=\"https://www.coindesk.com/zcashs-next-upgrade-to-make-private-transactions-100x-lighter-and-6x-faster/\" rel=\"noopener noreferrer\" href=\"https://www.coindesk.com/zcashs-next-upgrade-to-make-private-transactions-100x-lighter-and-6x-faster/\" target=\"_blank\">https://www.coindesk.com/zcashs-next-upgrade-to-make-private-transactions-100x-lighter-and-6x-faster/</a></li><li><strong>Smarter Bitcoin RSK</strong>  &#8211; <a data-href=\"https://www.ccn.com/logistics-firm-completes-first-truckload-shipment-using-bitcoin-smart-contracts/\" rel=\"noopener noreferrer\" href=\"https://www.ccn.com/logistics-firm-completes-first-truckload-shipment-using-bitcoin-smart-contracts/\" target=\"_blank\">https://www.ccn.com/logistics-firm-completes-first-truckload-shipment-using-bitcoin-smart-contracts/</a></li><li><strong>EOS Report </strong> &#8211;  <a data-href=\"https://www.trustnodes.com/2018/11/05/eos-misled-the-public-on-the-number-of-transactions-it-can-handle-says-new-study\" rel=\"noopener noreferrer\" href=\"https://www.trustnodes.com/2018/11/05/eos-misled-the-public-on-the-number-of-transactions-it-can-handle-says-new-study\" target=\"_blank\">https://www.trustnodes.com/2018/11/05/eos-misled-the-public-on-the-number-of-transactions-it-can-handle-says-new-study</a></li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you are <strong>interested in talking</strong> on some cool topic, or you want to <strong>propose some topic</strong> to be discussed — just <strong>drop us a line at </strong><a href=\"mailto:events@hack.bg\" data-href=\"mailto:events@hack.bg\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>events@hack.bg</strong></a> or write down a comment / reply.</p>\n\n\n\n<p>If you want to be informed for our next events and meetups — join us:</p>\n\n\n\n<p><strong>Blockchain Developers Meetup Group</strong>:</p>\n\n\n<style type=\"text/css\">#meetup_oembed .mu_clearfix:after { visibility: hidden; display: block; font-size: 0; content: \" \"; clear: both; height: 0; }* html #meetup_oembed .mu_clearfix, *:first-child+html #meetup_oembed .mu_clearfix { zoom: 1; }#meetup_oembed { background:#eee;border:1px solid #ccc;padding:10px;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;margin:0; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 12px; }#meetup_oembed h3 { font-weight:normal; margin:0 0 10px; padding:0; line-height:26px; font-family:Georgia,Palatino,serif; font-size:24px }#meetup_oembed p { margin: 0 0 10px; padding:0; line-height:16px; }#meetup_oembed img { border:none; margin:0; padding:0; }#meetup_oembed a, #meetup_oembed a:visited, #meetup_oembed a:link { color: #1B76B3; text-decoration: none; cursor: hand; cursor: pointer; }#meetup_oembed a:hover { color: #1B76B3; text-decoration: underline; }#meetup_oembed a.mu_button { font-size:14px; -moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;border:2px solid #A7241D;color:white!important;text-decoration:none;background-color: #CA3E47; background-image: -moz-linear-gradient(top, #ca3e47, #a8252e); background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #a8252e), color-stop(1, #ca3e47));disvplay:inline-block;padding:5px 10px; }#meetup_oembed a.mu_button:hover { color: #fff!important; text-decoration: none; }#meetup_oembed .photo { width:50px; height:50px; overflow:hidden;background:#ccc;float:left;margin:0 5px 0 0;text-align:center;padding:1px; }#meetup_oembed .photo img { height:50px }#meetup_oembed .number { font-size:18px; }#meetup_oembed .thing { text-transform: uppercase; color: #555; }</style>\n<div id=\"meetup_oembed\" style=\"height:423px\">\n<div style=\"overflow:hidden;max-height:383px\">\n<h3>Blockchain Developers Meetup (Bulgaria)</h3>\n<p style=\"margin:0 0 10px;font-size:12px;line-height:16px;\">Sofia, BG <br />          <span style=\"font-size:14px;font-weight:bold;\">144</span> <em>Developers</em></p>\n<p>          <a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" target=\"_blank\"><img src=\"https://secure.meetupstatic.com/photos/event/6/0/a/7/600_472464743.jpeg\" style=\"float:right;max-width:150px;margin-right:0;\" /></a>                          </p>\n<div style=\"margin-right:170px;line-height:16px;\">In this group, we will share knowledge about blockchain and smart contract development. We will talk about Ethereum, Aeternity, Polkadot, NEO, EOS, RSK, Hyperledger and other &#8230;</div>\n<p style=\"font-size:16px;margin:10px 0 5px;line-height:18px;\">Next Meetup</p>\n<p style=\"margin-bottom:2px;line-height:16px;font-size:14px;\"><a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/events/260215703/\" target=\"_blank\">0x09. TBA</a></p>\n<p style=\"line-height:18px;\">Thursday, Apr 25, 2019,  7:00 PM<br /><span style=\"color:#4F8A10;\">1 Attending</span></p>\n</p></div>\n<p style=\"margin:10px 0 5px;\"><a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" target=\"_blank\" class=\"mu_button\">Check out this Meetup Group &rarr;</a></p>\n</div>\n\n\n\n<p><strong>Blockchain Developers Facebook Group</strong>:</p>\n\n\n\n<ul><li><a href=\"http://facebook.com/groups/BlockchainDevelopersMeetup\">Blockchain Developers Meetup Facebook Group</a></li></ul>\n\n\n\n<p><strong>Website</strong>: <a href=\"https://hack.bg\" data-href=\"https://hack.bg\" target=\"_blank\" rel=\"noopener noreferrer\">https://hack.bg</a></p>\n\n\n\n<p><strong>Follow us on social media:</strong></p>\n\n\n\n<ul><li><a href=\"https://twitter.com/hack_bg\" data-href=\"https://twitter.com/hack_bg\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a></li><li><a href=\"https://facebook.com/hackbg\" data-href=\"https://facebook.com/hackbg\" target=\"_blank\" rel=\"noopener noreferrer\">Facebook</a></li><li><a href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\" data-href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a></li></ul>\n","excerpt":"<p>Four months had passed since the kick off of our awesome blockchain developers meetup. So far we’ve had very good [&hellip;]</p>\n","categories":[{"id":"5","title":"Events","path":"/category/events/"},{"id":"71","title":"Meet-ups","path":"/category/meetups/"}],"author":{"name":"Hristo","path":"/author/hgeorgiev/"}}},{"node":{"date":"2018-10-25T20:59:22","id":"141","title":"At the Web3 Summit in Berlin","path":"/blog/at-the-web3-summit-in-berlin/","content":"\n<p>We were attending at the first <strong>Web3 Summit</strong> in Berlin (22.10. — 24.10.).</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/7932d-1MT_elpE_UAWZvqPu3Jkieg@2x.jpeg\" alt=\"\"/></figure></div>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Web3 is a gathering for developers, researchers and cryptoanarchists to collaborate on a more free, more functional, and more user friendly&nbsp;Web3.</p></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>The Web3 Foundation nurtures and stewards technologies and applications in the fields of decentralized web software protocols, particularly those which utilize modern cryptographic methods to safeguard decentralization, to the benefit and for the stability of the Web3 ecosystem.</p></blockquote>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>We met a big portion of Berlin’s blockchain community and some of the greatest minds in the blockchain space — Vlad Zamfir, Gavin Wood, Arthur Breitman, Juan Benet, Harry Halpin and others.<br>\n</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/aa1c7-14oPqz4sqyF8HMH9sR43DPg@2x.jpeg\" alt=\"\"/><figcaption>Arthur Breitman and Milen&nbsp;Radkov</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/4d400-1wT2e6I5ppC4FREdH4kzVvA@2x.jpeg\" alt=\"\"/><figcaption>Vlad Zamfir and Milen&nbsp;Radkov</figcaption></figure></div>\n\n\n\n<p>It was really a nice gathering. There were lots of workshops and discussions about the <strong>web3.0.</strong></p>\n\n\n\n<p>Some of the discussions and talks were about the broken model of the old web as we know it and the way we can solve it by using blockchain. Also the governance of the web3.0 was one of the topics that brought lots of attention and thoughts.<br>\n</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/75979-1JMi8AvQYKDeu6NR4U5W8hw@2x.jpeg\" alt=\"\"/><figcaption>Arthur Breitman talking about&nbsp;Tezos</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/bbe42-1SMIryL4qG2JEZhqQHVVcFg@2x.jpeg\" alt=\"\"/><figcaption>Gavin Wood making presentation of&nbsp;Polkadot</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/5cc81-1FvzB5H5hqFyG1Ev_LrDD1A@2x.jpeg\" alt=\"\"/><figcaption>Lots of developers on the web3&nbsp;summit</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/d6031-1qAgqy8hMIv0Ed4jYVeopXQ@2x.jpeg\" alt=\"\"/><figcaption>Vlad Zamfir talking about governance in&nbsp;web3.0</figcaption></figure></div>\n\n\n\n<p>There was also a dedicated hackerspace where <a href=\"https://medium.com/u/23eaffb29922\" data-href=\"https://medium.com/u/23eaffb29922\" data-anchor-type=\"2\" data-user-id=\"23eaffb29922\" data-action-value=\"23eaffb29922\" data-action=\"show-user-card\" data-action-type=\"hover\" target=\"_blank\">Milen Radkov</a> took part. There we the so called “Nodes” for talks and discussions over security, blockchain architecture, workshops, VR experiences and AI related projects.<br>\n</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/bc14e-143ssQsIMIsJXqbIV3u9-3g@2x.jpeg\" alt=\"\"/><figcaption>Polkadot workshop</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/53926-1lDDJXHbM4sOFKw7eEhKgwg@2x.jpeg\" alt=\"\"/></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/c019c-1T-KAnd3mF6iDhnDsXzendw@2x.jpeg\" alt=\"\"/></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/3a90b-1REJFHFI320NpA1OjQ0Ipug@2x.jpeg\" alt=\"\"/></figure></div>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/2a7a9-1BWfksdMI3X54yRfWtsy2Hw@2x.jpeg\" alt=\"\"/><figcaption>Decentralized hackerspace nodes</figcaption></figure></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>It was really nice and refreshing, meeting all these inspiring people.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h4>Follow us on social&nbsp;media:</h4>\n\n\n\n<ul><li><a href=\"https://hack.bg\" data-href=\"https://hack.bg\" target=\"_blank\">hack website</a></li><li><a href=\"https://twitter.com/hack_bg\" data-href=\"https://twitter.com/hack_bg\" target=\"_blank\">Twitter</a></li><li><a href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\" data-href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\" target=\"_blank\">Linkedin</a></li><li><a href=\"https://facebook.com/hackbg\" data-href=\"https://facebook.com/hackbg\" target=\"_blank\">Facebook page</a></li><li><a href=\"https://www.facebook.com/groups/BlockchainDevelopersMeetup/\" data-href=\"https://www.facebook.com/groups/BlockchainDevelopersMeetup/\" target=\"_blank\">Facebook group</a></li><li><a href=\"https://meetup.com/blockchain-developers-meetup-bulgaria\" data-href=\"https://meetup.com/blockchain-developers-meetup-bulgaria\" target=\"_blank\">Meetup group</a></li></ul>\n","excerpt":"<p>We were attending at the first Web3 Summit in Berlin (22.10. — 24.10.). Web3 is a gathering for developers, researchers and cryptoanarchists [&hellip;]</p>\n","categories":[{"id":"5","title":"Events","path":"/category/events/"},{"id":"52","title":"Apperances","path":"/category/apperances/"}],"author":{"name":"Milen","path":"/author/milen/"}}},{"node":{"date":"2018-10-03T09:48:31","id":"146","title":"Blockchain Developers Meetup #0x03 — LiveCoding Workshop","path":"/blog/blockchain-developers-meetup-0x03-25e2-80-8a-25e2-80-8alivecoding-workshop/","content":"\n<p>Another month has passed away and the time for our next meetup has come.</p>\n\n\n\n<p>Yesterday we were gathered for the third <a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" data-href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Blockchain Developers Meetup</strong></a><strong> </strong>in our community.</p>\n\n\n\n<p>This time we’ve tried another format of conducting these meetups —</p>\n\n\n\n<ul><li>The first part — a brief summary about the recent news in the blockchain space — new forks that are coming, improvement proposals, new development networks and tools.</li><li>As a second part — discussions about interesting development topics, workshops and practical examples.</li><li>And last but not least — networking.</li></ul>\n\n\n\n<p>We’ve received great feedback from you guys and we’ll continue doing our meetups this way.<br>\n</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/9e4e9-189_upggrFy2lWJHAchWPhQ.jpeg\" alt=\"\"/><figcaption>Our coolest blockchain development community</figcaption></figure></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>For those of you who wasn’t able to come yesterday, here is a short summary of what we’ve talked about:<br>\n</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/b3377-1zONFL7OYqqJk70Z5gfsDpA.jpeg\" alt=\"\"/><figcaption>Milen Radkov talking about the recent blockchain development news</figcaption></figure></div>\n\n\n\n<p>First <a href=\"https://linkedin.com/in/milenradkov\" data-href=\"https://linkedin.com/in/milenradkov\" target=\"_blank\" rel=\"noopener noreferrer\">Milen Radkov</a> (CEO at <a href=\"https://hack.bg\" data-href=\"https://hack.bg\" target=\"_blank\" rel=\"noopener noreferrer\">hack — Blockchain Development and Consulting Agency</a>) talked about the Ethereum’s Constantinople Hard Fork, explaining the EIP’s (Ethereum Improvements Proposals) that are going to be implemented in this fork.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>\n<a href=\"https://eips.ethereum.org/EIPS/eip-145\" data-href=\"https://eips.ethereum.org/EIPS/eip-145\" target=\"_blank\" rel=\"noopener noreferrer\">EIP 145</a> — Bitwise shifting instructions in EVM<br>\n<a href=\"https://eips.ethereum.org/EIPS/eip-1014\" data-href=\"https://eips.ethereum.org/EIPS/eip-1014\" target=\"_blank\" rel=\"noopener noreferrer\">EIP 1014</a> — Skinny CREATE2<br>\n<a href=\"https://eips.ethereum.org/EIPS/eip-1052\" data-href=\"https://eips.ethereum.org/EIPS/eip-1052\" target=\"_blank\" rel=\"noopener noreferrer\">EIP 1052</a> — EXTCODEHASH opcode<br>\n<a href=\"https://eips.ethereum.org/EIPS/eip-1283\" data-href=\"https://eips.ethereum.org/EIPS/eip-1283\" target=\"_blank\" rel=\"noopener noreferrer\">EIP 1283</a> — Net gas metering for SSTORE without dirty maps<br>\n<a href=\"https://eips.ethereum.org/EIPS/eip-1234\" data-href=\"https://eips.ethereum.org/EIPS/eip-1234\" target=\"_blank\" rel=\"noopener noreferrer\">EIP 1234</a> — Difficulty Bomb Delay and Block Reward Adjustment</p></blockquote>\n\n\n\n<p>Also short explainer about ProgPoW consensus algorithm that was discussed to be implemented in Ethereum by the core dev team.<br>\n</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/121b3-1a47JMuH_A6_6hSUIDrGhiQ.jpeg\" alt=\"\"/><figcaption>Tezos — decentralized applications platform</figcaption></figure></div>\n\n\n\n<p>Milen mentioned the mainnet launch of <a href=\"https://tezos.com\" data-href=\"https://tezos.com\" target=\"_blank\" rel=\"noopener noreferrer\">Tezos</a> — a new platform for smart contracts and decentralized applications. Which will be deeply reviewed and discussed in some of our next meetups.<br>\n</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/929b7-1D8TTQ8f3Bk-_dAAHJEcU3w.jpeg\" alt=\"\"/><figcaption>WeiDEX — decentralized exchange</figcaption></figure></div>\n\n\n\n<p>Milen finished with a big shoutout to our friends from <a href=\"https://weidex.market\" data-href=\"https://weidex.market\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>WeiDEX</strong></a> for their mainnet launch yesterday — another successful Bulgarian blockchain project with very experienced, skillful and enthusiastic team.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>WeiDex is a fully featured <strong>decentralized exchange</strong>. It guarantees the maximum standard of security, transparency and open source logic. The main idea behind decentralized exchanges is the <strong>removal of third party</strong> intermediaries. With their removal, decentralized exchanges don’t require any personal information such as names, addresses, and other private information. With weiDex, users will enjoy a plethora of extra features not found on other exchanges such as multiple order fulfilment, <strong>Bull/Bear Bomb</strong>, <strong>Crumb Cleaner</strong>, high reward referral system airdrops, and our favourite, cross-chain transactions for Ethereum and other Smart Contract platforms and <strong>cross-chain atomic swaps</strong></p></blockquote>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/32d3b-1IcgLaFRZcwu8HTJ7vXj-HQ.jpeg\" alt=\"\"/><figcaption>Nikolay Angelov — Zero knowledge proof&nbsp;example</figcaption></figure></div>\n\n\n\n<p>For the second part of our meetup we invited <a href=\"https://www.linkedin.com/in/thedi/\" data-href=\"https://www.linkedin.com/in/thedi/\" target=\"_blank\" rel=\"noopener noreferrer\">Nikolay Angelov</a>. He is a very experienced blockchain developer and trainer. You can check <a href=\"http://nikolaytech.com/\" data-href=\"http://nikolaytech.com/\" target=\"_blank\" rel=\"noopener noreferrer\">his blog </a>out as well.</p>\n\n\n\n<p>He was doing a talk and a workshop about creating <a href=\"https://en.wikipedia.org/wiki/Zero-knowledge_proof\" data-href=\"https://en.wikipedia.org/wiki/Zero-knowledge_proof\" target=\"_blank\" rel=\"noopener noreferrer\">Zero-knowledge proof</a> and verification via Smart Contract on <a href=\"https://ethereum.org\" data-href=\"https://ethereum.org\" target=\"_blank\" rel=\"noopener noreferrer\">Ethereum</a>.</p>\n\n\n\n<p>Nikolay explained what a zero-knowledge proof is and how it enables variety of use-cases for blockchain projects and also could help current scalability issues in some networks.<br>\n</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/abdff-1fWoNkfOkMsNYva9Sid93Vg.jpeg\" alt=\"\"/><figcaption>ZoKrates zero-knowledge proof&nbsp;example</figcaption></figure></div>\n\n\n\n<p>In his workshop he introduced us to the <a href=\"https://github.com/JacobEberhardt/ZoKrates\" data-href=\"https://github.com/JacobEberhardt/ZoKrates\" target=\"_blank\" rel=\"noopener noreferrer\">ZoKrates</a> — a toolbox for zkSNARKS over Ethereum, and created a simple arithmetic program that he used for the zkSNARKS example.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>And of course — the networking part — as networking gives you new possibilities for career advancement and professional growth.<br>\n</p>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/c7da5-1nbLxO7wZvnTUp1Keo9cpWg.jpeg\" alt=\"\"/><figcaption>Blockchain Developers Meetup #03 Networking</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image wp-caption\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/e7717-1Q7-6qMJOd7PnducmNGM_1g.jpeg\" alt=\"\"/><figcaption>Blockchain Developers Meetup #03 Networking</figcaption></figure></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Watch the session and get the presentations and resources here:</p>\n\n\n\n<figure class=\"wp-block-embed-youtube wp-block-embed\"><div class=\"wp-block-embed__wrapper\"><figure><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/tBBCQ_5nGS4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><figcaption>LiveCoding Workshop &#8211; 0x03 [Blockchain Developers Meetup]</figcaption></figure>\n</div></figure>\n\n\n\n<h2>Resources</h2>\n\n\n\n<ul><li><a href=\"https://speakerdeck.com/radkov/blockchain-developers-meetup-number-03\">Milen Radkov&#8217;s presentation</a></li><li><a href=\"https://speakerdeck.com/thedi/zero-knowledge-proof\">Nikolay Angelov&#8217;s presentation &#8211; Zero knowledge proof</a></li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you are <strong>interested in talking</strong> on some cool topic, or you want to <strong>propose some topic</strong> to be discussed — just <strong>drop us a line at </strong><a href=\"mailto:events@hack.bg\" data-href=\"mailto:events@hack.bg\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>events@hack.bg</strong></a> or write down a comment / reply.</p>\n\n\n\n<p>If you want to be informed for our next events and meetups — join us:</p>\n\n\n\n<p><strong>Blockchain Developers Meetup Group</strong>:</p>\n\n\n<style type=\"text/css\">#meetup_oembed .mu_clearfix:after { visibility: hidden; display: block; font-size: 0; content: \" \"; clear: both; height: 0; }* html #meetup_oembed .mu_clearfix, *:first-child+html #meetup_oembed .mu_clearfix { zoom: 1; }#meetup_oembed { background:#eee;border:1px solid #ccc;padding:10px;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;margin:0; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 12px; }#meetup_oembed h3 { font-weight:normal; margin:0 0 10px; padding:0; line-height:26px; font-family:Georgia,Palatino,serif; font-size:24px }#meetup_oembed p { margin: 0 0 10px; padding:0; line-height:16px; }#meetup_oembed img { border:none; margin:0; padding:0; }#meetup_oembed a, #meetup_oembed a:visited, #meetup_oembed a:link { color: #1B76B3; text-decoration: none; cursor: hand; cursor: pointer; }#meetup_oembed a:hover { color: #1B76B3; text-decoration: underline; }#meetup_oembed a.mu_button { font-size:14px; -moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;border:2px solid #A7241D;color:white!important;text-decoration:none;background-color: #CA3E47; background-image: -moz-linear-gradient(top, #ca3e47, #a8252e); background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #a8252e), color-stop(1, #ca3e47));disvplay:inline-block;padding:5px 10px; }#meetup_oembed a.mu_button:hover { color: #fff!important; text-decoration: none; }#meetup_oembed .photo { width:50px; height:50px; overflow:hidden;background:#ccc;float:left;margin:0 5px 0 0;text-align:center;padding:1px; }#meetup_oembed .photo img { height:50px }#meetup_oembed .number { font-size:18px; }#meetup_oembed .thing { text-transform: uppercase; color: #555; }</style>\n<div id=\"meetup_oembed\" style=\"height:423px\">\n<div style=\"overflow:hidden;max-height:383px\">\n<h3>Blockchain Developers Meetup (Bulgaria)</h3>\n<p style=\"margin:0 0 10px;font-size:12px;line-height:16px;\">Sofia, BG <br />          <span style=\"font-size:14px;font-weight:bold;\">144</span> <em>Developers</em></p>\n<p>          <a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" target=\"_blank\"><img src=\"https://secure.meetupstatic.com/photos/event/6/0/a/7/600_472464743.jpeg\" style=\"float:right;max-width:150px;margin-right:0;\" /></a>                          </p>\n<div style=\"margin-right:170px;line-height:16px;\">In this group, we will share knowledge about blockchain and smart contract development. We will talk about Ethereum, Aeternity, Polkadot, NEO, EOS, RSK, Hyperledger and other &#8230;</div>\n<p style=\"font-size:16px;margin:10px 0 5px;line-height:18px;\">Next Meetup</p>\n<p style=\"margin-bottom:2px;line-height:16px;font-size:14px;\"><a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/events/260215703/\" target=\"_blank\">0x09. TBA</a></p>\n<p style=\"line-height:18px;\">Thursday, Apr 25, 2019,  7:00 PM<br /><span style=\"color:#4F8A10;\">1 Attending</span></p>\n</p></div>\n<p style=\"margin:10px 0 5px;\"><a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" target=\"_blank\" class=\"mu_button\">Check out this Meetup Group &rarr;</a></p>\n</div>\n\n\n\n<p><strong>Blockchain Developers Facebook Group</strong>:</p>\n\n\n\n<ul><li><a href=\"http://facebook.com/groups/BlockchainDevelopersMeetup\">Blockchain Developers Meetup Facebook Group</a></li></ul>\n\n\n\n<p><strong>Website</strong>: <a href=\"https://hack.bg\" data-href=\"https://hack.bg\" target=\"_blank\" rel=\"noopener noreferrer\">https://hack.bg</a></p>\n\n\n\n<p><strong>Follow us on social media:</strong></p>\n\n\n\n<ul><li><a href=\"https://twitter.com/hack_bg\" data-href=\"https://twitter.com/hack_bg\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a></li><li><a href=\"https://facebook.com/hackbg\" data-href=\"https://facebook.com/hackbg\" target=\"_blank\" rel=\"noopener noreferrer\">Facebook</a></li><li><a href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\" data-href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a></li></ul>\n","excerpt":"<p>Another month has passed away and the time for our next meetup has come. Yesterday we were gathered for the [&hellip;]</p>\n","categories":[{"id":"5","title":"Events","path":"/category/events/"},{"id":"71","title":"Meet-ups","path":"/category/meetups/"}],"author":{"name":"Milen","path":"/author/milen/"}}}]}}},"context":{}}