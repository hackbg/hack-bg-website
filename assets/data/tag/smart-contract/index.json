{"hash":"da10d8fed2eebc8229618ff02dd89757248d4140","data":{"tag":{"title":"Smart Contract","belongsTo":{"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"date":"2019-04-12T09:17:21","id":"973","title":"Blockchain in Finance","path":"/blog/blockchain-best-use-case-series-blockchain-in-finance/","content":"\n<h2>Blockchain&#8217;s Best Use Case Series</h2>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/04/blockchain_in_finance_best_blockchain_use_cases.png\" alt=\"Blockchain in finance - Best blockchain use cases\" class=\"wp-image-1003\" srcset=\"https://hack.bg/wp-content/uploads/2019/04/blockchain_in_finance_best_blockchain_use_cases.png 1920w, https://hack.bg/wp-content/uploads/2019/04/blockchain_in_finance_best_blockchain_use_cases-300x169.png 300w, https://hack.bg/wp-content/uploads/2019/04/blockchain_in_finance_best_blockchain_use_cases-768x432.png 768w, https://hack.bg/wp-content/uploads/2019/04/blockchain_in_finance_best_blockchain_use_cases-1024x576.png 1024w\" sizes=\"(max-width: 1920px) 100vw, 1920px\" /><figcaption>Blockchain in finance &#8211; Best blockchain use cases</figcaption></figure></div>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><em>“<strong> Blockchain Will Do to the Financial System What the Internet Did to Media.</strong>”</em></p><cite><em>Harvard Business Review</em></cite></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p> <em>&#8220;<strong>One of the most discussed topics in the financial services industry today is blockchain technology</strong>&#8220;</em>. </p><cite>Deloitte</cite></blockquote>\n\n\n\n<p>Why is there so much talk around blockchain?</p>\n\n\n\n<p>In our previous articles, we discussed <a href=\"https://hack.bg/blog/blockchain-and-business/how-to-boost-your-business-with-blockchain/\">what is blockchain</a> and how you can <a href=\"https://hack.bg/blog/blockchain-and-business/how-to-boost-your-business-with-blockchain-part-2/\">raise funds</a> to kickstart your business idea or to finance your existing business. We have also covered <a href=\"https://hack.bg/blog/blockchain-and-business/ico-or-sto-7-steps-to-success/\">the steps</a> that you need to follow to bring your idea to life. </p>\n\n\n\n<p>Additionally, we have discussed the benefits of using blockchain and  what is the <a href=\"https://hack.bg/blog/the-future-of-blockchain/\">foreseeable future of blockchain</a>.</p>\n\n\n\n<p>In this series of articles, we would like to focus more on specific uses cases of blockchain and the and most obvious one is the use of <em><strong>Blockchain in Finance</strong></em>.</p>\n\n\n\n<p>Finance is the engine of our economies and businesses.  But to have access to the financial system as a business owner up until now one needed to have an intermediary in the process. Most of the times those are the banks as well as other services providers cutting on your profits or increasing the price for the end user of your products. </p>\n\n\n\n<h3>Be your own bank</h3>\n\n\n\n<p>With blockchain, you are your own bank. You can create your own account and operate it the way you want.  As long as you manage to keep your private keys safe you are safe. </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/04/1.png\" alt=\"\" class=\"wp-image-991\" srcset=\"https://hack.bg/wp-content/uploads/2019/04/1.png 943w, https://hack.bg/wp-content/uploads/2019/04/1-300x138.png 300w, https://hack.bg/wp-content/uploads/2019/04/1-768x354.png 768w\" sizes=\"(max-width: 943px) 100vw, 943px\" /><figcaption>Source: <a href=\"https://advisory.kpmg.us/content/dam/advisory/en/pdfs/blockchain-future-finance.pdf\">https://advisory.kpmg.us/content/dam/advisory/en/pdfs/blockchain-future-finance.pdf</a></figcaption></figure></div>\n\n\n\n<p>But what exactly are the benefits for business owners to be their own bank?</p>\n\n\n\n<h3>Full Control</h3>\n\n\n\n<p>First of all, you have full control and full access to your funds. 24/7 365 days a year. No need to wait days for a payment to settle. When your customers pay you in crypto (ETH/BTC) you will have your money within a few seconds/minutes.</p>\n\n\n\n<h3>Save Money</h3>\n\n\n\n<p>Second, if you use crypto payments to purchase your stock you can save a lot of money on bank transfers. And third, since crypto payments are all recorded to the blockchain, you can use the records when doing your accounting, thus again you will save time and money.</p>\n\n\n\n<h3>Automate</h3>\n\n\n\n<p>In addition to payments and money transfers, the blockchain is allowing business owners to run businesses in automated ways using smart contracts. Smart contracts are a series of instructions, written in a programming language, working on the basis of the IF-THIS-THEN-THAT logic, allowing people to have trusted interactions with each other without the need of a third party or an escrow service.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/04/2.png\" alt=\"\" class=\"wp-image-996\" srcset=\"https://hack.bg/wp-content/uploads/2019/04/2.png 993w, https://hack.bg/wp-content/uploads/2019/04/2-300x164.png 300w, https://hack.bg/wp-content/uploads/2019/04/2-768x420.png 768w\" sizes=\"(max-width: 993px) 100vw, 993px\" /><figcaption>Source <a href=\"https://blockgeeks.com/wp-content/uploads/2016/10/infographics-02-1.jpg\">https://blockgeeks.com/wp-content/uploads/2016/10/infographics-02-1.jpg</a></figcaption></figure></div>\n\n\n\n<h3>Be innovative and cost-efficient </h3>\n\n\n\n<p>Because of the underlying technology of blockchain, <strong><em>the immutability,</em></strong> we can guarantee that what we see is the &#8220;truth&#8221;.</p>\n\n\n\n<p>Besides, we can speak of some other benefits of using blockchain in your business.  In their report &#8220;<a href=\"https://advisory.kpmg.us/articles/2018/blockchain-future-finance.html?utm_source=forbes&amp;utm_medium=content&amp;mid=m-00002211&amp;utm_content=blockchainfinance&amp;utm_campaign=c-00061241&amp;cid=c-00061241\">Blockchain and the Future of Finance</a>&#8221; KPMG highlighted a few of those benefits:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/04/bbasics.png\" alt=\"\" class=\"wp-image-989\" srcset=\"https://hack.bg/wp-content/uploads/2019/04/bbasics.png 474w, https://hack.bg/wp-content/uploads/2019/04/bbasics-300x261.png 300w\" sizes=\"(max-width: 474px) 100vw, 474px\" /><figcaption>Source: <a href=\"https://advisory.kpmg.us/content/dam/advisory/en/pdfs/blockchain-future-finance.pdf\">https://advisory.kpmg.us/content/dam/advisory/en/pdfs/blockchain-future-finance.pdf</a><br></figcaption></figure></div>\n\n\n\n<h3>Be a leader not a follower</h3>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/04/3.png\" alt=\"\" class=\"wp-image-998\" srcset=\"https://hack.bg/wp-content/uploads/2019/04/3.png 632w, https://hack.bg/wp-content/uploads/2019/04/3-300x108.png 300w\" sizes=\"(max-width: 632px) 100vw, 632px\" /><figcaption>Source: <a href=\"https://www.ibm.com/blockchain/industries/financial-services\">https://www.ibm.com/blockchain/industries/financial-services</a></figcaption></figure></div>\n\n\n\n<blockquote class=\"wp-block-quote\"><p> “Using an open-source DLT solution will ensure the appropriate levels <br>of confidentiality, security, standardization, scalability, and flexibility required to create a meaningful network effect across the financial industry.”  </p><p></p><cite>Tom Zschach, Head of Technology and Operations at CLS </cite></blockquote>\n\n\n\n<p>You might be asking yourself what are the reasons for some business owners not to implement blockchain. Here is a figure that is giving us a more clear picture:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2019/04/graph.png\" alt=\"\" class=\"wp-image-975\" srcset=\"https://hack.bg/wp-content/uploads/2019/04/graph.png 431w, https://hack.bg/wp-content/uploads/2019/04/graph-300x251.png 300w\" sizes=\"(max-width: 431px) 100vw, 431px\" /><figcaption>Source: <a href=\"http://chrome-extension://oemmndcbldboiebfnladdacbdfmadadm/https://www.ibm.com/downloads/cas/AY1QE1PK\">https://www.ibm.com/downloads/cas/AY1QE1PK</a><br></figcaption></figure></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you have a great idea — but you don&#8217;t have the skill to build it – get in touch with us at <a rel=\"noreferrer noopener\" href=\"mailto:hello@hack.bg\" target=\"_blank\">hello@hack.bg</a>.</p>\n\n\n\n<p>Take a look at the full list of our&nbsp;<a rel=\"noreferrer noopener\" href=\"https://hack.bg/#services\" target=\"_blank\">services</a> on our website.</p>\n\n\n\n<p><strong><em>We bring ideas to life.</em></strong></p>\n","excerpt":"<p>Blockchain&#8217;s Best Use Case Series “ Blockchain Will Do to the Financial System What the Internet Did to Media.” Harvard Business Review &#8220;One of the most discussed topics in the financial services industry today is blockchain technology&#8220;. Deloitte Why is there so much talk around blockchain? In our previous articles, we discussed what is blockchain [&hellip;]</p>\n","categories":[{"id":"18","title":"Blockchain and Business","path":"/category/blockchain-and-business/"}],"author":{"name":"Hristo Georgiev","path":"/author/hgeorgiev/"}}},{"node":{"date":"2018-11-30T10:46:53","id":"107","title":"[Part one &#8211; Smart Contracts] Build a Decentralized Domain Name System (DDNS) on top of Ethereum","path":"/blog/part-one-smart-contracts-build-a-decentralized-domain-name-system-ddns-on-top-of-ethereum/","content":"\n<h3>Intro</h3>\n\n\n\n<p>Nowadays it is quite popular to <a href=\"https://hack.bg\" rel=\"noreferrer noopener\" target=\"_blank\"><strong>build</strong> <strong>a</strong> <strong>decentralized application</strong></a><strong> (dApp)</strong>. If you are familiar with the blockchain smart contracts development and you’ve already developed something cool, probably there is no need for me to tell you that in this field the demand for good developers is quite high.</p>\n\n\n\n<p>But for you to be a good smart contracts developer, you have to research, learn the best coding practices, educate yourself and practice coding constantly.</p>\n\n\n\n<p>In this tutorial, I’m going to show you step by step my implementation on how to create a <strong>decentralized</strong> <strong>application</strong> which functions as a simplified <strong>DNS</strong> (<strong>domain name system</strong>). It was created a while back, but recently got a lot of attention, so I decided to make a short tutorial explaining the steps in the making.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>There are quite a lot of blockchain platforms that give us the opportunity to develop smart contracts and decentralized applications on top of their networks and infrastructure. The main platforms used for dApp development are <a href=\"https://aeternity.com/\" rel=\"noreferrer noopener\" target=\"_blank\">Aeternity</a>, <a href=\"http://ethereum.org\" rel=\"noreferrer noopener\" target=\"_blank\">Ethereum</a>, <a href=\"https://neo.org/\" rel=\"noreferrer noopener\" target=\"_blank\">NEO</a>, <a href=\"https://eos.io/\" rel=\"noreferrer noopener\" target=\"_blank\">EOS</a>, <a href=\"https://qtum.org/\" rel=\"noreferrer noopener\" target=\"_blank\">QTUM</a>, <a href=\"https://www.cardano.org\" rel=\"noreferrer noopener\" target=\"_blank\">Cardano</a>, <a href=\"https://stratisplatform.com\" rel=\"noreferrer noopener\" target=\"_blank\">Stratis</a> and for sure we will see a lot more in the nearest future. But for the purpose of this tutorial, we’ll be using <a href=\"http://solidity.readthedocs.io\" rel=\"noreferrer noopener\" target=\"_blank\">Solidity</a> as our development language and Ethereum’s infrastructure, as Ethereum is the most widely used for dApps development <strong>for now.</strong></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you do not know what a domain name system is, and how it works, now is the time for you to go to Wikipedia and check <a href=\"https://en.wikipedia.org/wiki/Domain_Name_System\" rel=\"noreferrer noopener\" target=\"_blank\">DNS</a> out to get a basic understanding of it.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>At first building a decentralized DNS on top of Ethereum might seem like a trivial task, but we will make it a bit more complex&nbsp;… right&nbsp;now</p></blockquote>\n\n\n\n<p>Let us set some requirements for our project — simplified decentralized domain name system (DDNS).</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>Requirements</h3>\n\n\n\n<ol><li>We should be able to <strong>register a domain</strong> by providing the domain name and an IP address it should point to. There are also some other conditions:</li></ol>\n\n\n\n<ul><li>A registered domain cannot be bought and is owned by the caller of the method.</li><li>The domain registration should cost 1 ETH and the domain should be registered for 1 year.</li><li>After 1 year, anyone is allowed to buy the domain again.</li><li>The domain registration can be extended by 1 year if the domain owner calls the register method and pays 1 ETH.</li><li>The domain can be any string with length <strong>more than 5 symbols.</strong></li></ul>\n\n\n\n<p>2. We need a public method to edit a domain. In our simplified <strong>decentralized DNS </strong>system, the editing of a domain will be changing the IP address it points to. The operation should be free and only the owner of the domain should be able to edit the domain.</p>\n\n\n\n<p>3. Public method to transfer the domain ownership to another user. Again this operation is free and only the domain owner can transfer his domains ownership to somebody else.</p>\n\n\n\n<p>4. Public method to get the IP based on a given domain.</p>\n\n\n\n<p>5. A Public method that returns a list of all <strong>receipts</strong> by a certain account. A <strong>receipt</strong> is a domain purchase/extension and contains the price, timestamp of purchase and expiration date of the domain.</p>\n\n\n\n<p>And since this is a domain name system, we want to make it as similar to the current ones as possible, so we are going to add some more additional features like:</p>\n\n\n\n<ul><li>Dynamic pricing — the base price can increase if a short domain name is bought.</li><li>Public method to withdraw the funds from the contract. <strong>This should be called only from the contract owner </strong>(the address which initially created the contract).</li><li>Use <strong>contract events</strong> to signify that an activity has taken place in the contract. Events can be for domain registration/transfer (DDNS) etc.</li></ul>\n\n\n\n<p>And lastly, we need to have unit tests for everything we’ve done so far.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>Implementation</h3>\n\n\n\n<h4>Step 1: Architecture design</h4>\n\n\n\n<p>First, we need to think about our architecture and design it. In our case it is a very simple project so the architecture could be something like this:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS-1024x576.png\" alt=\"\" class=\"wp-image-115\" srcset=\"https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS-300x169.png 300w, https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS-768x432.png 768w, https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS-480x270.png 480w, https://hack.bg/wp-content/uploads/2018/12/Decentralized-DNS.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Figure 1 — Decentralized DNS (domain name system) Architecture</figcaption></figure></div>\n\n\n\n<h4>Step 2: Architecture preparation</h4>\n\n\n\n<p>There are already smart contracts for the safe math operations, ownership logic and destruction logic provided from <a href=\"https://github.com/OpenZeppelin/openzeppelin-solidity\" rel=\"noreferrer noopener\" target=\"_blank\">OpenZeppelin</a>, that have passed multiple security audits, so we don’t need to reinvent the wheel.</p>\n\n\n\n<p>For the math operations we are going to use <a href=\"https://github.com/OpenZeppelin/openzeppelin-solidity/blob/9b3710465583284b8c4c5d2245749246bb2e0094/contracts/math/SafeMath.sol\" rel=\"noreferrer noopener\" target=\"_blank\">SafeMath library</a>, which looks like this:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/edc27fd2e860d274a1ed27eed9e1b2ef.js\"></script>\n<figcaption>SafeMath.sol — Safe Mathematical operations in Solidity</figcaption></figure>\n\n\n\n<p>For the ownership and destruction logic we will again use security audited and proven to work contracts from the <a href=\"https://github.com/OpenZeppelin/openzeppelin-solidity/\" rel=\"noreferrer noopener\" target=\"_blank\">openzeppelin-solidity Github</a> repository and then proceed with the implementation of our own DDNS.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/df74ec982a3814e9b47eceb578bc17a9.js\"></script><figcaption>Ownable.sol — Ownership logic solidity</figcaption></figure>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/01aaa6104b7cf183d1fe969864080f2a.js\"></script><figcaption>Destructible.sol — Smart contract lifecycle logic solidity</figcaption></figure>\n\n\n\n<p>Lastly our main contract where we will put our logic for the <strong>decentralized domain name system </strong>(DDNS):</p>\n\n\n\n<p>It inherits the <strong>Destructible.sol</strong> contract which itself inherits the ownership logic from the <strong>Ownable.sol</strong> contract and we are good to go.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/2ca5fb13bdd424d895ca7b25436c7faa.js\"></script><figcaption>DDNS initial contract</figcaption></figure>\n\n\n\n<p>The directory tree of our project could be looking like this at this point:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree-1024x576.png\" alt=\"\" class=\"wp-image-116\" srcset=\"https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree-300x169.png 300w, https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree-768x432.png 768w, https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree-480x270.png 480w, https://hack.bg/wp-content/uploads/2018/12/DDNS-Directory-tree.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Figure 2 — Project structure for <strong>Decentralized Domain Name&nbsp;System</strong></figcaption></figure></div>\n\n\n\n<h4>Step 3: Defining struct types, function modifiers, and state variables</h4>\n\n\n\n<p>Starting with the structures — <strong>structs</strong> are custom defined types that can group several variables. In our case, we will make some things easier by creating structures for them.</p>\n\n\n\n<p>So, as we all know every problem has lots of different approaches to be solved, and I challenge you to try solving this one yourself and not trust mine as the “one and only solution”.</p>\n\n\n\n<p><strong>Structs</strong></p>\n\n\n\n<p>We are defining the <strong>DomainDetails </strong>structure which has the following properties:</p>\n\n\n\n<ul><li><em>bytes</em> name — the domain name stored as bytes</li><li><em>bytes12</em> topLevel — the TLD of the domain</li><li><em>address</em> owner — address of the owner</li><li><em>bytes15</em> ip — IP that is related to the domain name</li><li><em>uint</em> expires — expiring date of the domain.</li></ul>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/df74ec982a3814e9b47eceb578bc17a9.js\"></script><figcaption>DomainDetails Structure for the DDNS implementation</figcaption></figure>\n\n\n\n<p>Second we are defining the <strong>Receipt </strong>structure — which is something we should provide the user according to the project requirements we’ve set in the beginning. It has the following properties&nbsp;:</p>\n\n\n\n<ul><li><em>uint</em> amountPaidWei — the price that was paid in this transaction, stored as the amount of wei (the smallest part of ether)</li><li><em>uint </em>timestamp — the time when this receipt was issued</li><li><em>uint</em> expires — expiring time</li></ul>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/e794c8461432ee45e93f0214e5251336.js\"></script><figcaption>Receipt structure for the DDNS implementation</figcaption></figure>\n\n\n\n<p><strong>Modifiers</strong></p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Modifiers can be used to easily change the behavior of functions. For example, they can automatically check a condition prior to executing the function. Modifiers are inheritable properties of contracts and may be overridden by derived contracts.</p></blockquote>\n\n\n\n<p>First modifier that we are going to implement is an <strong>isAvailable </strong>modifier, which we will be using to check whether a certain domain name is available to be bought.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/1b949804880dfe53deb43c9e7eb860f1.js\"></script><figcaption>isAvailable modifier &#8211; DDNS</figcaption></figure>\n\n\n\n<p>The next thing the <strong>collectDomainNamePayments </strong>modifier that we are going to use as the way for faster check if the user provided the right amount of money for the payment.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/b9bb70959ea119cf895b00e3daf3c38c.js\"></script><figcaption>collectDomainNamePayment modifier for the DDNS implementation</figcaption></figure>\n\n\n\n<p>We need a modifier which we will use for checking whether the transaction initiator (msg.sender) is the owner of the certain domain — <strong>isDomainOwner</strong>.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/f8f89b1ef1eb774e5c75603f8cce1f5a.js\"></script><figcaption>isDomainOwner modifier &#8211; DDNS</figcaption></figure>\n\n\n\n<p>And lastly, we need another two modifiers <strong>isDomainNameLengthAllowed </strong>and <strong>isTopLevelLengthAllowed </strong>for checking if the length of the provided domain name or TLD is allowed respectively.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/333d5a7e530b2014e5cab5b3aaf1b492.js\"></script><figcaption>isDomainNameLengthAllowed modifier</figcaption></figure>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/0d06cf1e8c7224de694205ae25e51f4d.js\"></script><figcaption>isTopLevelLengthAllowed modifier</figcaption></figure>\n\n\n\n<p><strong>State variables and constants</strong></p>\n\n\n\n<p>We are going to add some constants which names speak for what they are actually used for:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/a20d73ba8efabeb67abd6ea0743c448b.js\"></script><figcaption>Constants used in our DDNS smart contract</figcaption></figure>\n\n\n\n<p>and the state variables where we are going to store the domain names, payment receipts:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/73fa911fb71e40b1392c533dfd0c22ff.js\"></script><figcaption>State variables for storing our data in the DDNS</figcaption></figure>\n\n\n\n<p><strong>Events</strong></p>\n\n\n\n<p>Events in Solidity give an abstraction on top of EVM’s (Ethereum Virtual Machine) logging functionality. An application (e.g. our UI) can subscribe to an event and listen for this events.</p>\n\n\n\n<p>Events are defined with a number of parameters and their type. When an event is fired, its arguments are stored in the transaction’s log.</p>\n\n\n\n<p>Notice the <strong><em>indexed </em></strong>attribute — in Solidity, you can add up to 3 indexed parameters for an event, which will add them to a special structure called “topic”.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>We will get to this point in part 2 when we create the UI for the dApp.</p></blockquote>\n\n\n\n<p>For now, let us just add an event for every action that we are taking on our smart contract. That would be logging that a certain domain name was registered, also log if a domain was renewed. We will add an event for logging domain edits and transfers of a domain ownership. Lastly, we log the <em>money </em>operations and receipt issuing.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/c8f178e98976d57828add23e21710d1f.js\"></script><figcaption>Defined events for the DDNS project implementations</figcaption></figure>\n\n\n\n<h4>Step 4: Implementing functions</h4>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>And now let’s get to the interesting part&nbsp;…</p></blockquote>\n\n\n\n<p>First, we have to implement some functions that are going to help us with our logic, since the logic we’ve been following so far is:</p>\n\n\n\n<ul><li>As we know on the internet we could have domain names that are the same and only the TLD could be different (e.g. <code><strong>hack</strong>.bg</code> and <code><strong>hack</strong>.com</code> )</li><li>We need to have a unique <code>id</code> for each domain name, combined with its TLD.</li><li><strong>Solidity is bad with string manipulation</strong></li></ul>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>The key concept regarding the type <code>string</code> is that this is an array of UTF-8 characters, and can be seamlessly converted to <code>bytes</code>. This is the only way of manipulating the string at all. But it is important to note that UTF-8 characters do not exactly match bytes. The conversion in either direction will be accurate, but there is not an immediate relation between each byte index and the corresponding string index.<br>For most things, there may be an advantage in representing the string directly as the type <code>bytes</code> (avoiding conversions)&nbsp;…</p></blockquote>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p><strong>Solution</strong>: we create a <strong><em>pure</em></strong> function for calculating the unique hash for provided the domain and topLevel called <strong><em>getDomainHash</em></strong>. It will basically calculate the hash (keccak256) of the provided domain name + its TLD.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/0b8d62c698b0e5bf157be3c5dae41c16.js\"></script><figcaption>getDomainHash — calculate the keccak256 hash of domain + TLD for the DDNS</figcaption></figure>\n\n\n\n<p>By using this function we will be able to get the unique identifier for every domain name.</p>\n\n\n\n<p>Following the same logic — we need a unique <code>id</code> or <code>serialNumber</code> for the payment receipts that we issue — function <strong><em>getReceiptKey</em></strong>:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/aeb598abcb0fa6349be9ee7acc5a9e6e.js\"></script><figcaption>Calculate the receipt serial number/key — used as unique id for DDNS purposes</figcaption></figure>\n\n\n\n<p>* Probably you’ve noticed that these two functions we’ve already referred in the modifiers definitions.</p>\n\n\n\n<p>And a price checker for the provided domain name, since we are going to use this functionality very frequently:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/ce0e5b8442cc9034bb468d9500bf69b1.js\"></script><figcaption>Domain name price checker function — DDNS</figcaption></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>… the real deal&nbsp;…</p></blockquote>\n\n\n\n<p><strong>Register a domain name on the decentralized DNS</strong></p>\n\n\n\n<p>We continue with the register domain function — which is probably the most complex of all functions due to our requirements.</p>\n\n\n\n<p>A short explanation of the function below — when a user wants to register a domain name, he passes the <strong>domain</strong>, <strong>TLD</strong> and <strong>IP</strong>, and provides a <em>payment</em> for the domain.</p>\n\n\n\n<p>According to our requirements, some conditions should be met and that is why we’ve created some modifiers earlier at the beginning of this tutorial. They are going to help us to reuse the conditions checks when needed.</p>\n\n\n\n<p>The first thing you notice is that the function is <strong><em>payable —</em></strong>this is required if we want to collect payment in this function, and then we are using</p>\n\n\n\n<ul><li><em>isDomainNameLengthAllowed — </em>checks whether the provided domain’s name length is allowed.</li><li><em>isTopLevelLengthAllowed — </em>checks whether the provided TLD length is allowed.</li><li><em>isAvailable</em> — checks if the domain name is available to be registered (e.g. is it not bought already or if it is expired).</li><li><em>collectDomainNamePayment</em> — checks what is the required amount of ETH to be sent to buy this domain name, according to the conditions for the length of the name. And collects the payment if the user has provided the needed value.</li></ul>\n\n\n\n<p>modifiers.</p>\n\n\n\n<p>If some of the conditions in the modifiers are not met, the contract will stop executing and fire an error message, provided in the <strong><em>require() </em></strong>methods in our modifiers.</p>\n\n\n\n<p>So if everything is OK, we are continuing with the execution of the function (line 19–67):</p>\n\n\n\n<ul><li>What is the logic here?</li></ul>\n\n\n\n<p>We calculate the domain hash, create a domain object, that we store in the storage, then we issue and store a payment receipt and fire two events receipt issuing and domain registration respectively.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/038d4aa4ddad25cc0917228168f50b72.js\"></script><figcaption>Register domain function — DDNS (decentralized domain name system)</figcaption></figure>\n\n\n\n<p><strong>Renew domain name</strong></p>\n\n\n\n<p>This function is similar to the register domain name function — it does the same thing basically, with the only difference of updating the <em>expires </em>property of the requested domain name with 1 year (365 days).</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/69d7b9f1ca8674457db380723710aa71.js\"></script><figcaption>Renew Domain Name — DDNS</figcaption></figure>\n\n\n\n<p><strong>Edit domain name</strong></p>\n\n\n\n<p>For the edit domain name, according to the requirements, we should have the ability to update the IP address that the domain is pointing to and that should be a free operation (excluding gas costs).</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/9ff2f66540210c858854dd4e84e8ec5d.js\"></script><figcaption>Edit domain name function — DDNS</figcaption></figure>\n\n\n\n<p><strong>Transfer domain</strong></p>\n\n\n\n<p>Transferring the domain name ownership is a trivial task as you’ve probably guessed. There are only a few things that are worth mentioning here:</p>\n\n\n\n<ul><li>first, we check with the <strong><em>isDomainOwner</em></strong> modifier if the transaction initiator (msg.sender) is the owner of the domain</li><li>second, important thing we do is to check whether the new owner’s address is not set to 0x0 address — to prevent domain ownership loss</li><li>the rest is easy — get the domain unique id &gt; update the ownership property with new owner’s address &gt; log the change.</li></ul>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/974b7f5bf5bb37e6458b507ce73840d3.js\"></script><figcaption>Transfer domain name ownership — DDNS</figcaption></figure>\n\n\n\n<p><strong>Getters</strong></p>\n\n\n\n<p>We need to have few getters for accessing the data stored on the blockchain and also for the UI later.</p>\n\n\n\n<p>We will implement functions for getting the current IP of a domain is pointed to — <strong><em>getIp</em></strong>, a function to get the list or receipt <g class=\"gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del\" id=\"3\" data-gr-id=\"3\">ids</g> for certain account &#8211;<strong><em>getReceiptList</em></strong>, and a single receipt details getter — <strong><em><g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"5\" data-gr-id=\"5\">getReceipt</g>.</em></strong></p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/c8dfeaba171d832401c4464d58014ae0.js\"></script><figcaption>Get IP of the provided domain — DDNS</figcaption></figure>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/94b09d8d718dd1cbf450e238a11d1754.js\"></script><figcaption>Get receipt list function — DDNS</figcaption></figure>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/d543b1cb9a724489edca06cdc9a7ce4b.js\"></script><figcaption>Get single receipt details function — DDNS</figcaption></figure>\n\n\n\n<p><strong>Withdraw</strong></p>\n\n\n\n<p>Finally, we want to have a function which is allowing the owner of the decentralized domain name system to be able to withdraw the ETH (funds) collected from domain registration/renewal payments.</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/bed65a6e4f29cf050d004888f85b86be.js\"></script><figcaption>Withdraw function — DDNS</figcaption></figure>\n\n\n\n<h4>Finally — here is our smart contract:</h4>\n\n\n\n<p>And here’s the whole smart contract for the DDNS:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/e4d9407e2ccfacb8a0b4f8f821ddf55d.js\"></script><figcaption>Decentralized Domain Name System &#8211; Smart Contract</figcaption></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you are interested in seeing the whole project in action — you can check the whole working project — <a href=\"https://github.com/mradkov/decentralized-dns\" rel=\"noreferrer noopener\" target=\"_blank\">decentralized DNS</a> in Github.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Stay tuned! Part two and three where we will be focusing on unit tests and UI implementation of the decentralized domain name system (DDNS) are coming soon&nbsp;…</p></blockquote>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>Continue&nbsp;…</h3>\n\n\n\n<ul><li>Part two: Unit testing and deploying</li><li>Part three: Building user interface (UI) for our dApp</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>Useful links</h3>\n\n\n\n<p>If you want to be informed for our next events and meet-ups — join us:</p>\n\n\n\n<p><strong>Blockchain Developers Meet-up Group</strong>:<a href=\"https://meetup.com/Blockchain-Developers-Meetup-Bulgaria\"><strong>Blockchain Developers Meet-up (Bulgaria)</strong><br><em>In this group, we will share knowledge about blockchain and smart contract development. We will talk about Ethereum…</em>meetup.com</a></p>\n\n\n\n<p><strong>Blockchain Developers Facebook Group</strong>:<a href=\"https://www.facebook.com/groups/BlockchainDevelopersMeetup\"><strong>Log into Facebook | Facebook</strong><br><em>Log into Facebook to start sharing and connecting with your friends, family, and people you know.</em>www.facebook.com</a></p>\n\n\n\n<p><strong>Follow us on social media:</strong></p>\n\n\n\n<ul><li><a href=\"https://twitter.com/hack_bg\" rel=\"noreferrer noopener\" target=\"_blank\">Twitter</a></li><li><a href=\"https://facebook.com/hackbg\" rel=\"noreferrer noopener\" target=\"_blank\">Facebook</a></li><li><a href=\"https://www.linkedin.com/company/hackbg-blockchain-web-software-solutions/\" rel=\"noreferrer noopener\" target=\"_blank\">LinkedIn</a></li></ul>\n","excerpt":"<p>Intro Nowadays it is quite popular to build a decentralized application (dApp). If you are familiar with the blockchain smart contracts development and you’ve already developed something cool, probably there is no need for me to tell you that in this field the demand for good developers is quite high. But for you to be [&hellip;]</p>\n","categories":[{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}}]}}},"context":{}}