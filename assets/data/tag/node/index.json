{"hash":"4d4e9c5907444b026e43a64dd24660bb5eaf59e2","data":{"tag":{"title":"Node","belongsTo":{"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"date":"2021-01-28T15:00:48","id":"2592","title":"Running full Bitcoin node over Tor on Ubuntu","path":"/blog/running-full-bitcoin-node-over-tor-on-ubuntu/","content":"\n<h2>00. Why run Bitcoin node? Why Tor?</h2>\n\n\n\n<h3>Why Bitcoin full node?</h3>\n\n\n\n<p>A full node allows you to participate in the verification of all the transactions and blocks in the Bitcoin network and <a href=\"https://hack.bg/dlt-blockchain-development-services/blockchain-software-development/\" class=\"rank-math-link\">blockchain</a>. Almost all of the full nodes participate in this validation process and relay the transactions and blocks to other nodes they &#8220;know&#8221; (are connected to).</p>\n\n\n\n<p>Running a full node helps Bitcoin&#8217;s peer-to-peer network grow and be more decentralized, so clients won&#8217;t have to rely on centralized services for querying the network or transmitting transactions.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Many people and organizations volunteer to run full nodes using spare computing and bandwidth resourcesâ€”but more volunteers are needed to allow Bitcoin to continue to grow. This document describes how you can help and what helping will cost you. </p><cite>https://bitcoin.org/en/full-node#what-is-a-full-node</cite></blockquote>\n\n\n\n<p>Following few steps you will be able to setup a bitcoin full node running on the Tor network (privacy matters).</p>\n\n\n\n<h3>Why run on Tor?</h3>\n\n\n\n<p>Bitcoin is said to be many things, amongst them anonymity is one of the features to stand out. It is not entirely true the transactions in the network are anonymous, rather pseudonymous, and while it is true that a transaction does not identify a user or wallet, there is a potential for privacy to be partially undermined, by methods that could identify the IP address of a transaction originator.</p>\n\n\n\n<p>So if you care about your digital privacy &#8211; keep reading. ðŸ¥·</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong>Tor</strong>&nbsp;is&nbsp;<a href=\"https://en.wikipedia.org/wiki/Free_and_open-source_software\">free and open-source software</a>&nbsp;for enabling&nbsp;<a href=\"https://en.wikipedia.org/wiki/Anonymity\">anonymous communication</a>&nbsp;by directing Internet traffic through a free, worldwide, volunteer&nbsp;<a href=\"https://en.wikipedia.org/wiki/Overlay_network\">overlay network</a>&nbsp;consisting of more than seven thousand relays<sup><a href=\"https://en.wikipedia.org/wiki/Tor_(anonymity_network)#cite_note-torstatus-6\">[6]</a></sup>&nbsp;in order to conceal a user&#8217;s location and usage from anyone conducting&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_and_network_surveillance#Network_surveillance\">network surveillance</a>&nbsp;or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Traffic_analysis#In_computer_security\">traffic analysis</a>. Using Tor makes it more difficult to trace the Internet activity to the user: this includes &#8220;visits to Web sites, online posts, instant messages, and other communication forms&#8221;.<sup><a href=\"https://en.wikipedia.org/wiki/Tor_(anonymity_network)#cite_note-nyt-navels-7\">[7]</a></sup>&nbsp;Tor&#8217;s intended use is to protect the personal privacy of its users, as well as their freedom and ability to conduct confidential communication by keeping their Internet activities unmonitored.</p><cite>https://en.wikipedia.org/wiki/Tor_(anonymity_network)</cite></blockquote>\n\n\n\n<h2>01. Setup SSH</h2>\n\n\n\n<p>If you are using a VPS or other cloud machine which you can access via SSH, or your machine already has SSH enabled you can skip this step.</p>\n\n\n\n<p>Both <a class=\"rank-math-link\" href=\"http://ubuntu.com/\">Ubuntu</a> 20.04 LTS Desktop and Server come without SSH service enabled by default, which we need to be able to access remotely our machine, but you can easily enable it by just one command.&nbsp;</p>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo apt-get install openssh-server</code></pre>\n\n\n\n<p>This command will install <a href=\"http://www.openssh.org/\" class=\"rank-math-link\">OpenSSH</a>, which provides free SSH connectivity tools and supports all SSH protocol versions. OpenSSH encrypts all the traffic to eliminate possible eavesdropping, connection hijacking, and other attacks.</p>\n\n\n\n<p>Note: The default port for SSH is 22, but you can configure it to run on a port of your choice by editing the config file at <code>/etc/ssh/sshd_config</code>, and apply the changes by restarting the service <code>sudo /etc/init.d/ssh restart</code>.</p>\n\n\n\n<p>If you have UFW firewall running on your machine, you will need to allow incoming SSH connections. Type the following command:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo ufw allow ssh</code></pre>\n\n\n\n<p>After running it you should see the output below.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Output\nRules updated\nRules updated (v6)</code></pre>\n\n\n\n<p>Note: If you changed the default SSH port (22) to a custom port, you will need to open that port instead.</p>\n\n\n\n<p>For example, if your ssh daemon listens on port&nbsp;<code>4242</code>, then you can use the following command to allow connections on that port:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo ufw allow 4242/tcp</code></pre>\n\n\n\n<p>Once we are setup with the SSH configuration we can proceed to the real deal.</p>\n\n\n\n<h2>02. Install packages</h2>\n\n\n\n<p>We need to install some packages needed for compilation of bitcoin&#8217;s source code.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo apt-get update\nsudo apt-get upgrade\nsudo add-apt-repository universe</code></pre>\n\n\n\n<p>It&#8217;s possible this is already added, so you might see something like <code>'universe' distribution component is already enabled for all sources.</code> If so &#8211; just ignore it and proceed further.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo apt-get install build-essential autoconf libtool pkg-config libboost-all-dev libssl-dev libevent-dev doxygen libzmqpp-dev libdb++-dev</code></pre>\n\n\n\n<h2>03. Install BerkelyDB</h2>\n\n\n\n<p>Bitcoin Core is still using BerkleyDB 4.8.30 because of backward compatibility. Using a newer versions makes the wallet incompatible with older versions, making downgrade impossible (or at least difficult).</p>\n\n\n\n<p>We can do this manually by downloading it via `wget`.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz</code></pre>\n\n\n\n<p>Then verifying the hash of the file:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef db-4.8.30.NC.tar.gz' | sha256sum -c</code></pre>\n\n\n\n<p>Extracting the archive:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>tar -xvf db-4.8.30.NC.tar.gz</code></pre>\n\n\n\n<p>Configure and build the BerkleyDB for unix</p>\n\n\n\n<pre class=\"wp-block-code\"><code>cd db-4.8.30.NC/build_unix</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>mkdir -p buildBDB_PREFIX=$(pwd)/build../dist/configure --disable-shared --enable-cxx --with-pic --prefix=$BDB_PREFIX</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>make install</code></pre>\n\n\n\n<p>The above may fail with an error similar to this one.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>In file included from ../dist/../dbinc/mutex_int.h:12, from ../dist/../dbinc/mutex.h:15, from ./db_int.h:884, from ../dist/../cxx/cxx_db.cpp:11: ../dist/../dbinc/atomic.h:179:19: error: definition of â€˜int __atomic_compare_exchange(db_atomic_t*, atomic_value_t, atomic_value_t)â€™ ambiguates built-in declaration â€˜bool __atomic_compare_exchange(long unsigned int, volatile void*, void*, void*, int, int)â€™ 179 | static inline int __atomic_compare_exchange(</code></pre>\n\n\n\n<p>If so you will need to apply some patches for C++11 which are required for the build. The developers at bitcoin have provided a nice shell script which does the downloading, verification and installation of those automatically here <code>https://github.com/bitcoin/bitcoin/blob/master/contrib/install_db4.sh</code>.</p>\n\n\n\n<p>So you can fetch and run it like so:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>wget https://raw.githubusercontent.com/bitcoin/bitcoin/master/contrib/install_db4.sh\nchmod +x install_db4.sh\n./install_db4.sh .</code></pre>\n\n\n\n<p>After few minutes you should see a message including <code>db4 build complete.</code> </p>\n\n\n\n<p>You should also see some more info about flags which you should use for compiling bitcoind (don&#8217;t worry if you did not copy those &#8211; you will find them below).</p>\n\n\n\n<h2>04. Compile Bitcoin</h2>\n\n\n\n<p>In order to compile bitcoin, we first need to clone the source code repository from Github. </p>\n\n\n\n<pre class=\"wp-block-code\"><code>git clone https://github.com/bitcoin/bitcoin.git</code></pre>\n\n\n\n<p>We want to checkout a version tag so we don&#8217;t run into problems, building from the <code>master</code> branch, as there the developers are constantly pushing new code.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>cd bitcoin\ngit checkout v0.21.0\ngit status</code></pre>\n\n\n\n<p>After checking out the release tag and running the status check you should see this message:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>HEAD detached at v0.21.0\nnothing to commit, working tree clean</code></pre>\n\n\n\n<p>Now it&#8217;s time for us to build the code.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>./autogen.sh</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>export BDB_PREFIX='${BDB_PREFIX}'\n./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\"</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>make\nmake check\nsudo make install</code></pre>\n\n\n\n<p>We now have successfully compiled bitcoin! ðŸš€ðŸ”¥ðŸŽ‰</p>\n\n\n\n<h2>05. Configure Bitcoin to use Tor</h2>\n\n\n\n<p id=\"block-38be3746-3589-4fa3-a065-8cd02e28d84d\">Before staring syncing the blockchain history we need to configure some settings for our bitcoin node.</p>\n\n\n\n<pre id=\"block-38be3746-3589-4fa3-a065-8cd02e28d84d\" class=\"wp-block-code\"><code>cd ~\nmkdir .bitcoin\ntouch .bitcoin/bitcoin.conf\necho \"txindex=1\" >> .bitcoin/bitcoin.conf</code></pre>\n\n\n\n<p>Setting up <code>txindex=1</code> will make Bitcoin rescan the whole blockchain and rebuild the whole database. This can take several days depending on your hardware and internet connection.</p>\n\n\n\n<p>If Tor is properly setup in our system bitcoind will be able to communicate to other nodes over Tor network, otherwise it will default for communication over TCP. As we care about our privacy we want to explicitly forbid communication over TCP and allow it to only use Tor. </p>\n\n\n\n<pre class=\"wp-block-code\"><code>echo \"onlynet=onion\" >> .bitcoin/bitcoin.conf</code></pre>\n\n\n\n<p>Setup a maximum number of inbound + outbound connections the node can use, so it does not drain your bandwidth.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>echo \"maxconnections=20\" >> .bitcoin/bitcoin.conf</code></pre>\n\n\n\n<p>As already mentioned the initial bitcoin blockchain download takes few days to weeks and using Tor will make this time longer as the Tor network is a bottleneck. One reason for that is due to low-bandwidth volunteer-operated Tor routers, but with wider adoption and volunteers running nodes this will change.</p>\n\n\n\n<p>Installing Tor on Ubuntu is pretty straightforward and easy:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo apt install tor</code></pre>\n\n\n\n<p>After the installation is complete we need to check the configuration and ensure we have all of these configurations in <code>/usr/share/tor/tor-service-defaults-torrc</code></p>\n\n\n\n<pre class=\"wp-block-code\"><code>ControlPort 9051\nCookieAuthentication 1\nCookieAuthFileGroupReadable 1</code></pre>\n\n\n\n<p>To view the file we can use <code>less</code>:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>less /usr/share/tor/tor-service-defaults-torrc</code></pre>\n\n\n\n<p>In case any of those configuration settings is missing, use `echo` to add it to the file:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo sh -c \"echo 'ControlPort 9051' >> /usr/share/tor/tor-service-defaults-torrc\"</code></pre>\n\n\n\n<pre id=\"block-38be3746-3589-4fa3-a065-8cd02e28d84d\" class=\"wp-block-preformatted\">If you did edit the file, make sure to restart the Tor service:</pre>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo /etc/init.d/tor restart</code></pre>\n\n\n\n<p>Next step is to allow <code>bitcoind</code> to access to Tor, by adding it to that user group. Replace <code>username</code> with the Ubuntu account username you are operating under.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo usermod -a -G debian-tor username</code></pre>\n\n\n\n<p>Finally we can launch Bitcoin over Tor: ðŸ™ŒðŸ¥³</p>\n\n\n\n<pre class=\"wp-block-code\"><code>bitcoind -daemon</code></pre>\n\n\n\n<p>We can follow the logs and monitor progress of the node syncing using <code>tail</code>:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>tail -f ~/.bitcoin/debug.log</code></pre>\n\n\n\n<p>Fetching <code>getnetworkinfo</code> should result in IPv4 and IPv6 flags set to <code>false</code> and Tor to `true`. This will ensure us that we are operating our node privately.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>bitcoin-cli getnetworkinfo</code></pre>\n\n\n\n<p>Furthermore, after the sync, we can use <code>bitcoin-cli</code> for querying information for the network status, connections and transaction and blocks information. Get peer info:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>bitcoin-cli getpeerinfo | grep true</code></pre>\n\n\n\n<p>Inspect a raw transaction:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>bitcoin-cli getrawtransaction 0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098</code></pre>\n\n\n\n<p>And inspect the raw output:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0704ffff001d0104ffffffff0100f2052a0100000043410496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858eeac00000000</code></pre>\n\n\n\n<h2 id=\"block-26b33e98-5d62-4b3f-901c-2970218ead0e\">References and resources</h2>\n\n\n\n<ul><li><a href=\"https://github.com/bitcoin/bitcoin/blob/master/contrib/install_db4.shâ€¨\" class=\"rank-math-link\">https://github.com/bitcoin/bitcoin/blob/master/contrib/install_db4.sh</a></li><li><a href=\"https://github.com/bitcoin/bitcoin/issues/18846â€¨\" class=\"rank-math-link\">https://github.com/bitcoin/bitcoin/issues/18846</a></li><li><a href=\"https://github.com/bitcoin/bitcoin/blob/master/depends/packages/bdb.mk#L17â€¨\" class=\"rank-math-link\">https://github.com/bitcoin/bitcoin/blob/master/depends/packages/bdb.mk#L17</a></li><li><a href=\"https://bitcoin.stackexchange.com/questions/79758/bitcoin-built-with-a-newer-berkeley-database-incompatible-with-a-older-walletâ€¨\" class=\"rank-math-link\">https://bitcoin.stackexchange.com/questions/79758/bitcoin-built-with-a-newer-berkeley-database-incompatible-with-a-older-wallet</a></li><li><a href=\"https://8bitcoin.medium.com/how-to-run-a-bitcoin-full-node-over-tor-on-an-ubuntu-linux-virtual-machine-bdd7e9415a70â€¨\" class=\"rank-math-link\">https://8bitcoin.medium.com/how-to-run-a-bitcoin-full-node-over-tor-on-an-ubuntu-linux-virtual-machine-bdd7e9415a70</a></li><li><a href=\"https://github.com/bitcoinbook/bitcoinbook/blob/develop/ch03.asciidocâ€¨\" class=\"rank-math-link\">https://github.com/bitcoinbook/bitcoinbook/blob/develop/ch03.asciidoc</a></li><li><a href=\"https://www.reddit.com/r/Bitcoin/comments/4y7nc3/create_bitcoin_full_node_with_tor_step_by_step/?st=j5n7z1q1&amp;sh=392084c9\" class=\"rank-math-link\">https://www.reddit.com/r/Bitcoin/comments/4y7nc3/create_bitcoin_full_node_with_tor_step_by_step/?st=j5n7z1q1&amp;sh=392084c9</a></li></ul>\n","excerpt":"<p>00. Why run Bitcoin node? Why Tor? Why Bitcoin full node? A full node allows you to participate in the [&hellip;]</p>\n","categories":[{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen","path":"/author/milen/"}}}]}}},"context":{}}