{"hash":"e72ccad6d09faf78d91aa15ab1afc178786ca93b","data":{"tag":{"title":"Decentralized Applications","belongsTo":{"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"date":"2020-03-29T21:36:50","id":"1667","title":"From zero to a fully-fledged aeternity decentralized application in less than 10 minutes","path":"/blog/from-zero-to-fully-fledged-decentralized-application-in-less-than-10-minutes/","content":"\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"1024\" height=\"453\" src=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-1024x453.png\" alt=\"\" class=\"wp-image-1775\" srcset=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-1024x453.png 1024w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-300x133.png 300w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-768x340.png 768w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.38.18-2-1038x459.png 1038w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure>\n\n\n\n<h2>Intro</h2>\n\n\n\n<p>Let&#8217;s be honest and put the cards down &#8211; if you really need to build a production-ready decentralized application 10 minutes won&#8217;t be nearly enough for sure, and if you are not familiar with the technology you might need some assistance with the <a href=\"https://hack.bg/dlt-blockchain-development-services/smart-contracts-development/\">smart contracts development</a> and setup.  </p>\n\n\n\n<p>Developing such a <a href=\"https://hack.bg/dlt-blockchain-development-services/decentralized-applications-development/\">decentralized application</a> will be a combination of planning and structuring the architecture of the project, drafting and designing the user interface (UI), writing, testing and deploying the smart contracts needed for the dapp to run its business logic … and combining all this together. This also involves a wide variety of technology stack options, depending on the desired outcome and use-case.</p>\n\n\n\n<p>For the purpose of this tutorial though, we will develop an app from scratch to a working decentralized application on aeternity blockchain with a simple frontend.</p>\n\n\n\n<p>Now let the timer start:</p>\n\n\n\n<h3>1. Initialize our project</h3>\n\n\n\n<p>We will use the <a href=\"https://github.com/aeternity/aepp-aeproject-js\">aeproject</a> tool which will allow us to easily set up the development environment locally.</p>\n\n\n\n<ul><li>dependencies<ul><li>docker</li><li>npm &amp; node</li></ul></li></ul>\n\n\n\n<p>Install globally</p>\n\n\n\n<pre class=\"wp-block-code\"><code>npm install -g aeproject</code></pre>\n\n\n\n<p>Initialize project</p>\n\n\n\n<pre class=\"wp-block-code\"><code>aeproject init</code></pre>\n\n\n\n<h3>2. Write our smart contract(s)</h3>\n\n\n\n<p>In this step, we will develop a simple smart contract that is only storing an integer (number) in its state on the blockchain.</p>\n\n\n\n<p>Let&#8217;s also add a getter method which will allow us to read from the contract state.</p>\n\n\n\n<p>Usually, we will do something like this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>@compiler >= 4\n\ncontract MyContract =\n   record state = { number: int }\n   entrypoint init() : state = { number = 0 }\n   stateful entrypoint set(x: int) = put(state{number = x})\n   stateful entrypoint get() : int = state.number</code></pre>\n\n\n\n<p>In our case, we can further simplify our contract since we are only storing a single integer value. As we know Sophia contracts have restricted mutable state and it is a strongly typed language so we need to define it initially.</p>\n\n\n\n<p>In this case, we can define our <code>state</code> to be of <code>type</code> <code>int</code> as we don&#8217;t need the whole <code>record</code> structure for this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>@compiler >= 4\n\ncontract MyContract =\n   type state = int\n   entrypoint init() : state = 0\n   stateful entrypoint set(x: int) = put(x)\n   stateful entrypoint get() : int = state</code></pre>\n\n\n\n<p>Here is the same contract, written in Solidity, on Ethereum blockchain just for comparison if you are more familiar with Solidity &#8230; or not:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pragma solidity >=0.5.0 &lt;0.6.0; \n\ncontract MyContract {\n    uint256 number;\n    constructor() public {\n        number = 0;\n    }\n    function set(uint256 _number) public {\n        number = _number;\n    }\n    function get() public view returns (uint256) {\n        return number;    \n    }\n}</code></pre>\n\n\n\n<h3>3. Deploy</h3>\n\n\n\n<p>In order for us to deploy to an actual <code>testnet</code> or <code>mainnet</code> we need to have some AE tokens on the selected network, so we can pay the mining fee for the transactions we will make to the blockchain.</p>\n\n\n\n<p>Note: We could also deploy it on a local testnet which can be started via <code>aeproject node</code></p>\n\n\n\n<h4>3.1. Create a wallet</h4>\n\n\n\n<p>If we do not yet have a wallet which will be used for deployment we need to generate ourselves one:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>aecli account create &lt;WALLET_NAME></code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>Note: To quickly test all of Aeternity's blockchain features from your Terminal, you can Install and use our NodeJS CLI by running:\n\nnpm i -g @aeternity/aepp-cli\naecli --help</code></pre>\n\n\n\n<h4>3.2. Fund the wallet</h4>\n\n\n\n<p>We will get some testnet AE tokens from the <a href=\"https://faucet.testnet.aepps.com\">faucet</a>, so we can deploy the contract.</p>\n\n\n\n<h4>3.3. Get our private key</h4>\n\n\n\n<p>We are going to be deploying via the command-line interface (CLI), so we will need to have our private key to pass it to the deployer.</p>\n\n\n\n<p>Get our private key:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>aecli account address &lt;WALLET_NAME> --privateKey</code></pre>\n\n\n\n<h4>3.4. Deploy to testnet</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>aeproject deploy -n testnet -s &lt;SECRET_KEY> --compiler https://latest.compiler.aepps.com</code></pre>\n\n\n\n<h3>4. Interaction with the contract</h3>\n\n\n\n<p>There are multiple we can interact with our contract. The first and most easier is to use one of the online IDEs available out there &#8211; contracts.aeternity.art, fireeditor etc.</p>\n\n\n\n<h4>4.1. Online IDE.</h4>\n\n\n\n<ol><li>contracts.aeternity.art &#8211; we put our contract code in the editor and we can access our contract by adding the address in the <code>&lt;Address&gt;</code> field so we can interact with it.<br> <code>set</code> &#8211; for setting a new value in the smart contract we have to make a stateful call (which modifies the state and costs gas)<br><code>get</code> &#8211; our getter we can access by calling static function.<br></li><li>fireeditor.nikitafuchs.de &#8211; Same as above we can put our contract code and access the freshly deployed contract <strong>at address</strong>.<br></li></ol>\n\n\n\n<h4>4.2. via the SDK</h4>\n\n\n\n<p>We can access our contract instance via this simple command and start interacting with it.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>await sdk.getContractInstance(CONTRACT_SOURCE, { contractAddress: OUR_CONTRACT_ADDRESS} );</code></pre>\n\n\n\n<p>Of course we will first have to set up our project and intialize the SDK there.</p>\n\n\n\n<h3>5. Fully-fledged Decentralized app</h3>\n\n\n\n<h4>5.1. Set up frontend</h4>\n\n\n\n<p>In order to setup our simple fronted we will use the waellet boilerplate repo which is pre-configured to communicate with the waellet extension and has the aeternity javascript sdk already prepared there. </p>\n\n\n\n<pre class=\"wp-block-code\"><code>git clone https://github.com/waellet/waellet-aepp-boilerplate &amp;&amp; cd\nnpm install</code></pre>\n\n\n\n<h4>5.2. Add the contract interface (or the full contract code)</h4>\n\n\n\n<p>We need to add our contract interface in the app, so we can call the correct methods and encode the transactions properly. This is similar to the ABI in Solidity for example.</p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"1024\" height=\"460\" src=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-1024x460.png\" alt=\"\" class=\"wp-image-1763\" srcset=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-1024x460.png 1024w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-300x135.png 300w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-768x345.png 768w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25-1038x466.png 1038w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-19-at-8.06.25.png 1310w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>https://github.com/waellet/waellet-aepp-boilerplate/blob/23419a910f668069990f96b775bd119aba70f8d3/src/views/Home/Index.vue#L204-L216</figcaption></figure>\n\n\n\n<h4>5.3. Setup function calls </h4>\n\n\n\n<p>We also need to setup the contract methods calls in the app. </p>\n\n\n\n<h4>5.4. run</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>npm run serve</code></pre>\n\n\n\n<p>We can now access our app at <code>localhost:3000</code>:</p>\n\n\n\n<p>We can interact with the contract with the two sample buttons there.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"909\" src=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-1024x909.png\" alt=\"\" class=\"wp-image-1769\" srcset=\"https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-1024x909.png 1024w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-300x266.png 300w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-768x682.png 768w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41-649x576.png 649w, https://hack.bg/wp-content/uploads/2020/03/Screenshot-2020-03-29-at-21.30.41.png 1376w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure></div>\n","excerpt":"<p>Intro Let&#8217;s be honest and put the cards down &#8211; if you really need to build a production-ready decentralized application 10 minutes won&#8217;t be nearly enough for sure, and if you are not familiar with the technology you might need some assistance with the smart contracts development and setup. Developing such a decentralized application will [&hellip;]</p>\n","categories":[{"id":"53","title":"Tech Talks","path":"/category/blockchain-tech-talks/"},{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}},{"node":{"date":"2019-09-30T12:41:23","id":"1604","title":"0x0e. Building dApps on top of DeFi (Decentralized Finance) &#8211; Blockchain Developers Meetup","path":"/blog/0x0e-building-dapps-on-top-of-defi-decentralized-finance-blockchain-developers-meetup/","content":"\n<p>We are deeply moved by our last night meetup and the possibilities that have been discussed on what can be built on top of existing decentralized finance applications. I will try my best to summarise the informative and inspiring talk of our guest speaker <a href=\"https://www.linkedin.com/in/tito-titov-2578a6a9/\">Tito Titov</a> from <a href=\"https://www.weidex.market/\">WeiDex</a> for those of you who have missed the chance to be with us in the room.</p>\n\n\n\n<p>But first let’s go through the monthly overview of important dev news and updates, that were presented by hack&#8217;s CEO <a href=\"https://www.linkedin.com/in/milenradkov/\">Milen Radkov</a>.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"768\" height=\"1024\" src=\"https://hack.bg/wp-content/uploads/2019/09/71258583_2336298436635243_4136799112370585600_n-768x1024.jpg\" alt=\"\" class=\"wp-image-1605\" srcset=\"https://hack.bg/wp-content/uploads/2019/09/71258583_2336298436635243_4136799112370585600_n-768x1024.jpg 768w, https://hack.bg/wp-content/uploads/2019/09/71258583_2336298436635243_4136799112370585600_n-225x300.jpg 225w, https://hack.bg/wp-content/uploads/2019/09/71258583_2336298436635243_4136799112370585600_n-432x576.jpg 432w\" sizes=\"(max-width: 768px) 100vw, 768px\" /><figcaption>Milen Radkov dev news update</figcaption></figure></div>\n\n\n\n<p>As usual the news we grouped by relevance and ecosystem. Milen started with the most important updates in the Ethereum blockchain ecosystem. We got to learn about:</p>\n\n\n\n<ul><li>Geth v.1.9.5 hotfix release</li><li>Gas limit has moved up around<a href=\"http://email.mg2.substack.com/c/eJwlUMuOwyAM_JpyjDDkeeDQdnd_IyLgJqgJRGBa5e-XtJIlyzOy5mE04RziofaQiOWEcXRWwQBtIzmzqrbQNz1zaXxExE27VVHMyPY8rc5ocsF_HngHbFGibZsOGqFr4A8juZHScm2HFurGTtPATpVRZ-vQG1T4wngEj2xVC9GeLvJ6EX9lkBaMyWhfuVBOs-hIZc86rW5zxJwSHAY-CCEkAPAKqmt__-mgbm-yF7ffW3-p-TaLKuUpkTbPyoSNRRW1fYZX4ZYTm-Yzx1ioLXtHx4heTyvab0T6dvKxTMeOyuM7rUiE8QueuUUna8mKig2lHK_eiE_nP_4xb_-asnXU\"> 10m per block</a>, (all time highs in terms of throughput) &#8211; low to mid 30s for possible transactions per second.</li><li>The AZTEC Toolkit: An Introduction to AZTEC Proofs functions<ul><li><strong>Send: </strong>The basic AZTEC transaction, sending assets privately across Ethereum</li><li><strong>Swap: </strong>Allows two entities to trade private assets without counterparty risk</li><li><strong>Dividend:</strong> Distribute private income pro rata to the asset holders</li><li><strong>Mint: </strong>Issue your custom asset</li><li><strong>Burn:</strong> Redeem the asset</li><li><strong>Public Range: </strong>Prove an encrypted number is greater or less than a public number — e.g. proving you are over 18 without revealing your date of birth</li><li><strong>Private Range: </strong>Prove the balance of an asset is greater than another private asset — useful for collateral management in DeFi systems</li></ul></li><li><a href=\"http://email.mg2.substack.com/c/eJw1kMlugzAQhp8mvhV5wWAOPiRtKvVWqQ-AvAxgBWzkJRFvXyiqNNJsmuX_jMowhrjJNaSMSoLYOytJRxrOMLKytkRwgVzqhwiwKDfLHAugtejZGZVd8H8DuCVokliIoWtEy7BogIPlDCg32KiaKEa5RseVXhXrwBuQ8IS4BQ9ollPOa7qw64V-7ja6PBVdmbDsCeQJIpQjvH99p93pOejdcQIagJFuoEoYI6hW3YDrgfC6scJoYjqNm2E4B3-OVW59o1TgarHISYpJhztKKSOE4IpUV_H-0ZK6uTFBb_ebuNR4GWmVik5ZmcfxD4oyKvsIz703HTU9Hiz6vbUU7_LWg1d6BntiyifXP9l5W0F6eKUZcoZ4Fg92tGU1Q_sVG3bAXr4AHs7_y_4FgROIhw\">ERC2280</a>: ERC20 extension for native meta transactions support </li><li>Maker and LoomNetwork creating <a href=\"http://email.mg2.substack.com/c/eJxNkUuOwyAQRE8TdkTm48ResEjmcw2rMT02soEINxP59oOTzUhsqKLo4jEC4ZTybh5pI1Y2zIN3RvTi0qqGOaOd6NqO-W34yYgB_GooF2SPYlc_AvkUX4HmKths-sZe9LXV-gKtGmXfa6lbi6gE6E5gx44pAxTnMY5o8BfzniKy1cxEj-2kbif5XVdA50s4jynUzZpS4BHpmfJyeLD4OHHgoazkxxl85A48rzpmDtHx_wFOidviV_c6M9XXPmHfDpVyitz6CLXJK5ZorheofgTZWCdBOOaNbETf9FJKJYRozuJ86z4-r0Jf7qqT9697d9JNmOR5K3YjGJejM8smg1vSb_XmQ7PTwWuoVijR0z5gBLuie6OkN_sXGtofaCI-txWJML_Fg6-8Kq1YneJS_YRonogVAx6VsYQ_kbObQA\">bridges to take Dai</a> to other chains</li></ul>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"762\" src=\"https://hack.bg/wp-content/uploads/2019/09/71141746_2417569425169162_2999787652686807040_n-1024x762.jpg\" alt=\"\" class=\"wp-image-1606\" srcset=\"https://hack.bg/wp-content/uploads/2019/09/71141746_2417569425169162_2999787652686807040_n-1024x762.jpg 1024w, https://hack.bg/wp-content/uploads/2019/09/71141746_2417569425169162_2999787652686807040_n-300x223.jpg 300w, https://hack.bg/wp-content/uploads/2019/09/71141746_2417569425169162_2999787652686807040_n-768x571.jpg 768w, https://hack.bg/wp-content/uploads/2019/09/71141746_2417569425169162_2999787652686807040_n-774x576.jpg 774w, https://hack.bg/wp-content/uploads/2019/09/71141746_2417569425169162_2999787652686807040_n.jpg 2000w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption> Milen Radkov dev news update </figcaption></figure></div>\n\n\n\n<p>On another slide, we got to learn about recent developments in the aeternity ecosystem. Being involved in the project and working closely with aeternity developers is giving us a direct overview of their work. Milen shared what&#8217;s new in :</p>\n\n\n\n<ul><li>Waellet &#8211; v0.1.4 beta<ul><li>Added options to contractCalls from Aepp()</li><li>An aepp boilerplate at &#8211; boilerplate.waellet.com</li><li>BIP39 issue fix</li><li>AEX-2 compatibility</li></ul></li><li>AE SDK JS v4.7.0<ul><li>Oracle: Add methods for polling queries <a href=\"https://github.com/aeternity/aepp-sdk-js/pull/637\">#637</a></li><li>Chain: Add getBalance method (<a href=\"https://github.com/aeternity/aepp-sdk-js/issues/655\">#655</a>) (<a href=\"https://github.com/aeternity/aepp-sdk-js/commit/15147af\">15147af</a>)</li><li>state channels: add reconnect method (<a href=\"https://github.com/aeternity/aepp-sdk-js/issues/662\">#662</a>) (<a href=\"https://github.com/aeternity/aepp-sdk-js/commit/9d8d1e8\">9d8d1e8</a>)</li><li>state channels: add backchannel updates test<a href=\"https://github.com/aeternity/aepp-sdk-js/pull/664\">#664</a></li></ul></li><li>Base Aepp &#8211; v0.10.1 &amp; v0.10.2 updates and bugfixes<ul><li>Language updates</li><li>Removed intro overlays for Browser and Names tabs</li><li>Extension removed from rendering of names</li><li>Fixed rendering of transactions list</li><li>Fixed language switch in transactions list</li></ul></li><li>Governance aepp<ul><li>reddit-style poll ordering algorithm</li><li>each poll show if a delegatee or subdelegatee voted with the power of your stake</li><li>implemented many design updates</li><li>optimize caching in server for a responsive system with the maximum information shown</li></ul></li></ul>\n\n\n\n<p>After this long and informative update, Tito got on stage to share with us his knowledge and experience on Decentralized Finance.  His presentation started with a short evolution of money, from the exchange of goods, through the gold standard and paper money to the digital currencies. It is important to realize the chain of events that led us to the fiat currencies and the dependencies that we have created around money and on money printing organizations like FED, to realize the benefits of Decentralized Finance. </p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"1024\" height=\"762\" src=\"https://hack.bg/wp-content/uploads/2019/09/71498414_379925339620081_4764385845400567808_n-1024x762.jpg\" alt=\"\" class=\"wp-image-1607\" srcset=\"https://hack.bg/wp-content/uploads/2019/09/71498414_379925339620081_4764385845400567808_n-1024x762.jpg 1024w, https://hack.bg/wp-content/uploads/2019/09/71498414_379925339620081_4764385845400567808_n-300x223.jpg 300w, https://hack.bg/wp-content/uploads/2019/09/71498414_379925339620081_4764385845400567808_n-768x571.jpg 768w, https://hack.bg/wp-content/uploads/2019/09/71498414_379925339620081_4764385845400567808_n-774x576.jpg 774w, https://hack.bg/wp-content/uploads/2019/09/71498414_379925339620081_4764385845400567808_n.jpg 2000w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Tito Tiov &#8211; WeiDex</figcaption></figure>\n\n\n\n<p>Before we dive into the details, Tito gave his best to explain to us what Decentralized Finance is, what are the use cases and what can we do on top of &#8220;Money Legos&#8221; as he called the existing DeFi platforms.  </p>\n\n\n\n<p>Let&#8217;s look at them one by one.</p>\n\n\n\n<p>Contrary to the existing monetary system, where the money is printed by a government organization and the printed money is not backed by anything, since the removal of the gold standard, DeFi is based on digital assest and smart contracts build on top of blockchain protocols allowing fully transparent governance and creation of &#8220;money&#8221;, p2p lending and trading.</p>\n\n\n\n<p>During his presentation, Tito introduced us to some of the most advanced protocols build to power the growing market of DeFi dApps. </p>\n\n\n\n<p>First, he spoke about the biggest and most famous app <a href=\"https://makerdao.com/en/\">Maker Dao</a>. Brading itself as &#8220;Transparent and sustainable finance&#8221;. Maker is comprised of a decentralized stablecoin, collateral loans, and community governance.</p>\n\n\n\n<p>Second to Maker by the number of users and revenue was Compound.  <a href=\"https://compound.finance/\">Compound </a>is an open-source, autonomous protocol built for developers, to unlock a universe of new financial applications. Interest and borrowing, for the open financial system.  Their protocol is allowing many to build new and exiting application on top of it.</p>\n\n\n\n<p>In addition, Tito spoke about  <a href=\"https://www.synthetix.io/\">Synthetix</a>, running  Synths, tokens that provide exposure to assets such as gold, Bitcoin, U.S. Dollars, stocks like TESLA, and AAPL within the Ethereum blockchain. And<a href=\"https://instadapp.io/\"> Insta dApp</a>,  Autonomous Banking Portal on Emerging Blockchain-based Financial Protocols.   </p>\n\n\n\n<p>All of the above-mentioned protocols and dApps could be used as building blocks of your future DeFi dApp, instantly and without need to pay additional fees.  One can easily start a new business only by building a fancier UI on top of Compound&#8217;s protocol as Tito mentioned in one of his examples of successful ways to use the existing infrastructure.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"552\" src=\"https://hack.bg/wp-content/uploads/2019/09/image-1024x552.png\" alt=\"\" class=\"wp-image-1608\" srcset=\"https://hack.bg/wp-content/uploads/2019/09/image-1024x552.png 1024w, https://hack.bg/wp-content/uploads/2019/09/image-300x162.png 300w, https://hack.bg/wp-content/uploads/2019/09/image-768x414.png 768w, https://hack.bg/wp-content/uploads/2019/09/image-1038x559.png 1038w, https://hack.bg/wp-content/uploads/2019/09/image.png 1227w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>money legos in practice</figcaption></figure></div>\n\n\n\n<p>As a CEO of WeiDex, Tito shared with us his company experience of using &#8220;money legos&#8221; in practice to boost the liquidity on their multi-chain decentralized exchange. Providing their users with excellent trading experience without the need to spend extra money on market makers and liquidity providers. </p>\n\n\n\n<p>Shortly before the end, Tito walked us through a few smart contacts, showing us how we can build on top of the existing dApps or add them to our products to boost our revenues and to make the user experience richer and nicer.  </p>\n\n\n\n<p>In conclusion, we can say that the meetup was been equally interesting and important for developers, entrepreneurs, and investors giving to each group enough information to spark their interest in Decentralized Finance witch is considered to be the next killer application of blockchain.</p>\n\n\n\n<p> What is your opinion on Defi? Do you believe that blockchain will revolutionize finance?</p>\n\n\n\n<p>\n\nJoin our&nbsp;<a href=\"https://www.meetup.com/Blockchain-Developers-Meetup-Bulgaria/\" rel=\"noreferrer noopener\" target=\"_blank\">meetup group</a>&nbsp;to stay tuned for our next event!\n\n</p>\n","excerpt":"<p>We are deeply moved by our last night meetup and the possibilities that have been discussed on what can be built on top of existing decentralized finance applications. I will try my best to summarise the informative and inspiring talk of our guest speaker Tito Titov from WeiDex for those of you who have missed [&hellip;]</p>\n","categories":[{"id":"5","title":"Events","path":"/category/events/"},{"id":"71","title":"Meet-ups","path":"/category/meetups/"}],"author":{"name":"Hristo Georgiev","path":"/author/hgeorgiev/"}}},{"node":{"date":"2019-05-02T11:46:36","id":"1101","title":"Tips, tricks, and best approaches for developing decentralized applications &#8211; 0x09. [Blockchain Developers Meetup]","path":"/blog/tips-tricks-and-best-approaches-for-developing-decentralized-applications-0x09-blockchain-developers-meetup/","content":"\n<p>Last week we had our monthly blockchain developers meetup.</p>\n\n\n\n<p>This time we were focusing more on the best approaches, tips and tricks for gas optimisation and best practices and architectures when developing decentralized applications.</p>\n\n\n\n<p>Our focus was mostly on Ethereum&#8217;s Solidity and EVM since most people of our community are familiar with it.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://hack.bg/wp-content/uploads/2019/05/meetup09-1024x576.png\" alt=\"\" class=\"wp-image-1112\" srcset=\"https://hack.bg/wp-content/uploads/2019/05/meetup09-1024x576.png 1024w, https://hack.bg/wp-content/uploads/2019/05/meetup09-300x169.png 300w, https://hack.bg/wp-content/uploads/2019/05/meetup09-768x432.png 768w, https://hack.bg/wp-content/uploads/2019/05/meetup09.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Tips, tricks and best approaches when developing decentralized apps &#8211; 0x09 [Blockchain Developers Meetup]</figcaption></figure></div>\n\n\n\n<h2>Developers News</h2>\n\n\n\n<p>As usual we started with covering the news from the development space. We share them all over our channels and groups, but for those who do not follow regularly &#8211; this is what was new during the last month:</p>\n\n\n\n<ul><li>Truffle released new version <a href=\"https://github.com/trufflesuite/truffle/releases/tag/v5.0.13\">v5.0.13</a> – decoder improvements</li><li>Ganache with new release <a href=\"https://github.com/trufflesuite/ganache/releases/tag/v2.0.1\">v2.0.1</a></li><li>Embark &#8211; new beta <a href=\"https://github.com/embark-framework/embark/blob/master/CHANGELOG.md#410-beta0-2019-04-17\">4.1.0-beta.0</a> </li><li><a href=\"https://truffleframework.com/teams\">Truffle Teams</a>, zero-configuration continuous integration for Eth code</li><li><a href=\"https://medium.com/zokrates/building-identity-linked-zksnarks-with-zokrates-a36085cdd40\">ZoKrates v0.4.4</a> – building identity-based snarks. adds BabyJubJub</li><li><a href=\"https://devpost.com/software/zexe-on-ethereum\">ZEXE on Plasma</a> from Edcon hackathon</li><li><a href=\"http://waellet.com\">Waellet</a> &#8211; aeternity browser extension released first initial beta</li><li>Easily <a href=\"https://github.com/status-im/status-chat-widget\">embed a Status chat room</a> in your website</li></ul>\n\n\n\n<h2>Tricks and tips</h2>\n\n\n\n<p>We talked a lot about gas optimization via variables packing, deployment gas optimization, and other interesting tricks. Here&#8217;s some of the tricks and tips we covered:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Any non-trivial contract will have errors in it. Your code must, therefore, be able to respond to bugs and vulnerabilities gracefully.</p><cite><br>Prepare for failure</cite></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>&#8211; Write clean, consistent good code (If you repeat certain operations often, make them a function)<br>&#8211; Move logic to Libraries if appropriate (They are published separately)<br>&#8211; Use modifiers for common checks<br>&#8211; Do as little as possible in the constructor</p><cite>Lowering deployment cost</cite></blockquote>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"672\" height=\"378\" src=\"https://hack.bg/wp-content/uploads/2019/05/modifiers_can_be_inefficient.png\" alt=\"Solidity modifiers can be inefficient\" class=\"wp-image-1116\" srcset=\"https://hack.bg/wp-content/uploads/2019/05/modifiers_can_be_inefficient.png 672w, https://hack.bg/wp-content/uploads/2019/05/modifiers_can_be_inefficient-300x169.png 300w\" sizes=\"(max-width: 672px) 100vw, 672px\" /><figcaption>Solidity Modifiers can be inefficient</figcaption></figure></div>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>When you add a function modifier, the code of that function is picked up and put in the function modifier in place of the _ symbol. This can also be understood as &#8220;The function modifiers are inlined&#8221;. In normal programming languages, inlining small code is more efficient without any real drawback but Solidity is no ordinary language. In Solidity, the maximum size of a contract is restricted to 24 KB<br></p><cite>Modifiers can be inefficient</cite></blockquote>\n\n\n\n<p>The recording will be available soon.</p>\n\n\n\n<h2>Resources</h2>\n\n\n\n<ul><li><a href=\"https://docs.google.com/presentation/d/1TVFNkjoSnhkPvirgi02CrW7_lLdkwBANr5OYV6TQ1Hs/edit?usp=sharing\">Presentation</a></li></ul>\n","excerpt":"<p>Last week we had our monthly blockchain developers meetup. This time we were focusing more on the best approaches, tips and tricks for gas optimisation and best practices and architectures when developing decentralized applications. Our focus was mostly on Ethereum&#8217;s Solidity and EVM since most people of our community are familiar with it. Developers News [&hellip;]</p>\n","categories":[{"id":"71","title":"Meet-ups","path":"/category/meetups/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}},{"node":{"date":"2019-01-16T17:18:35","id":"525","title":"How to boost your business with blockchain? [Part 2]","path":"/blog/how-to-boost-your-business-with-blockchain-part-2/","content":"\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*zdI2UFmpzHMjCTfK\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@samsonyyc?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Samson Creative.</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>In the previous post of this series on how to boost your business with blockchain, we were discussing the fundamentals of blockchain tech. If you have missed it you can find it here:&nbsp;<strong><a href=\"https://hack.bg/blog/blockchain-and-business/how-to-boost-your-business-with-blockchain/\">How to boost your business with blockchain?</a></strong></p>\n\n\n\n<p style=\"text-align:left\">Briefly speaking, we reviewed in a simplified non-technical way the core of blockchain technology and we discussed how you can benefit from integrating it into your business. We came to the conclusion that the main benefit of using blockchain technology is to achieve <strong>trust.</strong></p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*qCfB1Rs_TejfX9bm\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@mmckee30?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Mitch Mckee</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>In the previous post, we concluded that trust is essential for making business and its the essence of blockchain tech, so using blockchain is beneficial for attracting new customers and partners.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>In this post, we are going to discuss whether you should do an ICO or an STO to power your existing business or finance your new business idea.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*ZktwoqxtvERrzPes\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>So let&#8217;s first explain what is ICO and what is STO.</p>\n\n\n\n<p>ICO stands for <a href=\"https://hack.bg/dlt-blockchain-development-services/ico-initial-coin-offering/\">Initial Coin Offering</a> and as many of you had heard it was the main way for non-existing projects to gather an impressive amount of money during those last few years.</p>\n\n\n\n<p>It all started with Ethereum raising money to develop its platform, the one that has become the main platform to make ICO&#8217;s on. The peak was sometime in the middle of last year with projects like Tezos and FileCoin raising as much as 250 millions of dollars from individual investors.&nbsp;</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*li78tZhCpfoqOgA8\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@blankerwahnsinn?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Fabian Blank</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>Even though many of the projects failed to deliver the expected products, either due to lack of technology developments (the main issue being scalability) or by simply disappearing with bags full of money (a.k.a. SCAM) the <strong><em><g class=\"gr_ gr_4 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"4\" data-gr-id=\"4\">ICOs</g> are an “Effective way” to crowdfund your project if rules are followed </em></strong><em>as stated recently by </em>Jay Clayton, chairman of the U.S. Securities and Exchange Commission (SEC). You can find more on the recent article <a href=\"https://www.coindesk.com/icos-are-effective-way-to-raise-capital-if-rules-are-followed-sec-chairman\">from <g class=\"gr_ gr_49 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"49\" data-gr-id=\"49\">coindesk</g></a>.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*Sr6riKSA36oEWnKL\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>Due to a large number of scams and projects that did not manage to deliver, plus the downturn of the market, many proclaimed that the ICO era is over and that the new way to raise money is via an STO. But what is STO?</p>\n\n\n\n<p>STO stands for Security Token Offering and the main difference to the ICO is that the tokens are <strong>Security Tokens</strong>, backed by something tangible like the assets, profits, or revenue of the company. To put it in another way, only accredited investors can participate in the offerings. Their funds are protected by the law and the investors are getting either a part of the company (shares) or part of the company&#8217;s profits (dividends).</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*pFPj1Nd3IiOr7E2G\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<p>Securities laws are well developed and defined in most of <g class=\"gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-del replaceWithoutSep\" id=\"6\" data-gr-id=\"6\">the countries</g>. Thus, Security Tokens would inherit a well build legal framework and structure that would support token buyer rights, protect them from <g class=\"gr_ gr_7 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-del replaceWithoutSep\" id=\"7\" data-gr-id=\"7\">the unfortunate</g> situations and set their expectations right. However, secondary trading and liquidity are comparatively reduced for these tokens, as securities can&#8217;t be traded as freely as the Utility Tokens since securities are subjected to many country-specific restrictions.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/800/0*Th5k_Ex7QrrKM6VR\" alt=\"\"/><figcaption>Photo by <a href=\"https://unsplash.com/@rawpixel?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">rawpixel</a> on&nbsp;<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\" rel=\"noreferrer noopener\" target=\"_blank\">Unsplash</a></figcaption></figure></div>\n\n\n\n<blockquote class=\"wp-block-quote is-style-large\"><p>To wrap it up &#8230; <br></p></blockquote>\n\n\n\n<p>ICOs are a great way to deliver a <strong>utility token</strong> that will power your business by allowing the early &#8220;supporters&#8221; of your idea to use your services at a reduced price.</p>\n\n\n\n<p>STOs are an alternative way to raise money by offering <strong>security tokens, </strong>which are seen as shares of your company, giving rights to dividends or part of your company to the investors.&nbsp;</p>\n\n\n\n<p>Which of both to chose to boost your business depends on your business plan but clearly any of the above can bring you the fresh capital that will allow you to grow your business.&nbsp;</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>If you have a great idea — but you not sure if blockchain technology can be integrated into your business, Get in touch with us at <a href=\"mailto:hello@hack.bg\" rel=\"noreferrer noopener\" target=\"_blank\">hello@hack.bg</a>.</p>\n\n\n\n<p>The full list of our services could be found on our website at <a href=\"https://hack.bg/#services\" rel=\"noreferrer noopener\" target=\"_blank\">https://hack.bg/#services</a></p>\n\n\n\n<p><strong>We<em> bring ideas to life.</em></strong></p>\n","excerpt":"<p>In the previous post of this series on how to boost your business with blockchain, we were discussing the fundamentals of blockchain tech. If you have missed it you can find it here:&nbsp;How to boost your business with blockchain? Briefly speaking, we reviewed in a simplified non-technical way the core of blockchain technology and we [&hellip;]</p>\n","categories":[{"id":"18","title":"Blockchain and Business","path":"/category/blockchain-and-business/"}],"author":{"name":"Hristo Georgiev","path":"/author/hgeorgiev/"}}},{"node":{"date":"2019-01-10T10:59:33","id":"449","title":"Build your first decentralized application (aepp) on Aeternity blockchain &#8211; Sophia ML smart contract &#8211; Address Book","path":"/blog/build-your-first-decentralized-application-aepp-on-aeternity-blockchain-sophia-smart-contract-address-book/","content":"\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity-1024x576.jpg\" alt=\"Sophia aeternity\" class=\"wp-image-500\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity-1024x576.jpg 1024w, https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity-300x169.jpg 300w, https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity-768x432.jpg 768w, https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity-1025x576.jpg 1025w, https://hack.bg/wp-content/uploads/2019/01/sveta_sofia_aeternity.jpg 1334w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Sophia aeternity</figcaption></figure>\n\n\n\n<p class=\"has-drop-cap has-text-align-left\">Æternity blockchain is live after long period of waiting, the community is big and the core developers are top skilled. The project offers smart contracts development platform for decentralized applications dapps or how they call them &#8211; æpps.</p>\n\n\n\n<p class=\"has-text-align-left\">In this tutorial we are going to create a simple smart contract in Sophia ML programming language &#8211; address book <g class=\"gr_ gr_4 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"4\" data-gr-id=\"4\">aepp</g>. We will create, compile, test and deploy the smart contract.<br></p>\n\n\n\n<h2>Prerequisites</h2>\n\n\n\n<ul><li><a href=\"https://docs.docker.com/compose/install/\">Docker</a></li><li><s>Forgae</s> <a href=\"https://www.npmjs.com/package/aeproject\">AEproject</a></li><li><a href=\"https://github.com/aeternity/aepp-cli-js\">Aecli</a> * (optional if we want to do something with the sdk like encode/decode address by publicKey or signTx)</li></ul>\n\n\n\n<p class=\"has-text-align-left\">Docker we need for running local aeternity node for compiling, testing and development environment. Assuming you already have <g class=\"gr_ gr_52 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"52\" data-gr-id=\"52\">docker</g> installed on your machine we move on, if not &#8211; please follow the guide in their official website and then continue with the steps below.</p>\n\n\n\n<p class=\"has-text-align-left\"><g class=\"gr_ gr_6 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"6\" data-gr-id=\"6\"><s>Forgae</s> AEproject</g> is <g class=\"gr_ gr_14 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar multiReplace\" id=\"14\" data-gr-id=\"14\">an æternity</g> development framework which helps with setting up a project. The framework makes the development of smart contracts in the <g class=\"gr_ gr_8 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"8\" data-gr-id=\"8\">aeternity</g> network pretty easily. It provides commands for the compilation of smart contracts, running a local Epoch and unit testing the contracts.<br></p>\n\n\n\n<p class=\"has-text-align-left\">We install it globally via:</p>\n\n\n\n<pre><code>npm install -g aeproject</code></pre>\n\n\n\n<p class=\"has-text-align-left\">After installing <s>forgae</s> AEproject we can verify everything went well with <code>aeproject --help</code> which will also get us familiarize with the commands and options it has.</p>\n\n\n\n<pre><code>Usage: aeproject [options] [command]\n\nOptions:\n  -V, --version      output the version number\n  -h, --help         output usage information\n\nCommands:\n  init [options]     Initialize AEProject\n  compile [options]  Compile contracts\n  test [options]     Running the tests\n  node [options]     Running a local node. Without any argument node will be runned with --start argument\n  deploy [options]   Run deploy script</code></pre>\n\n\n\n<p class=\"has-text-align-left\">We are almost done with the setup. The last tool we need is <code>aecli</code> which is æternity&#8217;s JavaScript SDK command-line interface. It is still not available as <g class=\"gr_ gr_693 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar multiReplace\" id=\"693\" data-gr-id=\"693\">a <g class=\"gr_ gr_691 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"691\" data-gr-id=\"691\">npm</g></g> package, so for us to use it we should clone the repository, install from source and then link it to our local <g class=\"gr_ gr_587 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling\" id=\"587\" data-gr-id=\"587\">npm</g> manually.<br></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>git clone https://github.com/aeternity/aepp-cli-js.git</code></pre>\n\n\n\n<p class=\"has-text-align-left\">We then need to enter into the cloned repository with:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>cd aepp-cli-js</code></pre>\n\n\n\n<p class=\"has-text-align-left\">Run <code>npm link</code> in order to link the AECLI to <code>aecli/bin/aecli.js</code> (<em>If you have any folder permission issues, try running with sudo <code>sudo npm link</code></em>)</p>\n\n\n\n<blockquote class=\"wp-block-quote has-text-align-left\"><p><code>npm link</code> <g class=\"gr_ gr_3 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins doubleReplace replaceWithoutSep\" id=\"3\" data-gr-id=\"3\">command</g> will create a symlink in the global node_modules folder and expose the CLI binary to be used through the terminal.</p><cite>npm link</cite></blockquote>\n\n\n\n<p class=\"has-text-align-left\">and lastly we should run<code>npm install</code> so npm update its packages and symlinks.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>npm install</code></pre>\n\n\n\n<p class=\"has-text-align-left\">Now if everything went well our environment is set and ready to start developing sophia smart contracts on æternity. </p>\n\n\n\n<h3>Project init</h3>\n\n\n\n<p class=\"has-text-align-left\">As always, first we need to create a directory where our project files will be placed:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>mkdir addressbook-aepp</code><br><code>cd addressbook-aepp</code></pre>\n\n\n\n<p class=\"has-text-align-left\">Then we initialize our project with <code>aeproject init</code> which will create for us all the necessary files and directories.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>aeproject init</code></pre>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"837\" height=\"587\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-init-aepp.png\" alt=\"Initialization of aeternity aepp with forgae\" class=\"wp-image-461\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-init-aepp.png 837w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-aepp-300x210.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-aepp-768x539.png 768w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-aepp-821x576.png 821w\" sizes=\"(max-width: 837px) 100vw, 837px\" /><figcaption>Initialization of aeternity aepp with forgae</figcaption></figure></div>\n\n\n\n<p class=\"has-text-align-left\">If we look at our project directory we will see that we now have <strong>contracts</strong>, <strong>deployment</strong>, <strong>test</strong> directories where our focus will mainly be, as well as other config files like package.json and docker-compose.yml.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"837\" height=\"587\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-init-project-directory.png\" alt=\"forgae init project directory\" class=\"wp-image-470\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-init-project-directory.png 837w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-project-directory-300x210.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-project-directory-768x539.png 768w, https://hack.bg/wp-content/uploads/2019/01/forgae-init-project-directory-821x576.png 821w\" sizes=\"(max-width: 837px) 100vw, 837px\" /><figcaption>forgae init project directory</figcaption></figure></div>\n\n\n\n<p class=\"has-text-align-left\">Now we need to <strong>start docker</strong> and then start our local node with:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>aeproject node</code></pre>\n\n\n\n<blockquote class=\"wp-block-quote has-text-align-left\"><p>The <strong>node</strong> command help developers run their <g class=\"gr_ gr_11 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"11\" data-gr-id=\"11\">local  network</g> on docker. The local network contains 3 nodes. To spawn a fully functional <g class=\"gr_ gr_12 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"12\" data-gr-id=\"12\">network  takes</g> <g class=\"gr_ gr_8 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins replaceWithoutSep\" id=\"8\" data-gr-id=\"8\">couple</g> of minutes. At the end of this <g class=\"gr_ gr_9 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-ins replaceWithoutSep\" id=\"9\" data-gr-id=\"9\">command</g> you will <g class=\"gr_ gr_13 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"13\" data-gr-id=\"13\">be  presented</g> with accounts that you can use in your unit tests.</p><cite>documentation</cite></blockquote>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"837\" height=\"587\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-node.png\" alt=\"forgae node initialized successfully\" class=\"wp-image-468\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-node.png 837w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-300x210.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-768x539.png 768w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-821x576.png 821w\" sizes=\"(max-width: 837px) 100vw, 837px\" /><figcaption>forgae node initialized successfully</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"837\" height=\"587\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-node-funding.png\" alt=\"forgae node gives us preset test accounts\" class=\"wp-image-469\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-node-funding.png 837w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-funding-300x210.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-funding-768x539.png 768w, https://hack.bg/wp-content/uploads/2019/01/forgae-node-funding-821x576.png 821w\" sizes=\"(max-width: 837px) 100vw, 837px\" /><figcaption>forgae node gives us preset test accounts</figcaption></figure></div>\n\n\n\n<p class=\"has-text-align-left\">To stop the local node, simply run</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>aeproject node --stop</code></pre>\n\n\n\n<p>Additionally we need to start the local compiler the same way as we start the node.</p>\n\n\n\n<p><code>aeproject compiler</code></p>\n\n\n\n<h2>Write Sophia ML smart contracts</h2>\n\n\n\n<p class=\"has-text-align-left\">When we initialized our project with <code>aeproject init</code> it automatically created for us an <code>ExampleContract.aes</code> file, which name speaks for what it is. Its content looks like this:<br></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>@compiler &gt;= 4\ncontract ExampleContract =\n    type state = ()\n    function main(x : int) = x</code></pre>\n\n\n\n<p class=\"has-text-align-left\">This example contract has one function which accepts a single argument of <g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"4\" data-gr-id=\"4\">type </g><code>int</code><g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"4\" data-gr-id=\"4\"> and</g> returns the value of the passed <g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"5\" data-gr-id=\"5\">argument </g><code>x</code><g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"5\" data-gr-id=\"5\">.</g></p>\n\n\n\n<p class=\"has-text-align-left\">If this is your first time looking at Sophia smart contract, you probably notice that it is quite different from Solidity for example, and looks much similar to Python. </p>\n\n\n\n<p class=\"has-text-align-left\"><g class=\"gr_ gr_4 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"4\" data-gr-id=\"4\">Aeternity&#8217;s</g> Sophia is <g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar multiReplace\" id=\"5\" data-gr-id=\"5\">a ML</g>-family language. It is strongly typed and has restricted mutable state. <a href=\"https://github.com/aeternity/protocol/blob/master/contracts/sophia.md\">Sophia</a> is developed to be used for creating smart contracts on Aeternity Blockchain, so some of the conventional languages&#8217; features are missing, but other blockchain specific primitives, types and constructions are added and supported.</p>\n\n\n\n<p class=\"has-text-align-left\">Okay, we move on to the fun part. We now hit the delete button and get rid of the <code>ExampleContract.aes</code>. </p>\n\n\n\n<p class=\"has-text-align-left\">We create our <code>AddressBook.aes</code> sophia smart contract in the <code>contracts</code>folder and open it with our favorite editor (in my case VIM).</p>\n\n\n\n<p class=\"has-text-align-left\">We define the name of our smart contract, following the example above:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>contract AddressBook =<br><br></code></pre>\n\n\n\n<p class=\"note\">Note: Indentation is important in Sophia language, so keep that in mind.</p>\n\n\n\n<p class=\"has-text-align-left\">Sophia uses Python-style layout rules to group declarations and statements. A\nlayout block with more than one element must start on a separate line and be\nindented more than the currently enclosing layout block. Blocks with a single\nelement can be written on the same line as the previous token.</p>\n\n\n\n<p class=\"has-text-align-left\">Each element of the block must share the same indentation and no part of an element may be indented less than the indentation of the block.</p>\n\n\n\n<p class=\"has-text-align-left\">Okay, the first thing we do after that is defining our person and state records and create the <code>init</code>function.<br></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>@compiler >= 4\ncontract AddressBook =\n\n   record person =\n     { first_name : string\n     , last_name : string\n     , age : int }\n\n   record state  = { people : map(address, person) }\n\n   entrypoint init() = { people = {} }</code></pre>\n\n\n\n<p class=\"has-text-align-left\">Let us focus on some info from the sophia documentation so we know what we&#8217;ve done so far:</p>\n\n\n\n<p class=\"has-text-align-left\">Sophia does not have arbitrary mutable state, but only a limited form of\nstate associated with each contract instance.</p>\n\n\n\n<ul><li>Each contract defines a type <code>state</code> encapsulating its mutable state.</li><li>The initial state of a contract is computed by the contract&#8217;s <code>init</code>\nfunction. The <code>init</code> function is <em>pure</em> and returns the initial state as its\nreturn value. At contract creation time, the <code>init</code> function is executed and\nits result is stored as the contract state.</li><li>The value of the state is accessible from inside the contract\nthrough an implicitly bound variable <code>state</code>.</li><li>State updates are performed by calling a function <code>put : state =&gt; ()</code>.</li><li>Aside from the <code>put</code> function (and similar functions for transactions\nand events), the language is purely functional.</li><li>Functions modifying the state need to be annotated with the <code>stateful</code> keyword.</li></ul>\n\n\n\n<blockquote class=\"wp-block-quote has-text-align-left\"><p>A contract may define a type state encapsulating its local state. The state must be initialised when instantiating a contract. This is done by the init function which can take arbitrary arguments and is called on contract instance creation.<br></p><cite>sophia documentation</cite></blockquote>\n\n\n\n<p class=\"has-text-align-left\">We now have to create setter function for saving person&#8217;s details, and getter functions for getting them.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>   stateful entrypoint add_person(person_address: address, first_name': string, last_name': string, age: int) =\n      let new_person : person =\n         { first_name = first_name',\n           last_name = last_name',\n           age = age }\n      put(state{ people[person_address] = new_person })</code></pre>\n\n\n\n<p class=\"has-text-align-left\"><s>For</s> our <s>getter </s><g class=\"gr_ gr_31 gr-alert gr_gramm gr_inline_cards gr_run_anim Punctuation only-ins replaceWithoutSep\" id=\"31\" data-gr-id=\"31\"><s>functions</s></g><s> we will need a helper function which will allow us to easily search in </s><g class=\"gr_ gr_149 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-del replaceWithoutSep\" id=\"149\" data-gr-id=\"149\"><s>the </s></g><code>map</code><g class=\"gr_ gr_149 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-del replaceWithoutSep\" id=\"149\" data-gr-id=\"149\"> <s>we</s></g><s>&#8216;ve created</s>.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code><strike>function lookupByAddress(k : address, m, v) =\n      switch(Map.lookup(k, m))\n         None    =&gt; v\n         Some(x) =&gt; x</strike></code></pre>\n\n\n\n<p class=\"has-text-align-left\">and our getters:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>   entrypoint get_person(person_address : <em>address</em>) : person = \n      switch(Map.lookup(person_address, <em>state</em>.people))\n         <em>None</em> =&gt; abort(\"No data for that person\")\n         <em>Some</em>(person_found) =&gt; person_found</code></pre>\n\n\n\n<p class=\"has-text-align-left\">Now we are done with the smart contract. It should look like this:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/87bd736e39440155873a973426a548a8.js\"></script><figcaption>AddressBook.aes &#8211; aeternity smart contract</figcaption></figure>\n\n\n\n<h2>Compile Sophia ML contracts</h2>\n\n\n\n<p class=\"has-text-align-left\">Compiling sophia smart contracts is done via:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>aeproject compile</code></pre>\n\n\n\n<p class=\"has-text-align-left\">And if everything went well we should see a similar output</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"793\" height=\"543\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-compile-output.png\" alt=\"Compiling sophia smart contract\" class=\"wp-image-486\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-compile-output.png 793w, https://hack.bg/wp-content/uploads/2019/01/forgae-compile-output-300x205.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-compile-output-768x526.png 768w\" sizes=\"(max-width: 793px) 100vw, 793px\" /><figcaption>Compiling sophia smart contract</figcaption></figure></div>\n\n\n\n<blockquote class=\"wp-block-quote has-text-align-left\"><p><g class=\"gr_ gr_14 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"14\" data-gr-id=\"14\">The </g><strong><code>compile</code></strong><g class=\"gr_ gr_14 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"14\" data-gr-id=\"14\"> command</g> compiles Sophia contract. It&#8217;s recommended to <g class=\"gr_ gr_31 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"31\" data-gr-id=\"31\">use </g><strong><code>.aes</code></strong><g class=\"gr_ gr_31 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"31\" data-gr-id=\"31\"> <g class=\"gr_ gr_30 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-ins replaceWithoutSep\" id=\"30\" data-gr-id=\"30\">file</g></g> extension. <g class=\"gr_ gr_52 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-ins replaceWithoutSep\" id=\"52\" data-gr-id=\"52\">Default</g> directory <g class=\"gr_ gr_60 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"60\" data-gr-id=\"60\">is </g><code>$projectDir/contracts</code><g class=\"gr_ gr_60 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"60\" data-gr-id=\"60\">.</g> The result of the compilation is the contract bytecode printed in the console. <g class=\"gr_ gr_44 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-ins doubleReplace replaceWithoutSep\" id=\"44\" data-gr-id=\"44\">Additional</g> <strong><code>--path</code></strong> parameter is available, which can specify the path to the contract to be compiled.</p></blockquote>\n\n\n\n<h2>Writing Unit Tests<br></h2>\n\n\n\n<p class=\"has-text-align-left\">First, we need to edit our deployment script, so it knows which contracts should be using. We only replace <g class=\"gr_ gr_170 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"170\" data-gr-id=\"170\"><g class=\"gr_ gr_104 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del\" id=\"104\" data-gr-id=\"104\">the</g> </g><code>ExampleContract</code><g class=\"gr_ gr_170 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"170\" data-gr-id=\"170\"> with</g> our <g class=\"gr_ gr_171 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"171\" data-gr-id=\"171\">own </g><code>AddressBook</code><g class=\"gr_ gr_171 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"171\" data-gr-id=\"171\"> </g><g class=\"gr_ gr_172 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"172\" data-gr-id=\"172\"><g class=\"gr_ gr_171 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"171\" data-gr-id=\"171\">in</g> </g><code>./deployments/deploy.js</code><g class=\"gr_ gr_172 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"172\" data-gr-id=\"172\">.</g> It should now look like this:</p>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/6040c299a84fea0c81217e8721d11fd8.js\"></script><figcaption>AddressBook.aes deployment script</figcaption></figure>\n\n\n\n<p style=\"text-align:left\"><strike>You probably have noticed that we pass the <code>address</code> as <code>0xe9bbf604e611b5460a3b3999e9771b6f60417d73ce7c5519e12f7e127a1225ca</code> instead of aeternity&#8217;s <code>ak_2mwRmUeYmfuW93ti9HMSUJzCk1EYcQEfikVSzgo6k2VghsWhgU</code>. That is because sophia is using the bytes hex representation of our base58 encoded address. We can use <code>aecli</code> to decode our address and prepend <code>0x</code> afterwards :</strike></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><strike><code>aecli crypto decode ak_2mwRmUeYmfuW93ti9HMSUJzCk1EYcQEfikVSzgo6k2VghsWhgU</code></strike></pre>\n\n\n\n<p class=\"has-text-align-left\"><s>We should receive this output:</s></p>\n\n\n\n<blockquote class=\"wp-block-quote has-text-align-left\"><p><strike>Decoded address (hex): e9bbf604e611b5460a3b3999e9771b6f60417d73ce7c5519e12f7e127a1225ca</strike></p></blockquote>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"809\" height=\"349\" src=\"https://hack.bg/wp-content/uploads/2019/01/aecli-crypto-decode.png\" alt=\"aecli crypto decode aeternity address\" class=\"wp-image-493\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/aecli-crypto-decode.png 809w, https://hack.bg/wp-content/uploads/2019/01/aecli-crypto-decode-300x129.png 300w, https://hack.bg/wp-content/uploads/2019/01/aecli-crypto-decode-768x331.png 768w\" sizes=\"(max-width: 809px) 100vw, 809px\" /><figcaption>aecli crypto decode aeternity address</figcaption></figure></div>\n\n\n\n<p class=\"has-text-align-left\">Writing unit test for aeternity sophia smart contract is similar to writing unit tests for Ethereum solidity smart contract.</p>\n\n\n\n<p class=\"has-text-align-left\"><strike>The interesting and thing is passing arguments to functions. As you can see, we are now passing <g class=\"gr_ gr_12 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-del replaceWithoutSep\" id=\"12\" data-gr-id=\"12\">the our</g> args<code>address</code><g class=\"gr_ gr_17 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"17\" data-gr-id=\"17\">,</g><code>first_name</code><g class=\"gr_ gr_17 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"17\" data-gr-id=\"17\">,</g><code>last_name</code><g class=\"gr_ gr_17 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"17\" data-gr-id=\"17\">,</g> <g class=\"gr_ gr_25 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"25\" data-gr-id=\"25\">and </g><code>age</code><g class=\"gr_ gr_25 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"25\" data-gr-id=\"25\"> as</g> tuple string.</strike></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><strike>      args: `(${address}, \"${first_name}\", \"${last_name}\", ${age})`,</strike></pre>\n\n\n\n<p class=\"note\"><em>Note</em>: If you are passing <g class=\"gr_ gr_13 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins doubleReplace replaceWithoutSep\" id=\"13\" data-gr-id=\"13\">string</g>, do not forget to add quotes (<code>\"</code>) around the string too (<code>(\"Some string\")</code>). More than one parameter can be passed separated by coma (<code>(\"Some string\", 123, 45, \"Other string\")</code>))deploy</p>\n\n\n\n<p class=\"has-text-align-left\"><strike>Another quite handy thing is that the function call result comes with <g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"5\" data-gr-id=\"5\">built </g><g class=\"gr_ gr_91 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"91\" data-gr-id=\"91\"><g class=\"gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"5\" data-gr-id=\"5\">in</g> </g><code>decode()</code><g class=\"gr_ gr_91 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"91\" data-gr-id=\"91\"> function</g>, which you can use for decoding the function output by passing the type you want to decode it to e.g. primitives like <code>int</code> , <code>string</code> <g class=\"gr_ gr_93 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"93\" data-gr-id=\"93\">or </g><code>bool</code><g class=\"gr_ gr_93 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"93\" data-gr-id=\"93\">.</g> This is quite important for our unit tests so we know how we are going to <code>assert</code> the results.</strike></p>\n\n\n\n<pre class=\"wp-block-preformatted\"><s>    const addPersonResult = await addPerson.decode('bool');</s></pre>\n\n\n\n<figure><script src=\"https://gist.github.com/mradkov/2d679aadd9cabc1ac296399354c87562.js\"></script><figcaption>AddressBook aepp unit tests</figcaption></figure>\n\n\n\n<p class=\"has-text-align-left\">Now if we run <code>aeproject test</code> we should see our unit tests output:</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><code>aeproject test</code></pre>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"837\" height=\"587\" src=\"https://hack.bg/wp-content/uploads/2019/01/forgae-test-sophia-unit-tests.png\" alt=\"forgae test output - addressbook aepp\" class=\"wp-image-491\" srcset=\"https://hack.bg/wp-content/uploads/2019/01/forgae-test-sophia-unit-tests.png 837w, https://hack.bg/wp-content/uploads/2019/01/forgae-test-sophia-unit-tests-300x210.png 300w, https://hack.bg/wp-content/uploads/2019/01/forgae-test-sophia-unit-tests-768x539.png 768w, https://hack.bg/wp-content/uploads/2019/01/forgae-test-sophia-unit-tests-821x576.png 821w\" sizes=\"(max-width: 837px) 100vw, 837px\" /><figcaption>forgae test output &#8211; addressbook aepp</figcaption></figure></div>\n\n\n\n<h2>Conclusion</h2>\n\n\n\n<p class=\"has-text-align-left\">Writing smart contracts on Sophia is very intuitive if you have previous experience writing smart contracts or experience with programming languages like Python.<br></p>\n\n\n\n<p class=\"has-text-align-left\">We will continue this series with some more sophisticated examples which will include deployment on testnet and mainnet and more soon. If you don&#8217;t want to miss the new content &#8211; join our <a href=\"http://eepurl.com/gcxyRj\">newsletter</a> to receive all our new content.</p>\n\n\n\n<h3>Useful links</h3>\n\n\n\n<ul><li><a href=\"https://meetup.com/blockchain-developers-meetup-bulgaria\">Blockchain Developers Meetup</a></li><li><a href=\"https://facebook.com/BlockchainDevelopersMeetup\">FacebookGroup</a></li><li><a href=\"http://linkedin.com/company/hack-blockchain-development/\">LinkedIn</a></li><li><a href=\"https://twitter.com/hack_bg\">Twitter</a></li></ul>\n\n\n\n<h4>Resources</h4>\n\n\n\n<ul><li><a href=\"http://github.com/mradkov/addressbook-aepp-aeternity\">AddressBook <g class=\"gr_ gr_6 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"6\" data-gr-id=\"6\">aepp</g> &#8211; Github Repo of the project</a></li><li><a href=\"https://github.com/aeternity/protocol\">Aeternity protocol <g class=\"gr_ gr_7 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling ins-del multiReplace\" id=\"7\" data-gr-id=\"7\">github</g></a></li><li><a href=\"http://forum.aeternity.com/\">Aeternity forum</a></li></ul>\n","excerpt":"<p>Æternity blockchain is live after long period of waiting, the community is big and the core developers are top skilled. The project offers smart contracts development platform for decentralized applications dapps or how they call them &#8211; æpps. In this tutorial we are going to create a simple smart contract in Sophia ML programming language [&hellip;]</p>\n","categories":[{"id":"4","title":"Tutorials","path":"/category/tutorials/"}],"author":{"name":"Milen Radkov","path":"/author/milen/"}}}]}}},"context":{}}